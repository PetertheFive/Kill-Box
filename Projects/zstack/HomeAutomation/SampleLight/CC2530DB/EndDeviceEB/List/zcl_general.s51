///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              08/Jul/2020  09:51:40
// Copyright 2004-2018 IAR Systems AB.
// Evaluation license - IAR Embedded Workbench for 8051, Evaluation edition 10.30
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Z-Stack Home 1.2.2a.44539\Components\stack\zcl\zcl_general.c
//    Command line       =  
//        -f C:\Users\Peter.Wu\AppData\Local\Temp\EW63A9.tmp ("C:\Z-Stack Home
//        1.2.2a.44539\Components\stack\zcl\zcl_general.c" -D SECURE=1 -D
//        TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D xPOWER_SAVING -D
//        NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D MT_APP_FUNC -D MT_SYS_FUNC -D
//        MT_ZDO_FUNC -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_WRITE -D
//        ZCL_REPORT -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF -D ZCL_SCENES
//        -D ZCL_GROUPS -D xZCL_LEVEL_CTRL -D ZCL_DIAGNOSTIC -D
//        FEATURE_SYSTEM_STATS -lC "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\EndDeviceEB\List"
//        -lA "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\EndDeviceEB\List"
//        --diag_suppress Pe001,Pa010 -o "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\EndDeviceEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xD882
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x05, 0x69, 0x67, 0x42,
//        0x65, 0x65, 0x41, 0x6C, 0x6C, 0x69, 0x61, 0x6E, 0x63, 0x65, 0x30,
//        0x39}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\" -I
//        "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\Source\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\Source\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        C:\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\EndDeviceEB\List\zcl_general.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_general

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V1
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_DIV_MOD
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?VB
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN __INIT_XDATA_Z

        FUNCTION `??zclGeneral_AddGroup::?relay`,0203H
        PUBLIC `??zclGeneral_AddScene::?relay`
        FUNCTION `??zclGeneral_AddScene::?relay`,0203H
        PUBLIC `??zclGeneral_CountAllScenes::?relay`
        FUNCTION `??zclGeneral_CountAllScenes::?relay`,0203H
        PUBLIC `??zclGeneral_CountScenes::?relay`
        FUNCTION `??zclGeneral_CountScenes::?relay`,0203H
        PUBLIC `??zclGeneral_FindAllScenesForGroup::?relay`
        FUNCTION `??zclGeneral_FindAllScenesForGroup::?relay`,0203H
        PUBLIC `??zclGeneral_FindScene::?relay`
        FUNCTION `??zclGeneral_FindScene::?relay`,0203H
        FUNCTION `??zclGeneral_HdlInSpecificCommands::?relay`,0203H
        FUNCTION `??zclGeneral_HdlIncoming::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInGroupsClient::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInGroupsServer::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInIdentity::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInScenesClient::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInScenesServer::?relay`,0203H
        PUBLIC `??zclGeneral_ReadSceneCountCB::?relay`
        FUNCTION `??zclGeneral_ReadSceneCountCB::?relay`,0203H
        PUBLIC `??zclGeneral_RegisterCmdCallbacks::?relay`
        FUNCTION `??zclGeneral_RegisterCmdCallbacks::?relay`,0203H
        PUBLIC `??zclGeneral_RemoveAllScenes::?relay`
        FUNCTION `??zclGeneral_RemoveAllScenes::?relay`,0203H
        PUBLIC `??zclGeneral_RemoveScene::?relay`
        FUNCTION `??zclGeneral_RemoveScene::?relay`,0203H
        PUBLIC `??zclGeneral_ScenesInit::?relay`
        FUNCTION `??zclGeneral_ScenesInit::?relay`,0203H
        PUBLIC `??zclGeneral_ScenesSave::?relay`
        FUNCTION `??zclGeneral_ScenesSave::?relay`,0203H
        FUNCTION `??zclGeneral_ScenesWriteNV::?relay`,0203H
        PUBLIC `??zclGeneral_SendAddGroupRequest::?relay`
        FUNCTION `??zclGeneral_SendAddGroupRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendAddSceneRequest::?relay`
        FUNCTION `??zclGeneral_SendAddSceneRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendGroupGetMembershipRequest::?re`
        FUNCTION `??zclGeneral_SendGroupGetMembershipRequest::?re`,0203H
        PUBLIC `??zclGeneral_SendGroupRequest::?relay`
        FUNCTION `??zclGeneral_SendGroupRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendGroupResponse::?relay`
        FUNCTION `??zclGeneral_SendGroupResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendGroupViewResponse::?relay`
        FUNCTION `??zclGeneral_SendGroupViewResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentify::?relay`
        FUNCTION `??zclGeneral_SendIdentify::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentifyEZModeInvoke::?relay`
        FUNCTION `??zclGeneral_SendIdentifyEZModeInvoke::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentifyQueryResponse::?relay`
        FUNCTION `??zclGeneral_SendIdentifyQueryResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentifyUpdateCommState::?rela`
        FUNCTION `??zclGeneral_SendIdentifyUpdateCommState::?rela`,0203H
        PUBLIC `??zclGeneral_SendSceneGetMembershipResponse::?r`
        FUNCTION `??zclGeneral_SendSceneGetMembershipResponse::?r`,0203H
        PUBLIC `??zclGeneral_SendSceneRequest::?relay`
        FUNCTION `??zclGeneral_SendSceneRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendSceneResponse::?relay`
        FUNCTION `??zclGeneral_SendSceneResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendSceneViewRsp::?relay`
        FUNCTION `??zclGeneral_SendSceneViewRsp::?relay`,0203H
        FUNCTION zclGeneral_AddGroup,0a1203H
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC zclGeneral_AddScene
        FUNCTION zclGeneral_AddScene,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC zclGeneral_CountAllScenes
        FUNCTION zclGeneral_CountAllScenes,0203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_CountScenes
        FUNCTION zclGeneral_CountScenes,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_FindAllScenesForGroup
        FUNCTION zclGeneral_FindAllScenesForGroup,080203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclGeneral_FindScene
        FUNCTION zclGeneral_FindScene,080203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION zclGeneral_HdlInSpecificCommands,0a1203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION zclGeneral_HdlIncoming,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ProcessInGroupsClient,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 53, STACK
        FUNCTION zclGeneral_ProcessInGroupsServer,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 83, STACK
        FUNCTION zclGeneral_ProcessInIdentity,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclGeneral_ProcessInScenesClient,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 90, STACK
        FUNCTION zclGeneral_ProcessInScenesServer,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 89, STACK
        PUBLIC zclGeneral_ReadSceneCountCB
        FUNCTION zclGeneral_ReadSceneCountCB,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclGeneral_RegisterCmdCallbacks
        FUNCTION zclGeneral_RegisterCmdCallbacks,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclGeneral_RemoveAllScenes
        FUNCTION zclGeneral_RemoveAllScenes,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 13, STACK
        PUBLIC zclGeneral_RemoveScene
        FUNCTION zclGeneral_RemoveScene,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC zclGeneral_ScenesInit
        FUNCTION zclGeneral_ScenesInit,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 72, STACK
        PUBLIC zclGeneral_ScenesSave
        FUNCTION zclGeneral_ScenesSave,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ScenesWriteNV,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 73, STACK
        PUBLIC zclGeneral_SendAddGroupRequest
        FUNCTION zclGeneral_SendAddGroupRequest,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclGeneral_SendAddSceneRequest
        FUNCTION zclGeneral_SendAddSceneRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC zclGeneral_SendGroupGetMembershipRequest
        FUNCTION zclGeneral_SendGroupGetMembershipRequest,0a1203H
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclGeneral_SendGroupRequest
        FUNCTION zclGeneral_SendGroupRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendGroupResponse
        FUNCTION zclGeneral_SendGroupResponse,0a1203H
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendGroupViewResponse
        FUNCTION zclGeneral_SendGroupViewResponse,0a1203H
        ARGFRAME XSTACK, 79, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclGeneral_SendIdentify
        FUNCTION zclGeneral_SendIdentify,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyEZModeInvoke
        FUNCTION zclGeneral_SendIdentifyEZModeInvoke,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendIdentifyQueryResponse
        FUNCTION zclGeneral_SendIdentifyQueryResponse,0a1203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyUpdateCommState
        FUNCTION zclGeneral_SendIdentifyUpdateCommState,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendSceneGetMembershipResponse
        FUNCTION zclGeneral_SendSceneGetMembershipResponse,0a1203H
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC zclGeneral_SendSceneRequest
        FUNCTION zclGeneral_SendSceneRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendSceneResponse
        FUNCTION zclGeneral_SendSceneResponse,0a1203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendSceneViewRsp
        FUNCTION zclGeneral_SendSceneViewRsp,0a1203H
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
aps_AddGroup        SYMBOL "aps_AddGroup"
`??aps_AddGroup::?relay` SYMBOL "?relay", aps_AddGroup
aps_CountAllGroups  SYMBOL "aps_CountAllGroups"
`??aps_CountAllGroups::?relay` SYMBOL "?relay", aps_CountAllGroups
aps_FindAllGroupsForEndpoint SYMBOL "aps_FindAllGroupsForEndpoint"
`??aps_FindAllGroupsForEndpoint::?relay` SYMBOL "?relay", aps_FindAllGroupsForEndpoint
aps_FindGroup       SYMBOL "aps_FindGroup"
`??aps_FindGroup::?relay` SYMBOL "?relay", aps_FindGroup
aps_RemoveAllGroup  SYMBOL "aps_RemoveAllGroup"
`??aps_RemoveAllGroup::?relay` SYMBOL "?relay", aps_RemoveAllGroup
aps_RemoveGroup     SYMBOL "aps_RemoveGroup"
`??aps_RemoveGroup::?relay` SYMBOL "?relay", aps_RemoveGroup
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_nv_item_init   SYMBOL "osal_nv_item_init"
`??osal_nv_item_init::?relay` SYMBOL "?relay", osal_nv_item_init
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
zcl_ReadAttrData    SYMBOL "zcl_ReadAttrData"
`??zcl_ReadAttrData::?relay` SYMBOL "?relay", zcl_ReadAttrData
zcl_SendCommand     SYMBOL "zcl_SendCommand"
`??zcl_SendCommand::?relay` SYMBOL "?relay", zcl_SendCommand
zcl_SendDefaultRspCmd SYMBOL "zcl_SendDefaultRspCmd"
`??zcl_SendDefaultRspCmd::?relay` SYMBOL "?relay", zcl_SendDefaultRspCmd
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
`??zcl_registerPlugin::?relay` SYMBOL "?relay", zcl_registerPlugin
zclGeneral_AddScene SYMBOL "zclGeneral_AddScene"
`??zclGeneral_AddScene::?relay` SYMBOL "?relay", zclGeneral_AddScene
zclGeneral_CountAllScenes SYMBOL "zclGeneral_CountAllScenes"
`??zclGeneral_CountAllScenes::?relay` SYMBOL "?relay", zclGeneral_CountAllScenes
zclGeneral_CountScenes SYMBOL "zclGeneral_CountScenes"
`??zclGeneral_CountScenes::?relay` SYMBOL "?relay", zclGeneral_CountScenes
zclGeneral_FindAllScenesForGroup SYMBOL "zclGeneral_FindAllScenesForGroup"
`??zclGeneral_FindAllScenesForGroup::?relay` SYMBOL "?relay", zclGeneral_FindAllScenesForGroup
zclGeneral_FindScene SYMBOL "zclGeneral_FindScene"
`??zclGeneral_FindScene::?relay` SYMBOL "?relay", zclGeneral_FindScene
zclGeneral_ReadSceneCountCB SYMBOL "zclGeneral_ReadSceneCountCB"
`??zclGeneral_ReadSceneCountCB::?relay` SYMBOL "?relay", zclGeneral_ReadSceneCountCB
zclGeneral_RegisterCmdCallbacks SYMBOL "zclGeneral_RegisterCmdCallbacks"
`??zclGeneral_RegisterCmdCallbacks::?relay` SYMBOL "?relay", zclGeneral_RegisterCmdCallbacks
zclGeneral_RemoveAllScenes SYMBOL "zclGeneral_RemoveAllScenes"
`??zclGeneral_RemoveAllScenes::?relay` SYMBOL "?relay", zclGeneral_RemoveAllScenes
zclGeneral_RemoveScene SYMBOL "zclGeneral_RemoveScene"
`??zclGeneral_RemoveScene::?relay` SYMBOL "?relay", zclGeneral_RemoveScene
zclGeneral_ScenesInit SYMBOL "zclGeneral_ScenesInit"
`??zclGeneral_ScenesInit::?relay` SYMBOL "?relay", zclGeneral_ScenesInit
zclGeneral_ScenesSave SYMBOL "zclGeneral_ScenesSave"
`??zclGeneral_ScenesSave::?relay` SYMBOL "?relay", zclGeneral_ScenesSave
zclGeneral_SendAddGroupRequest SYMBOL "zclGeneral_SendAddGroupRequest"
`??zclGeneral_SendAddGroupRequest::?relay` SYMBOL "?relay", zclGeneral_SendAddGroupRequest
zclGeneral_SendAddSceneRequest SYMBOL "zclGeneral_SendAddSceneRequest"
`??zclGeneral_SendAddSceneRequest::?relay` SYMBOL "?relay", zclGeneral_SendAddSceneRequest
zclGeneral_SendGroupGetMembershipRequest SYMBOL "zclGeneral_SendGroupGetMembershipRequest"
`??zclGeneral_SendGroupGetMembershipRequest::?re` SYMBOL "?relay", zclGeneral_SendGroupGetMembershipRequest
zclGeneral_SendGroupRequest SYMBOL "zclGeneral_SendGroupRequest"
`??zclGeneral_SendGroupRequest::?relay` SYMBOL "?relay", zclGeneral_SendGroupRequest
zclGeneral_SendGroupResponse SYMBOL "zclGeneral_SendGroupResponse"
`??zclGeneral_SendGroupResponse::?relay` SYMBOL "?relay", zclGeneral_SendGroupResponse
zclGeneral_SendGroupViewResponse SYMBOL "zclGeneral_SendGroupViewResponse"
`??zclGeneral_SendGroupViewResponse::?relay` SYMBOL "?relay", zclGeneral_SendGroupViewResponse
zclGeneral_SendIdentify SYMBOL "zclGeneral_SendIdentify"
`??zclGeneral_SendIdentify::?relay` SYMBOL "?relay", zclGeneral_SendIdentify
zclGeneral_SendIdentifyEZModeInvoke SYMBOL "zclGeneral_SendIdentifyEZModeInvoke"
`??zclGeneral_SendIdentifyEZModeInvoke::?relay` SYMBOL "?relay", zclGeneral_SendIdentifyEZModeInvoke
zclGeneral_SendIdentifyQueryResponse SYMBOL "zclGeneral_SendIdentifyQueryResponse"
`??zclGeneral_SendIdentifyQueryResponse::?relay` SYMBOL "?relay", zclGeneral_SendIdentifyQueryResponse
zclGeneral_SendIdentifyUpdateCommState SYMBOL "zclGeneral_SendIdentifyUpdateCommState"
`??zclGeneral_SendIdentifyUpdateCommState::?rela` SYMBOL "?relay", zclGeneral_SendIdentifyUpdateCommState
zclGeneral_SendSceneGetMembershipResponse SYMBOL "zclGeneral_SendSceneGetMembershipResponse"
`??zclGeneral_SendSceneGetMembershipResponse::?r` SYMBOL "?relay", zclGeneral_SendSceneGetMembershipResponse
zclGeneral_SendSceneRequest SYMBOL "zclGeneral_SendSceneRequest"
`??zclGeneral_SendSceneRequest::?relay` SYMBOL "?relay", zclGeneral_SendSceneRequest
zclGeneral_SendSceneResponse SYMBOL "zclGeneral_SendSceneResponse"
`??zclGeneral_SendSceneResponse::?relay` SYMBOL "?relay", zclGeneral_SendSceneResponse
zclGeneral_SendSceneViewRsp SYMBOL "zclGeneral_SendSceneViewRsp"
`??zclGeneral_SendSceneViewRsp::?relay` SYMBOL "?relay", zclGeneral_SendSceneViewRsp

        EXTERN `??aps_AddGroup::?relay`
        FUNCTION `??aps_AddGroup::?relay`,00H
        EXTERN `??aps_CountAllGroups::?relay`
        FUNCTION `??aps_CountAllGroups::?relay`,00H
        EXTERN `??aps_FindAllGroupsForEndpoint::?relay`
        FUNCTION `??aps_FindAllGroupsForEndpoint::?relay`,00H
        EXTERN `??aps_FindGroup::?relay`
        FUNCTION `??aps_FindGroup::?relay`,00H
        EXTERN `??aps_RemoveAllGroup::?relay`
        FUNCTION `??aps_RemoveAllGroup::?relay`,00H
        EXTERN `??aps_RemoveGroup::?relay`
        FUNCTION `??aps_RemoveGroup::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_nv_item_init::?relay`
        FUNCTION `??osal_nv_item_init::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??zcl_ReadAttrData::?relay`
        FUNCTION `??zcl_ReadAttrData::?relay`,00H
        EXTERN `??zcl_SendCommand::?relay`
        FUNCTION `??zcl_SendCommand::?relay`,00H
        EXTERN `??zcl_SendDefaultRspCmd::?relay`
        FUNCTION `??zcl_SendDefaultRspCmd::?relay`,00H
        EXTERN `??zcl_registerPlugin::?relay`
        FUNCTION `??zcl_registerPlugin::?relay`,00H
        EXTERN aps_AddGroup
        FUNCTION aps_AddGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_CountAllGroups
        FUNCTION aps_CountAllGroups,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindAllGroupsForEndpoint
        FUNCTION aps_FindAllGroupsForEndpoint,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindGroup
        FUNCTION aps_FindGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveAllGroup
        FUNCTION aps_RemoveAllGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveGroup
        FUNCTION aps_RemoveGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_item_init
        FUNCTION osal_nv_item_init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_ReadAttrData
        FUNCTION zcl_ReadAttrData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendDefaultRspCmd
        FUNCTION zcl_SendDefaultRspCmd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// C:\Z-Stack Home 1.2.2a.44539\Components\stack\zcl\zcl_general.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_general.c
//    3   Revised:        $Date: 2015-09-10 09:36:48 -0700 (Thu, 10 Sep 2015) $
//    4   Revision:       $Revision: 44493 $
//    5 
//    6   Description:    Zigbee Cluster Library - General.  This application receives all
//    7                   ZCL messages and initially parses them before passing to application.
//    8 
//    9 
//   10   Copyright 2006-2015 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License"). You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product. Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "zcl.h"
//   46 #include "zcl_general.h"
//   47 //#include "ZDApp.h"
//   48 #include "zcl_ezmode.h"
//   49 
//   50 #if defined ( INTER_PAN )
//   51   #include "stub_aps.h"
//   52 #endif
//   53 
//   54 /*********************************************************************
//   55  * MACROS
//   56  */
//   57 #define locationTypeAbsolute( a )          ( (a) & LOCATION_TYPE_ABSOLUTE )
//   58 #define locationType2D( a )                ( (a) & LOCATION_TYPE_2_D )
//   59 #define locationTypeCoordinateSystem( a )  ( (a) & LOCATION_TYPE_COORDINATE_SYSTEM )
//   60 
//   61 #ifdef ZCL_SCENES
//   62 #define zclGeneral_ScenesRemaingCapacity() ( ZCL_GEN_MAX_SCENES - zclGeneral_CountAllScenes() )
//   63 #endif // ZCL_SCENES
//   64 
//   65 /*********************************************************************
//   66  * CONSTANTS
//   67  */
//   68 
//   69 /*********************************************************************
//   70  * TYPEDEFS
//   71  */
//   72 typedef struct zclGenCBRec
//   73 {
//   74   struct zclGenCBRec        *next;
//   75   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   76   zclGeneral_AppCallbacks_t *CBs;     // Pointer to Callback function
//   77 } zclGenCBRec_t;
//   78 
//   79 typedef struct zclGenSceneItem
//   80 {
//   81   struct zclGenSceneItem    *next;
//   82   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   83   zclGeneral_Scene_t        scene;    // Scene info
//   84 } zclGenSceneItem_t;
//   85 
//   86 typedef struct zclGenAlarmItem
//   87 {
//   88   struct zclGenAlarmItem    *next;
//   89   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   90   zclGeneral_Alarm_t        alarm;    // Alarm info
//   91 } zclGenAlarmItem_t;
//   92 
//   93 // Scene NV types
//   94 typedef struct
//   95 {
//   96   uint16                    numRecs;
//   97 } nvGenScenesHdr_t;
//   98 
//   99 typedef struct zclGenSceneNVItem
//  100 {
//  101   uint8                     endpoint;
//  102   zclGeneral_Scene_t        scene;
//  103 } zclGenSceneNVItem_t;
//  104 
//  105 /*********************************************************************
//  106  * GLOBAL VARIABLES
//  107  */
//  108 
//  109 /*********************************************************************
//  110  * GLOBAL FUNCTIONS
//  111  */
//  112 
//  113 /*********************************************************************
//  114  * LOCAL VARIABLES
//  115  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  116 static zclGenCBRec_t *zclGenCBs = (zclGenCBRec_t *)NULL;
zclGenCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  117 static uint8 zclGenPluginRegisted = FALSE;
zclGenPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  118 
//  119 #if defined( ZCL_SCENES )
//  120   #if !defined ( ZCL_STANDALONE )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  121     static zclGenSceneItem_t *zclGenSceneTable = (zclGenSceneItem_t *)NULL;
zclGenSceneTable:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  122   #endif
//  123 #endif // ZCL_SCENES
//  124 
//  125 #ifdef ZCL_ALARMS
//  126 static zclGenAlarmItem_t *zclGenAlarmTable = (zclGenAlarmItem_t *)NULL;
//  127 #endif // ZCL_ALARMS
//  128 
//  129 /*********************************************************************
//  130  * LOCAL FUNCTIONS
//  131  */
//  132 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg );
//  133 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//  134 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint );
//  135 
//  136 // Device Configuration and Installation clusters
//  137 #ifdef ZCL_BASIC
//  138 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  139 #endif // ZCL_BASIC
//  140 
//  141 #ifdef ZCL_IDENTIFY
//  142 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  143 #endif // ZCL_IDENTIFY
//  144 
//  145 // Groups and Scenes clusters
//  146 #ifdef ZCL_GROUPS
//  147 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg );
//  148 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  149 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData );
//  150 #endif // ZCL_GROUPS
//  151 
//  152 #ifdef ZCL_SCENES
//  153 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  154 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  155 #endif // ZCL_SCENES
//  156 
//  157 // On/Off and Level Control Configuration clusters
//  158 #ifdef ZCL_ON_OFF
//  159 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  160 #endif // ZCL_ONOFF
//  161 
//  162 #ifdef ZCL_LEVEL_CTRL
//  163 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  164 #endif // ZCL_LEVEL_CTRL
//  165 
//  166 // Alarms cluster
//  167 #ifdef ZCL_ALARMS
//  168 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  169 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  170 #endif // ZCL_ALARMS
//  171 
//  172 // Location cluster
//  173 #ifdef ZCL_LOCATION
//  174 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  175 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  176 #endif // ZCL_LOCATION
//  177 
//  178 #ifdef ZCL_SCENES
//  179   #if !defined ( ZCL_STANDALONE )
//  180     static uint8 zclGeneral_ScenesInitNV( void );
//  181     static void zclGeneral_ScenesSetDefaultNV( void );
//  182     static void zclGeneral_ScenesWriteNV( void );
//  183     static uint16 zclGeneral_ScenesRestoreFromNV( void );
//  184   #endif
//  185 #endif // ZCL_SCENES
//  186 
//  187 /*********************************************************************
//  188  * @fn      zclGeneral_RegisterCmdCallbacks
//  189  *
//  190  * @brief   Register an applications command callbacks
//  191  *
//  192  * @param   endpoint - application's endpoint
//  193  * @param   callbacks - pointer to the callback record.
//  194  *
//  195  * @return  ZMemError if not able to allocate
//  196  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  197 ZStatus_t zclGeneral_RegisterCmdCallbacks( uint8 endpoint, zclGeneral_AppCallbacks_t *callbacks )
zclGeneral_RegisterCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
        CODE
//  198 {
        FUNCALL zclGeneral_RegisterCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, zclGeneral_ScenesInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V0,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  199   zclGenCBRec_t *pNewItem;
//  200   zclGenCBRec_t *pLoop;
//  201 
//  202   // Register as a ZCL Plugin
//  203   if ( zclGenPluginRegisted == FALSE )
        MOV       DPTR,#zclGenPluginRegisted
        MOVX      A,@DPTR
        JNZ       ??zclGeneral_RegisterCmdCallbacks_0
//  204   {
//  205     zcl_registerPlugin( ZCL_CLUSTER_ID_GEN_BASIC,
//  206                         ZCL_CLUSTER_ID_GEN_MULTISTATE_VALUE_BASIC,
//  207                         zclGeneral_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV       ?V2,#`??zclGeneral_HdlIncoming::?relay` & 0xff
        MOV       ?V3,#(`??zclGeneral_HdlIncoming::?relay` >> 8) & 0xff
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R4,#0x14
        MOV       R5,#0x0
        MOV       R2,#0x0
        MOV       R3,#0x0
        LCALL     `??zcl_registerPlugin::?relay`; Banked call to: zcl_registerPlugin
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  208 
//  209 #ifdef ZCL_SCENES
//  210     // Initialize the Scenes Table
//  211     zclGeneral_ScenesInit();
        ; Setup parameters for call to function zclGeneral_ScenesInit
        LCALL     `??zclGeneral_ScenesInit::?relay`; Banked call to: zclGeneral_ScenesInit
//  212 #endif // ZCL_SCENES
//  213 
//  214     zclGenPluginRegisted = TRUE;
        MOV       DPTR,#zclGenPluginRegisted
        MOV       A,#0x1
        MOVX      @DPTR,A
//  215   }
//  216 
//  217   // Fill in the new profile list
//  218   pNewItem = zcl_mem_alloc( sizeof( zclGenCBRec_t ) );
??zclGeneral_RegisterCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
//  219   if ( pNewItem == NULL )
        MOV       A,R2
        ORL       A,R1
        JNZ       ??zclGeneral_RegisterCmdCallbacks_1
//  220     return (ZMemError);
        MOV       R1,#0x10
        SJMP      ??zclGeneral_RegisterCmdCallbacks_2
//  221 
//  222   pNewItem->next = (zclGenCBRec_t *)NULL;
??zclGeneral_RegisterCmdCallbacks_1:
        LCALL     ?Subroutine54 & 0xFFFF
//  223   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_100:
        MOV       A,?V0
        LCALL     ?Subroutine56 & 0xFFFF
//  224   pNewItem->CBs = callbacks;
??CrossCallReturnLabel_105:
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
//  225 
//  226   // Find spot in list
//  227   if (  zclGenCBs == NULL )
        MOV       DPTR,#zclGenCBs
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_49:
        MOV       DPTR,#zclGenCBs
        JZ        ??zclGeneral_RegisterCmdCallbacks_3
//  228   {
//  229     zclGenCBs = pNewItem;
//  230   }
//  231   else
//  232   {
//  233     // Look for end of list
//  234     pLoop = zclGenCBs;
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        SJMP      ??zclGeneral_RegisterCmdCallbacks_4
//  235     while ( pLoop->next != NULL )
//  236       pLoop = pLoop->next;
??zclGeneral_RegisterCmdCallbacks_5:
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
??zclGeneral_RegisterCmdCallbacks_4:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_50:
        JNZ       ??zclGeneral_RegisterCmdCallbacks_5
//  237 
//  238     // Put new item at end of list
//  239     pLoop->next = pNewItem;
        MOV       DPL,R4
        MOV       DPH,R5
//  240   }
??zclGeneral_RegisterCmdCallbacks_3:
        LCALL     ?Subroutine57 & 0xFFFF
//  241 
//  242   return ( ZSuccess );
??CrossCallReturnLabel_263:
        MOV       R1,#0x0
??zclGeneral_RegisterCmdCallbacks_2:
        LJMP      ??Subroutine87_0 & 0xFFFF
//  243 }
          CFI EndBlock cfiBlock0
//  244 
//  245 #ifdef ZCL_IDENTIFY
//  246 /*********************************************************************
//  247  * @fn      zclGeneral_SendIdentify
//  248  *
//  249  * @brief   Call to send out an Identify Command
//  250  *
//  251  * @param   srcEP - Sending application's endpoint
//  252  * @param   dstAddr - where you want the message to go
//  253  * @param   identifyTime - how long the device will continue to identify itself (in seconds)
//  254  * @param   seqNum - identification number for the transaction
//  255  *
//  256  * @return  ZStatus_t
//  257  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  258 ZStatus_t zclGeneral_SendIdentify( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentify:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
        CODE
//  259                                    uint16 identifyTime, uint8 disableDefaultRsp, uint8 seqNum )
//  260 {
        FUNCALL zclGeneral_SendIdentify, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R6,A
//  261   uint8 buf[2];
//  262 
//  263   buf[0] = LO_UINT16( identifyTime );
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  264   buf[1] = HI_UINT16( identifyTime );
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine49 & 0xFFFF
//  265 
//  266   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  267                           COMMAND_IDENTIFY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  268                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_145:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_60:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_61:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        LJMP      ?Subroutine1 & 0xFFFF
//  269 }
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_145
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond3) CFA_SP SP+-2
          CFI (cfiCond3) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOV       A,R5
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4
        REQUIRE ??Subroutine84_0
        ; // Fall through to label ??Subroutine84_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine84_0:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
          CFI Conditional ??CrossCallReturnLabel_147
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function zclGeneral_SendIdentify
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function osal_nv_write
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
//  270 
//  271 /*********************************************************************
//  272  * @fn      zclGeneral_SendIdentifyEZModeInvoke
//  273  *
//  274  * @brief   Call to send out an Identify EZ-Mode Invoke Command
//  275  *
//  276  * @param   srcEP - Sending application's endpoint
//  277  * @param   dstAddr - where you want the message to go
//  278  * @param   action - describes the EZ-Mode action to be performed
//  279  * @param   seqNum - identification number for the transaction
//  280  *
//  281  * @return  ZStatus_t
//  282  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  283 ZStatus_t zclGeneral_SendIdentifyEZModeInvoke( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyEZModeInvoke:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
        CODE
//  284                                                uint8 action, uint8 disableDefaultRsp, uint8 seqNum )
//  285 {
        FUNCALL zclGeneral_SendIdentifyEZModeInvoke, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
//  286   uint8 buf[1];
//  287 
//  288   buf[0] = action;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine85_0 & 0xFFFF
//  289 
//  290   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  291                           COMMAND_IDENTIFY_EZMODE_INVOKE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  292                           disableDefaultRsp, 0, seqNum, 1, buf );
??CrossCallReturnLabel_150:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_155:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x2
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x1
        LJMP      ??Subroutine86_0 & 0xFFFF
//  293 }
          CFI EndBlock cfiBlock9
//  294 
//  295 /*********************************************************************
//  296  * @fn      zclGeneral_SendIdentifyUpdateCommState
//  297  *
//  298  * @brief   Call to send out an Identify Update Commission State Command
//  299  *
//  300  * @param   srcEP - Sending application's endpoint
//  301  * @param   dstAddr - where you want the message to go
//  302  * @param   action - describes the EZ-Mode action to be performed
//  303  * @param   commissionStateMask - updates the device's commission state
//  304  * @param   seqNum - identification number for the transaction
//  305  *
//  306  * @return  ZStatus_t
//  307  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  308 ZStatus_t zclGeneral_SendIdentifyUpdateCommState( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyUpdateCommState:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyUpdateCommState
        CODE
//  309                                                   uint8 action, uint8 commissionStateMask,
//  310                                                   uint8 disableDefaultRsp, uint8 seqNum )
//  311 {
        FUNCALL zclGeneral_SendIdentifyUpdateCommState, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
//  312   uint8 buf[2];
//  313 
//  314   buf[0] = action;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  315   buf[1] = commissionStateMask;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        LCALL     ??Subroutine85_0 & 0xFFFF
//  316 
//  317   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  318                           COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  319                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_151:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_156:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_157:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x3
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x3
        MOV       R5,#0x0
        MOV       A,R6
        MOV       R1,A
          CFI EndBlock cfiBlock10
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  320 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,#0x2
        LJMP      ??Subroutine86_0 & 0xFFFF
          CFI EndBlock cfiBlock11
//  321 
//  322 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  323 /*********************************************************************
//  324  * @fn      zclGeneral_SendIdentifyTriggerEffect
//  325  *
//  326  * @brief   Call to send out a Trigger Effect Command
//  327  *
//  328  * @param   srcEP - Sending application's endpoint
//  329  * @param   dstAddr - where you want the message to go
//  330  * @param   effectId - identify effect to use
//  331  * @param   effectVariant - which variant of effect to be triggered
//  332  * @param   disableDefaultRsp - whether to disable the Default Response command
//  333  * @param   seqNum - identification number for the transaction
//  334  *
//  335  * @return  ZStatus_t
//  336  */
//  337 ZStatus_t zclGeneral_SendIdentifyTriggerEffect( uint8 srcEP, afAddrType_t *dstAddr,
//  338                                                 uint8 effectId, uint8 effectVariant,
//  339                                                 uint8 disableDefaultRsp, uint8 seqNum )
//  340 {
//  341   uint8 buf[2];
//  342 
//  343   buf[0] = effectId;
//  344   buf[1] = effectVariant;
//  345 
//  346   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  347                           COMMAND_IDENTIFY_TRIGGER_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  348                           disableDefaultRsp, 0, seqNum, 2, buf );
//  349 }
//  350 #endif // ZCL_LIGHT_LINK_ENHANCE
//  351 
//  352 /*********************************************************************
//  353  * @fn      zclGeneral_SendIdentifyQueryResponse
//  354  *
//  355  * @brief   Call to send out an Identify Query Response Command
//  356  *
//  357  * @param   srcEP - Sending application's endpoint
//  358  * @param   dstAddr - where you want the message to go
//  359  * @param   timeout - how long the device will continue to identify itself (in seconds)
//  360  * @param   seqNum - identification number for the transaction
//  361  *
//  362  * @return  ZStatus_t
//  363  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  364 ZStatus_t zclGeneral_SendIdentifyQueryResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyQueryResponse:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyQueryResponse
        CODE
//  365                                                 uint16 timeout, uint8 disableDefaultRsp, uint8 seqNum )
//  366 {
        FUNCALL zclGeneral_SendIdentifyQueryResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R6,A
//  367   uint8 buf[2];
//  368 
//  369   buf[0] = LO_UINT16( timeout );
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  370   buf[1] = HI_UINT16( timeout );
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine49 & 0xFFFF
//  371 
//  372   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  373                           COMMAND_IDENTIFY_QUERY_RSP, TRUE,
//  374                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_146:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_62:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_63:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LJMP      ?Subroutine1 & 0xFFFF
//  375 }
          CFI EndBlock cfiBlock12

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond13 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function zclGeneral_SendIdentify
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+-2
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-2
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiPicker18
//  376 #endif // ZCL_IDENTIFY
//  377 
//  378 #ifdef ZCL_GROUPS
//  379 /*********************************************************************
//  380  * @fn      zclGeneral_SendGroupRequest
//  381  *
//  382  * @brief   Send a Group Request to a device.  You can also use the
//  383  *          appropriate macro.
//  384  *
//  385  * @param   srcEP - Sending Apps endpoint
//  386  * @param   dstAddr - where to send the request
//  387  * @param   cmd - one of the following:
//  388  *              COMMAND_GROUP_VIEW
//  389  *              COMMAND_GROUP_REMOVE
//  390  * @param   groupID -
//  391  *
//  392  * @return  ZStatus_t
//  393  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  394 ZStatus_t zclGeneral_SendGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupRequest:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
        CODE
//  395                                        uint8 cmd, uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  396 {
        FUNCALL zclGeneral_SendGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,R1
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine28 & 0xFFFF
//  397   uint8 buf[2];
//  398 
//  399   buf[0] = LO_UINT16( groupID );
//  400   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_40:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
//  401 
//  402   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  403                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  404                             disableDefaultRsp, 0, seqNum, 2, buf ) );
??CrossCallReturnLabel_148:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_158:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R1,?V0
        LJMP      ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock19

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function zclGeneral_SendGroupResponse
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker22 Using cfiCommon1
          CFI (cfiPicker22) NoFunction
          CFI (cfiPicker22) Picker
        MOV       A,R1
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiPicker22
        REQUIRE ??Subroutine85_0
        ; // Fall through to label ??Subroutine85_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine85_0:
          CFI Block cfiCond23 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+-2
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function zclGeneral_SendGroupRequest
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function zclGeneral_SendGroupResponse
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+-2
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker27 Using cfiCommon1
          CFI (cfiPicker27) NoFunction
          CFI (cfiPicker27) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiPicker27

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock28 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine92_0 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,#0x3
          CFI EndBlock cfiBlock28
        REQUIRE ??Subroutine86_0
        ; // Fall through to label ??Subroutine86_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine86_0:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock29
        REQUIRE ??Subroutine87_0
        ; // Fall through to label ??Subroutine87_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine87_0:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock30
//  405 }
//  406 
//  407 /*********************************************************************
//  408  * @fn      zclGeneral_SendAddGroupRequest
//  409  *
//  410  * @brief   Send the Add Group Request to a device
//  411  *
//  412  * @param   srcEP - Sending Apps endpoint
//  413  * @param   dstAddr - where to send the request
//  414  * @param   cmd - one of the following:
//  415  *                COMMAND_GROUP_ADD
//  416  *                COMMAND_GROUP_ADD_IF_IDENTIFYING
//  417  * @param   groupID - pointer to the group structure
//  418  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  419  *          string data type, so the first byte is the length of the
//  420  *          name (in bytes), then the name.
//  421  *
//  422  * @return  ZStatus_t
//  423  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  424 ZStatus_t zclGeneral_SendAddGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddGroupRequest:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
        CODE
//  425                                           uint8 cmd, uint16 groupID, uint8 *groupName,
//  426                                           uint8 disableDefaultRsp, uint8 seqNum )
//  427 {
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V7,R1
        MOV       ?V10,R2
        MOV       ?V11,R3
        MOV       ?V9,R4
        MOV       ?V8,R5
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
//  428   uint8 *buf;
//  429   uint8 *pBuf;
//  430   uint8 len;
//  431   ZStatus_t status;
//  432 
//  433   len = 2;    // Group ID
//  434   len += groupName[0] + 1;  // String + 1 for length
??CrossCallReturnLabel_44:
        MOVX      A,@DPTR
        ADD       A,#0x3
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  435 
//  436   buf = zcl_mem_alloc( len );
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ??Subroutine94_0 & 0xFFFF
//  437   if ( buf )
??CrossCallReturnLabel_201:
        JNZ       $+5
        LJMP      ??zclGeneral_SendAddGroupRequest_0 & 0xFFFF
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine42 & 0xFFFF
//  438   {
//  439     pBuf = buf;
//  440     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_79:
        MOVX      @DPTR,A
//  441     *pBuf++ = HI_UINT16( groupID );
        MOV       A,R1
        INC       DPTR
        MOVX      @DPTR,A
//  442     *pBuf++ = groupName[0]; // string length
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine91_0 & 0xFFFF
//  443     zcl_memcpy( pBuf, &(groupName[1]), groupName[0] );
??CrossCallReturnLabel_177:
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x3
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_113:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
//  444 
//  445     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  446                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  447                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V2,R6
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_65:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,?V8
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,?V9
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,?V10
        MOV       R3,?V11
        MOV       R1,?V7
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
//  448     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendAddGroupRequest_1
//  449   }
//  450   else
//  451     status = ZMemError;
??zclGeneral_SendAddGroupRequest_0:
        MOV       R6,#0x10
//  452 
//  453   return ( status );
??zclGeneral_SendAddGroupRequest_1:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock31
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
//  454 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock32
//  455 
//  456 /*********************************************************************
//  457  * @fn      zclGeneral_SendGroupGetMembershipRequest
//  458  *
//  459  * @brief   Send a Get Group Membership (Resposne) Command to a device
//  460  *
//  461  * @param   srcEP - Sending Apps endpoint
//  462  * @param   dstAddr - where to send the request
//  463  * @param   cmd - one of the following:
//  464  *                COMMAND_GROUP_GET_MEMBERSHIP
//  465  *                COMMAND_GROUP_GET_MEMBERSHIP_RSP
//  466  * @param   groupID - pointer to the group structure
//  467  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  468  *          string data type, so the first byte is the length of the
//  469  *          name (in bytes), then the name.
//  470  *
//  471  * @return  ZStatus_t
//  472  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  473 ZStatus_t zclGeneral_SendGroupGetMembershipRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupGetMembershipRequest:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
        CODE
//  474                                                     uint8 cmd, uint8 rspCmd, uint8 direction, uint8 capacity,
//  475                                                     uint8 grpCnt, uint16 *grpList, uint8 disableDefaultRsp, uint8 seqNum )
//  476 {
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  477   uint8 *buf;
//  478   uint8 *pBuf;
//  479   uint8 len = 0;
        MOV       R0,#0x0
//  480   uint8 i;
//  481   ZStatus_t status;
//  482 
//  483   if ( rspCmd )
        JZ        ??zclGeneral_SendGroupGetMembershipRequest_0
//  484     len++;  // Capacity
        MOV       R0,#0x1
??zclGeneral_SendGroupGetMembershipRequest_0:
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V3,A
//  485 
//  486   len++;  // Group Count
//  487   len += sizeof ( uint16 ) * grpCnt;  // Group List
        CLR       C
        RLC       A
        INC       A
        ADD       A,R0
//  488 
//  489   buf = zcl_mem_alloc( len );
        LCALL     ?Subroutine58 & 0xFFFF
//  490   if ( buf )
??CrossCallReturnLabel_199:
        JNZ       $+5
        LJMP      ??zclGeneral_SendGroupGetMembershipRequest_1 & 0xFFFF
//  491   {
//  492     pBuf = buf;
        MOV       R0,?V0
        MOV       R1,?V1
//  493     if ( rspCmd )
        MOV       A,R7
        JZ        ??zclGeneral_SendGroupGetMembershipRequest_2
//  494       *pBuf++ = capacity;
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_184:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  495 
//  496     *pBuf++ = grpCnt;
??zclGeneral_SendGroupGetMembershipRequest_2:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,?V3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  497     for ( i = 0; i < grpCnt; i++ )
        MOV       R4,#0x0
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_51:
        SJMP      ??zclGeneral_SendGroupGetMembershipRequest_3
//  498     {
//  499       *pBuf++ = LO_UINT16( grpList[i] );
??zclGeneral_SendGroupGetMembershipRequest_4:
        MOV       A,R4
        ADD       A,0xE0 /* A   */
        MOV       ?V8,A
        CLR       A
        RLC       A
        MOV       ?V9,A
        MOV       A,R2
        ADD       A,?V8
        MOV       ?V8,A
        MOV       A,R3
        ADDC      A,?V9
        MOV       ?V9,A
        MOV       DPL,?V8
        LCALL     ?Subroutine47 & 0xFFFF
//  500       *pBuf++ = HI_UINT16( grpList[i] );
??CrossCallReturnLabel_153:
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??zclGeneral_SendGroupGetMembershipRequest_5
        INC       R1
//  501     }
??zclGeneral_SendGroupGetMembershipRequest_5:
        INC       R4
??zclGeneral_SendGroupGetMembershipRequest_3:
        MOV       A,R4
        CLR       C
        SUBB      A,?V3
        JC        ??zclGeneral_SendGroupGetMembershipRequest_4
//  502 
//  503     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  504                               cmd, TRUE, direction,
//  505                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V3,#0x1
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R6
        MOV       ?V3,A
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,?V6
        MOV       R3,?V7
        MOV       R1,?V2
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       ?V3,A
//  506     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendGroupGetMembershipRequest_6
//  507   }
//  508   else
//  509     status = ZMemError;
??zclGeneral_SendGroupGetMembershipRequest_1:
        MOV       ?V3,#0x10
//  510 
//  511   return ( status );
??zclGeneral_SendGroupGetMembershipRequest_6:
        MOV       R1,?V3
        LJMP      ?Subroutine2 & 0xFFFF
//  512 }
          CFI EndBlock cfiBlock33

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond34 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond35) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond35) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond35) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-2
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker36 Using cfiCommon1
          CFI (cfiPicker36) NoFunction
          CFI (cfiPicker36) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiPicker36
        REQUIRE ??Subroutine88_0
        ; // Fall through to label ??Subroutine88_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine88_0:
          CFI Block cfiCond37 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond38) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond38) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-2
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-2
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker40 Using cfiCommon1
          CFI (cfiPicker40) NoFunction
          CFI (cfiPicker40) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiPicker40
//  513 
//  514 /*********************************************************************
//  515  * @fn      zclGeneral_SendGroupResponse
//  516  *
//  517  * @brief   Send Group Response (not Group View Response)
//  518  *
//  519  * @param   srcEP - Sending application's endpoint
//  520  * @param   dstAddr - where you want the message to go
//  521  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  522  * @param   status - group command status
//  523  * @param   groupID - what group
//  524  *
//  525  * @return  ZStatus_t
//  526  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  527 ZStatus_t zclGeneral_SendGroupResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupResponse:
          CFI Block cfiBlock41 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
        CODE
//  528                                         uint8 cmd, uint8 status, uint16 groupID,
//  529                                         uint8 disableDefaultRsp, uint8 seqNum )
//  530 {
        FUNCALL zclGeneral_SendGroupResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
//  531   uint8 buf[3];
//  532 
//  533   buf[0] = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
//  534   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_81:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
//  535   buf[2] = HI_UINT16( groupID );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
//  536 
//  537   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  538                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  539                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_149:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V2,#0x3
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_159:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_160:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x4
        LJMP      ?Subroutine0 & 0xFFFF
//  540 }
          CFI EndBlock cfiBlock41

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond42 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond43) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond43) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond43) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond43) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond43) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond43) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond43) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+-2
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-2
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-2
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond47) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond47) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond47) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond47) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond47) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond47) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-2
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker48 Using cfiCommon1
          CFI (cfiPicker48) NoFunction
          CFI (cfiPicker48) Picker
        MOV       DPL,?V12
        MOV       DPH,?V13
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiPicker48
        REQUIRE ??Subroutine89_0
        ; // Fall through to label ??Subroutine89_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine89_0:
          CFI Block cfiCond49 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+-2
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-2
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function zclGeneral_SendGroupRequest
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function zclGeneral_SendGroupResponse
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function zclGeneral_SendGroupResponse
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function zclGeneral_SendSceneRequest
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function zclGeneral_SendSceneRequest
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-2
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function zclGeneral_SendSceneResponse
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-2
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function zclGeneral_SendSceneResponse
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-2
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-2
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-2
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-2
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond65) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-2
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker68 Using cfiCommon1
          CFI (cfiPicker68) NoFunction
          CFI (cfiPicker68) Picker
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V1
        RET
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiPicker68
//  541 
//  542 /*********************************************************************
//  543  * @fn      zclGeneral_SendGroupViewResponse
//  544  *
//  545  * @brief   Call to send Group Response Command
//  546  *
//  547  * @param   srcEP - Sending application's endpoint
//  548  * @param   dstAddr - where you want the message to go
//  549  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  550  * @param   status - group command status
//  551  * @param   grp - group info
//  552  *
//  553  * @return  ZStatus_t
//  554  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  555 ZStatus_t zclGeneral_SendGroupViewResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupViewResponse:
          CFI Block cfiBlock69 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
        CODE
//  556                                             uint8 status, aps_Group_t *grp, uint8 disableDefaultRsp, uint8 seqNum )
//  557 {
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V8,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       ?V7,R4
        MOV       ?V9,R5
//  558   uint8 *buf;
//  559   uint8 len;
//  560   ZStatus_t stat;
//  561 
//  562   len = 1 + 2 + 1; // Status + Group ID + name length
        MOV       R0,#0x4
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
//  563 
//  564   if ( status == ZCL_STATUS_SUCCESS )
        MOV       A,?V4
        ADD       A,#0x2
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V5
        MOV       ?V3,A
        MOV       A,R4
        JNZ       ??zclGeneral_SendGroupViewResponse_0
//  565   {
//  566     len += grp->name[0];  // String length
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
//  567   }
//  568 
//  569   buf = zcl_mem_alloc( len );
??zclGeneral_SendGroupViewResponse_0:
        MOV       A,R0
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ??Subroutine94_0 & 0xFFFF
//  570   if ( buf )
??CrossCallReturnLabel_202:
        JNZ       $+5
        LJMP      ??zclGeneral_SendGroupViewResponse_1 & 0xFFFF
//  571   {
//  572     buf[0] = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
        MOVX      @DPTR,A
//  573     buf[1] = LO_UINT16( grp->ID );
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_181:
        MOVX      @DPTR,A
//  574     buf[2] = HI_UINT16( grp->ID );
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine25 & 0xFFFF
//  575 
//  576     if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_178:
        MOV       A,R2
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       A,?V7
        JNZ       ??zclGeneral_SendGroupViewResponse_2
//  577     {
//  578       buf[3] = grp->name[0]; // string length
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine88_0 & 0xFFFF
//  579       zcl_memcpy( &buf[4], (&grp->name[1]), grp->name[0] );
??CrossCallReturnLabel_152:
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x4
        LCALL     ?Subroutine63 & 0xFFFF
//  580     }
??CrossCallReturnLabel_114:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        SJMP      ??zclGeneral_SendGroupViewResponse_3
//  581     else //ZCL_STATUS_NOT_FOUND
//  582     {
//  583       buf[3] = 0;
??zclGeneral_SendGroupViewResponse_2:
        MOV       DPL,R0
        MOV       DPH,R1
        CLR       A
        MOVX      @DPTR,A
//  584     }
//  585 
//  586     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  587                             COMMAND_GROUP_VIEW_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  588                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendGroupViewResponse_3:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V2,R6
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_66:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,?V9
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V8
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       R6,A
//  589     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendGroupViewResponse_4
//  590   }
//  591   else
//  592   {
//  593     stat = ZMemError;
??zclGeneral_SendGroupViewResponse_1:
        MOV       R6,#0x10
//  594   }
//  595 
//  596   return ( stat );
??zclGeneral_SendGroupViewResponse_4:
        MOV       A,R6
        MOV       R1,A
        LJMP      ??Subroutine104_0 & 0xFFFF
//  597 }
          CFI EndBlock cfiBlock69

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker72 Using cfiCommon1
          CFI (cfiPicker72) NoFunction
          CFI (cfiPicker72) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiPicker72
//  598 #endif // ZCL_GROUPS
//  599 
//  600 #ifdef ZCL_SCENES
//  601 /*********************************************************************
//  602  * @fn      zclGeneral_SendAddSceneRequest
//  603  *
//  604  * @brief   Send the (Enhanced) Add Scene Request to a device. You can
//  605  *           also use the appropriate macro.
//  606  *
//  607  * @param   srcEP - Sending Apps endpoint
//  608  * @param   dstAddr - where to send the request
//  609  * @param   scene - pointer to the scene structure
//  610  * @param  cmd - COMMAND_SCENE_ADD or COMMAND_SCENE_ENHANCED_ADD
//  611  * @param   disableDefaultRsp - whether to disable the Default Response command
//  612  * @param   seqNum - sequence number
//  613  *
//  614  * @return  ZStatus_t
//  615  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  616 ZStatus_t zclGeneral_SendAddSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddSceneRequest:
          CFI Block cfiBlock73 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
        CODE
//  617                                           uint8 cmd, zclGeneral_Scene_t *scene,
//  618                                           uint8 disableDefaultRsp, uint8 seqNum )
//  619 {
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_207:
        MOV       ?V7,R1
        MOV       ?V15,R4
        MOV       ?V14,R5
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine26 & 0xFFFF
//  620   uint8 *buf;
//  621   uint8 *pBuf;
//  622   uint8 len;
//  623   ZStatus_t status;
//  624 
//  625   len = 2 + 1 + 2;    // Group ID + Scene ID + transition time
//  626   len += scene->name[0] + 1; // String + 1 for length
//  627 
//  628   // Add something for the extension field length
//  629   len += scene->extLen;
??CrossCallReturnLabel_36:
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ADD       A,R0
        ADD       A,#0x6
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  630 
//  631   buf = zcl_mem_alloc( len );
        MOV       ?V2,A
        MOV       ?V3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V3
        LCALL     ??Subroutine94_0 & 0xFFFF
//  632   if ( buf )
??CrossCallReturnLabel_203:
        JNZ       $+5
        LJMP      ??zclGeneral_SendAddSceneRequest_0 & 0xFFFF
//  633   {
//  634     pBuf = buf;
//  635     *pBuf++ = LO_UINT16( scene->groupID );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL     ?Subroutine55 & 0xFFFF
//  636     *pBuf++ = HI_UINT16( scene->groupID );
??CrossCallReturnLabel_102:
        LCALL     ?Subroutine39 & 0xFFFF
//  637     *pBuf++ = scene->ID;
??CrossCallReturnLabel_75:
        INC       DPTR
        LCALL     ?Subroutine25 & 0xFFFF
//  638     *pBuf++ = LO_UINT16( scene->transTime );
??CrossCallReturnLabel_179:
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_109:
        LCALL     ?Subroutine45 & 0xFFFF
//  639     *pBuf++ = HI_UINT16( scene->transTime );
??CrossCallReturnLabel_90:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_92:
        MOVX      @DPTR,A
//  640     *pBuf++ = scene->name[0]; // string length
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_93:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x6
        MOV       ?V10,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V11,A
//  641     zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,?V10
        MOV       R3,?V11
        LCALL     ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_222:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  642     pBuf += scene->name[0]; // move pass name
//  643 
//  644     // Add the extension fields
//  645     if ( scene->extLen > 0 )
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??zclGeneral_SendAddSceneRequest_1
//  646       zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,R6
        ADD       A,#0x18
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V10
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,?V11
        MOV       R3,A
        LCALL     ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_223:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  647 
//  648     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  649                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  650                               disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendAddSceneRequest_1:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,?V14
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,?V15
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R4,#0x5
        MOV       R5,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_52:
        MOV       R1,?V7
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_196:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R1
        MOV       R6,A
//  651     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendAddSceneRequest_2
//  652   }
//  653   else
//  654     status = ZMemError;
??zclGeneral_SendAddSceneRequest_0:
        MOV       R6,#0x10
//  655 
//  656   return ( status );
??zclGeneral_SendAddSceneRequest_2:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0x3
          CFI EndBlock cfiBlock73
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
//  657 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock74 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Valid
        MOV       R7,#0x10
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock74

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond75 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-2
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker77 Using cfiCommon1
          CFI (cfiPicker77) NoFunction
          CFI (cfiPicker77) Picker
        MOV       A,R6
        ADD       A,#0x8
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiPicker77
        REQUIRE ??Subroutine90_0
        ; // Fall through to label ??Subroutine90_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine90_0:
          CFI Block cfiCond78 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-2
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker81 Using cfiCommon1
          CFI (cfiPicker81) NoFunction
          CFI (cfiPicker81) Picker
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiPicker81

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond82 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker84 Using cfiCommon1
          CFI (cfiPicker84) NoFunction
          CFI (cfiPicker84) Picker
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_132:
        INC       DPTR
        RET
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiPicker84

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond85 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-2
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond88) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond88) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond88) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker90 Using cfiCommon1
          CFI (cfiPicker90) NoFunction
          CFI (cfiPicker90) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiPicker90

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond91 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond93) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond93) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond93) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond93) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker94 Using cfiCommon1
          CFI (cfiPicker94) NoFunction
          CFI (cfiPicker94) Picker
        INC       DPTR
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiPicker94
        REQUIRE ??Subroutine91_0
        ; // Fall through to label ??Subroutine91_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine91_0:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond97) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond97) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond97) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond97) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond97) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-2
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-2
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker99 Using cfiCommon1
          CFI (cfiPicker99) NoFunction
          CFI (cfiPicker99) Picker
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_183:
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiPicker99

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_181
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_178
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-4
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_179
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond102) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond102) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond102) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond102) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond102) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond102) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-4
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_180
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond103) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond103) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond103) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond103) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond103) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond103) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond103) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+-4
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_177
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-4
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_75
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-4
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_76
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond106) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-4
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker107 Using cfiCommon1
          CFI (cfiPicker107) NoFunction
          CFI (cfiPicker107) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_187:
        INC       DPTR
        RET
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiPicker107

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond108 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_181
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-4
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_178
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-6
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_179
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-6
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_180
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond113) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond113) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond113) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-6
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_177
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-6
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_75
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-6
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_76
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-6
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_92
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond117) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-6
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_93
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-6
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_90
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond119) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond119) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond119) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-6
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_91
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-6
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121
//  658 
//  659 /*********************************************************************
//  660  * @fn      zclGeneral_SendSceneRequest
//  661  *
//  662  * @brief   Send a Scene Request to a device.  You can also use the
//  663  *          appropriate macro.
//  664  *
//  665  * @param   srcEP - Sending Apps endpoint
//  666  * @param   dstAddr - where to send the request
//  667  * @param   cmd - one of the following:
//  668  *              COMMAND_SCENE_VIEW
//  669  *              COMMAND_SCENE_REMOVE
//  670  *              COMMAND_SCENE_REMOVE_ALL
//  671  *              COMMAND_SCENE_STORE
//  672  *              COMMAND_SCENE_RECALL
//  673  *              COMMAND_SCENE_GET_MEMBERSHIP
//  674  *              COMMAND_SCENE_ENHANCED_VIEW
//  675  * @param   groupID - group ID
//  676  * @param   sceneID - scene ID (not applicable to COMMAND_SCENE_REMOVE_ALL and
//  677  *                    COMMAND_SCENE_GET_MEMBERSHIP)
//  678  * @param   disableDefaultRsp - whether to disable the Default Response command
//  679  * @param   seqNum - sequence number
//  680  * @return  ZStatus_t
//  681  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  682 ZStatus_t zclGeneral_SendSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneRequest:
          CFI Block cfiBlock122 Using cfiCommon0
          CFI Function zclGeneral_SendSceneRequest
        CODE
//  683                                        uint8 cmd, uint16 groupID, uint8 sceneID,
//  684                                        uint8 disableDefaultRsp, uint8 seqNum )
//  685 {
        FUNCALL zclGeneral_SendSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
//  686   uint8 buf[3];
//  687   uint8 len = 2;
        MOV       R4,#0x2
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine28 & 0xFFFF
//  688 
//  689   buf[0] = LO_UINT16( groupID );
//  690   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_41:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
//  691 
//  692   if ( cmd != COMMAND_SCENE_REMOVE_ALL && cmd != COMMAND_SCENE_GET_MEMBERSHIP )
        MOV       A,#0x3
        XRL       A,R7
        JZ        ??zclGeneral_SendSceneRequest_0
        MOV       A,#0x6
        XRL       A,R7
        JZ        ??zclGeneral_SendSceneRequest_0
//  693   {
//  694     buf[2] = sceneID;
        MOV       A,R4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
//  695     len++;
        MOV       R4,#0x3
//  696   }
//  697 
//  698   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  699                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  700                             disableDefaultRsp, 0, seqNum, len, buf ) );
??zclGeneral_SendSceneRequest_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,R4
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x5
        LJMP      ?Subroutine0 & 0xFFFF
//  701 }
          CFI EndBlock cfiBlock122

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond123 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function zclGeneral_SendSceneRequest
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker125 Using cfiCommon1
          CFI (cfiPicker125) NoFunction
          CFI (cfiPicker125) Picker
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_306:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiPicker125
//  702 
//  703 /*********************************************************************
//  704  * @fn      zclGeneral_SendSceneResponse
//  705  *
//  706  * @brief   Send Group Response (not Group View Response)
//  707  *
//  708  * @param   srcEP - Sending application's endpoint
//  709  * @param   dstAddr - where you want the message to go
//  710  * @param   cmd - either COMMAND_SCENE_ADD_RSP, COMMAND_SCENE_REMOVE_RSP
//  711  *                COMMAND_SCENE_STORE_RSP, or COMMAND_SCENE_REMOVE_ALL_RSP
//  712  * @param   status - scene command status
//  713  * @param   groupID - what group
//  714  * @param   sceneID - what scene (not applicable to COMMAND_SCENE_REMOVE_ALL_RSP)
//  715  *
//  716  * @return  ZStatus_t
//  717  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  718 ZStatus_t zclGeneral_SendSceneResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneResponse:
          CFI Block cfiBlock126 Using cfiCommon0
          CFI Function zclGeneral_SendSceneResponse
        CODE
//  719                                         uint8 cmd, uint8 status, uint16 groupID,
//  720                                         uint8 sceneID, uint8 disableDefaultRsp, uint8 seqNum )
//  721 {
        FUNCALL zclGeneral_SendSceneResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
//  722   uint8 buf[4];
//  723   uint8 len = 1 + 2; // Status + Group ID
        MOV       R4,#0x3
//  724 
//  725   buf[0] = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
//  726   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_82:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
//  727   buf[2] = HI_UINT16( groupID );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
//  728 
//  729   if ( cmd != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV       A,R4
        XRL       A,R7
        JZ        ??zclGeneral_SendSceneResponse_0
//  730   {
//  731     buf[3] = sceneID;
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  732     len++;
        MOV       R4,#0x4
//  733   }
//  734 
//  735   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  736                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  737                           disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneResponse_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R4
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_164:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R4,#0x5
        LCALL     ??Subroutine92_0 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x4
        LJMP      ??Subroutine86_0 & 0xFFFF
//  738 }
          CFI EndBlock cfiBlock126
//  739 
//  740 /*********************************************************************
//  741  * @fn      zclGeneral_SendSceneViewResponse
//  742  *
//  743  * @brief   Call to send Scene (Enahced) View Response Command. You can
//  744  *           also use the appropriate macro.
//  745  *
//  746  * @param   srcEP - Sending application's endpoint
//  747  * @param   dstAddr - where you want the message to go
//  748  * @param   cmd - either COMMAND_SCENE_VIEW_RSP or COMMAND_SCENE_ENHANCED_VIEW_RSP
//  749  * @param   status - scene command status
//  750  * @param   scene - scene info
//  751  *
//  752  * @return  ZStatus_t
//  753  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  754 ZStatus_t zclGeneral_SendSceneViewRsp( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneViewRsp:
          CFI Block cfiBlock127 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
        CODE
//  755                                        uint8 cmd, uint8 status, zclGeneral_Scene_t *scene,
//  756                                        uint8 disableDefaultRsp, uint8 seqNum )
//  757 {
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV       ?V15,R1
        MOV       ?V14,R4
        MOV       ?V7,R5
//  758   uint8 *buf;
//  759   uint8 *pBuf;
//  760   uint8 len = 1 + 2 + 1; // Status + Group ID + Scene ID
        MOV       R0,#0x4
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine26 & 0xFFFF
//  761   ZStatus_t stat;
//  762 
//  763   if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_37:
        MOV       ?V10,A
        CLR       A
        ADDC      A,R7
        MOV       ?V11,A
        MOV       A,R5
        JNZ       ??zclGeneral_SendSceneViewRsp_0
//  764   {
//  765     len += 2; // Transition Time
//  766     len += scene->name[0] + 1; // string + 1 for length
//  767 
//  768     // Add something for the extension field length
//  769     len += scene->extLen;
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        ADD       A,R0
        ADD       A,#0x7
        MOV       R0,A
//  770   }
//  771 
//  772   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneViewRsp_0:
        MOV       A,R0
        MOV       ?V2,A
        MOV       ?V3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V3
        LCALL     ??Subroutine94_0 & 0xFFFF
//  773   if ( buf )
??CrossCallReturnLabel_204:
        JNZ       $+5
        LJMP      ??zclGeneral_SendSceneViewRsp_1 & 0xFFFF
//  774   {
//  775     pBuf = buf;
//  776     *pBuf++ = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
        LCALL     ?Subroutine78 & 0xFFFF
//  777     *pBuf++ = LO_UINT16( scene->groupID );
??CrossCallReturnLabel_135:
        LCALL     ?Subroutine39 & 0xFFFF
//  778     *pBuf++ = HI_UINT16( scene->groupID );
??CrossCallReturnLabel_76:
        LCALL     ?Subroutine25 & 0xFFFF
//  779     *pBuf++ = scene->ID;
??CrossCallReturnLabel_180:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine45 & 0xFFFF
//  780     if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_91:
        MOV       A,?V7
        JZ        $+5
        LJMP      ??zclGeneral_SendSceneViewRsp_2 & 0xFFFF
//  781     {
//  782       uint16 transTime = scene->transTime;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine44 & 0xFFFF
//  783       if ( cmd == COMMAND_SCENE_ENHANCED_VIEW_RSP )
??CrossCallReturnLabel_83:
        MOV       A,#0x41
        XRL       A,?V14
        JNZ       ??zclGeneral_SendSceneViewRsp_3
//  784       {
//  785         // Transition time is in 1/10s
//  786         transTime *= 10;
//  787         transTime += scene->transTime100ms;
        MOV       A,R0
        MOV       B,#0xa
        MUL       AB
        MOV       R0,A
        MOV       R2,B
        MOV       B,#0xa
        MOV       A,R1
        MUL       AB
        ADD       A,R2
        MOV       R1,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R1
        MOV       R1,A
//  788       }
//  789 
//  790       *pBuf++ = LO_UINT16( transTime );
??zclGeneral_SendSceneViewRsp_3:
        MOV       A,R0
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  791       *pBuf++ = HI_UINT16( transTime );
        MOV       A,R1
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  792       *pBuf++ = scene->name[0]; // string length
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x7
        MOV       ?V8,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V9,A
//  793       if ( scene->name[0] != 0 )
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??zclGeneral_SendSceneViewRsp_4
//  794       {
//  795         zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_176:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_224:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  796         pBuf += scene->name[0]; // move pass name
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V8
        ADD       A,R0
        MOV       ?V8,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V9,A
//  797       }
//  798 
//  799       // Add the extension fields
//  800       if ( scene->extLen > 0 )
??zclGeneral_SendSceneViewRsp_4:
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??zclGeneral_SendSceneViewRsp_2
//  801         zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,R6
        ADD       A,#0x18
        LCALL     ??Subroutine90_0 & 0xFFFF
//  802     }
??CrossCallReturnLabel_174:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_225:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  803 
//  804     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  805                             cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  806                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneViewRsp_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_68:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x23
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,?V14
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,#0x5
        MOV       R5,#0x0
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_53:
        MOV       R1,?V15
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R1
        MOV       R6,A
//  807     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendSceneViewRsp_5
//  808   }
//  809   else
//  810     stat = ZMemError;
??zclGeneral_SendSceneViewRsp_1:
        MOV       R6,#0x10
//  811 
//  812   return ( stat );
??zclGeneral_SendSceneViewRsp_5:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0x2
        LJMP      ?Subroutine4 & 0xFFFF
//  813 }
          CFI EndBlock cfiBlock127

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond128 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_188
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function zclGeneral_SendIdentify
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker131 Using cfiCommon1
          CFI (cfiPicker131) NoFunction
          CFI (cfiPicker131) Picker
        MOV       R4,#0x3
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiPicker131
        REQUIRE ??Subroutine92_0
        ; // Fall through to label ??Subroutine92_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine92_0:
          CFI Block cfiCond132 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_190
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclGeneral_SendSceneRequest
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zclGeneral_SendSceneResponse
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function zclGeneral_SendIdentifyEZModeInvoke
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function zclGeneral_SendIdentify
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-2
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker138 Using cfiCommon1
          CFI (cfiPicker138) NoFunction
          CFI (cfiPicker138) Picker
        MOV       R5,#0x0
        MOV       A,R6
        MOV       R1,A
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiPicker138
        REQUIRE ??Subroutine93_0
        ; // Fall through to label ??Subroutine93_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine93_0:
          CFI Block cfiCond139 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyUpdateCommState
          CFI Conditional ??CrossCallReturnLabel_192
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function zclGeneral_SendGroupRequest
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-2
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-2
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-2
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond145) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond145) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond145) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond145) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond145) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-2
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-2
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function zclGeneral_SendGroupResponse
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function zclGeneral_SendSceneRequest
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function zclGeneral_SendSceneResponse
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-2
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function zclGeneral_SendIdentifyEZModeInvoke
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function zclGeneral_SendIdentify
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker153 Using cfiCommon1
          CFI (cfiPicker153) NoFunction
          CFI (cfiPicker153) Picker
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        RET
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiPicker153

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond154 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_199
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-2
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker156 Using cfiCommon1
          CFI (cfiPicker156) NoFunction
          CFI (cfiPicker156) Picker
        MOV       ?V4,A
        MOV       ?V5,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V5
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiPicker156
        REQUIRE ??Subroutine94_0
        ; // Fall through to label ??Subroutine94_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine94_0:
          CFI Block cfiCond157 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker164 Using cfiCommon1
          CFI (cfiPicker164) NoFunction
          CFI (cfiPicker164) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiPicker164

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond165 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclGeneral_RemoveScene
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker172 Using cfiCommon1
          CFI (cfiPicker172) NoFunction
          CFI (cfiPicker172) Picker
        MOV       A,R2
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiPicker172
        REQUIRE ??Subroutine95_0
        ; // Fall through to label ??Subroutine95_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine95_0:
          CFI Block cfiCond173 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-2
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function zclGeneral_RemoveScene
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+-2
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-2
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker181 Using cfiCommon1
          CFI (cfiPicker181) NoFunction
          CFI (cfiPicker181) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiPicker181

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond182 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-2
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker184 Using cfiCommon1
          CFI (cfiPicker184) NoFunction
          CFI (cfiPicker184) Picker
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_131:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiPicker184

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond185 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_93
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-4
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_90
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond187) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-4
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_91
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-4
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker189 Using cfiCommon1
          CFI (cfiPicker189) NoFunction
          CFI (cfiPicker189) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_186:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiPicker189

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_75
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker192 Using cfiCommon1
          CFI (cfiPicker192) NoFunction
          CFI (cfiPicker192) Picker
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_182:
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_136:
        RET
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiPicker192

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond193 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_135
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_75
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-4
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_76
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-4
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_102
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-4
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_104
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-4
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_103
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-4
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_98
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-4
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_99
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-4
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker201 Using cfiCommon1
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond202 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond203) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond203) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker204 Using cfiCommon1
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV       A,R6
        ADD       A,#0x17
        MOV       ?V12,A
        CLR       A
        ADDC      A,R7
        MOV       ?V13,A
        MOV       A,R6
        ADD       A,#0x7
        RET
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204
//  814 
//  815 /*********************************************************************
//  816  * @fn      zclGeneral_SendSceneGetMembershipResponse
//  817  *
//  818  * @brief   Call to send Scene Get Membership Response Command
//  819  *
//  820  * @param   srcEP - Sending application's endpoint
//  821  * @param   dstAddr - where you want the message to go
//  822  * @param   status - scene command status
//  823  * @param   capacity - remaining capacity of the scene table
//  824  * @param   sceneCnt - number of scenes in the scene list
//  825  * @param   sceneList - list of scene IDs
//  826  * @param   groupID - group ID that scene belongs to
//  827  * @param   seqNum - sequence number
//  828  *
//  829  * @return  ZStatus_t
//  830  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  831 ZStatus_t zclGeneral_SendSceneGetMembershipResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneGetMembershipResponse:
          CFI Block cfiBlock205 Using cfiCommon0
          CFI Function zclGeneral_SendSceneGetMembershipResponse
        CODE
//  832                                                      uint8 status, uint8 capacity, uint8 sceneCnt, uint8 *sceneList,
//  833                                                      uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  834 {
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  835   uint8 *buf;
//  836   uint8 *pBuf;
//  837   uint8 len = 1 + 1 + 2; // Status + Capacity + Group ID;
        MOV       R0,#0x4
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V3,A
//  838   uint8 i;
//  839   ZStatus_t stat;
//  840 
//  841   if ( status == ZCL_STATUS_SUCCESS )
        MOV       A,R4
        JNZ       ??zclGeneral_SendSceneGetMembershipResponse_0
//  842   {
//  843     len++; // Scene Count
//  844     len += sceneCnt; // Scene List (Scene ID is a single octet)
        MOV       A,#0x5
        ADD       A,?V3
        MOV       R0,A
//  845   }
//  846 
//  847   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneGetMembershipResponse_0:
        MOV       A,R0
        LCALL     ?Subroutine58 & 0xFFFF
//  848   if ( buf )
??CrossCallReturnLabel_200:
        JNZ       $+5
        LJMP      ??zclGeneral_SendSceneGetMembershipResponse_1 & 0xFFFF
//  849   {
//  850     pBuf = buf;
//  851     *pBuf++ = status;
        MOV       A,R6
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
//  852     *pBuf++ = capacity;
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine42 & 0xFFFF
//  853     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_80:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  854     *pBuf++ = HI_UINT16( groupID );
        MOV       A,R1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  855     if ( status == ZCL_STATUS_SUCCESS )
        MOV       A,R6
        JNZ       ??zclGeneral_SendSceneGetMembershipResponse_2
//  856     {
//  857       *pBuf++ = sceneCnt;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x5
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
//  858       for ( i = 0; i < sceneCnt; i++ )
        MOV       R4,#0x0
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_54:
        SJMP      ??zclGeneral_SendSceneGetMembershipResponse_3
//  859         *pBuf++ = sceneList[i];
??zclGeneral_SendSceneGetMembershipResponse_4:
        MOV       A,R2
        ADD       A,R4
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_154:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        INC       R4
??zclGeneral_SendSceneGetMembershipResponse_3:
        MOV       A,R4
        CLR       C
        SUBB      A,?V3
        JC        ??zclGeneral_SendSceneGetMembershipResponse_4
//  860     }
//  861 
//  862     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  863                             COMMAND_SCENE_GET_MEMBERSHIP_RSP, TRUE,
//  864                             ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneGetMembershipResponse_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        CLR       A
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_74:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       ?V3,#0x1
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V3,#0x6
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R4,#0x5
        MOV       R5,#0x0
        MOV       R2,?V6
        MOV       R3,?V7
        MOV       R1,?V2
        LCALL     ??Subroutine93_0 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R1
        MOV       ?V3,A
//  865     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendSceneGetMembershipResponse_5
//  866   }
//  867   else
//  868     stat = ZMemError;
??zclGeneral_SendSceneGetMembershipResponse_1:
        MOV       ?V3,#0x10
//  869 
//  870   return ( stat );
??zclGeneral_SendSceneGetMembershipResponse_5:
        MOV       R1,?V3
        MOV       R7,#0xa
        LJMP      ?BANKED_LEAVE_XDATA
//  871 }
          CFI EndBlock cfiBlock205

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond206 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-2
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_307:
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-2
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-2
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker214 Using cfiCommon1
          CFI (cfiPicker214) NoFunction
          CFI (cfiPicker214) Picker
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       R0,#?V3
        RET
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiPicker214
//  872 
//  873 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  874 /*********************************************************************
//  875  * @fn      zclGeneral_SendSceneCopy
//  876  *
//  877  * @brief   Send Scene Copy Request to a device
//  878  *
//  879  * @param   srcEP - sending application's endpoint
//  880  * @param   dstAddr - where to send the request
//  881  * @param   mode - how scene copy is to proceed
//  882  * @param   groupIDFrom - group from which scene to be copied
//  883  * @param   sceneIDFrom - scene from which scene to be copied
//  884  * @param   groupIDTo - group to which scene to be copied
//  885  * @param   sceneIDTo - scene to which scene to be copied
//  886  * @param   disableDefaultRsp - disable Default Response command
//  887  * @param   seqNum - the identification number for the transaction
//  888  *
//  889  * @return  ZStatus_t
//  890  */
//  891 ZStatus_t zclGeneral_SendSceneCopy( uint8 srcEP, afAddrType_t *dstAddr,
//  892                                     uint8 mode, uint16 groupIDFrom, uint8 sceneIDFrom,
//  893                                     uint16 groupIDTo, uint8 sceneIDTo,
//  894                                     uint8 disableDefaultRsp, uint8 seqNum )
//  895 {
//  896   uint8 buf[7];
//  897 
//  898   buf[0] = mode;
//  899   buf[1] = LO_UINT16( groupIDFrom );
//  900   buf[2] = HI_UINT16( groupIDFrom );
//  901   buf[3] = sceneIDFrom;
//  902   buf[4] = LO_UINT16( groupIDTo );
//  903   buf[5] = HI_UINT16( groupIDTo );
//  904   buf[6] = sceneIDTo;
//  905 
//  906   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  907                             COMMAND_SCENE_COPY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  908                             disableDefaultRsp, 0, seqNum, 7, buf ) );
//  909 }
//  910 
//  911 /*********************************************************************
//  912  * @fn      zclGeneral_SendSceneCopyResponse
//  913  *
//  914  * @brief   Send Scene Copy Response to a device
//  915  *
//  916  * @param   srcEP - sending application's endpoint
//  917  * @param   dstAddr - where to send the request
//  918  * @param   status - status of copy scene attemp
//  919  * @param   groupIDFrom - group from which scene was copied
//  920  * @param   sceneIDFrom - scene from which scene was copied
//  921  * @param   disableDefaultRsp - disable Default Response command
//  922  * @param   seqNum - the identification number for the transaction
//  923  *
//  924  * @return  ZStatus_t
//  925  */
//  926 ZStatus_t zclGeneral_SendSceneCopyResponse( uint8 srcEP, afAddrType_t *dstAddr,
//  927                                             uint8 status, uint16 groupIDFrom, uint8 sceneIDFrom,
//  928                                             uint8 disableDefaultRsp, uint8 seqNum )
//  929 {
//  930   uint8 buf[4];
//  931 
//  932   buf[0] = status;
//  933   buf[1] = LO_UINT16( groupIDFrom );
//  934   buf[2] = HI_UINT16( groupIDFrom );
//  935   buf[3] = sceneIDFrom;
//  936 
//  937   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  938                             COMMAND_SCENE_COPY_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  939                             disableDefaultRsp, 0, seqNum, 4, buf ) );
//  940 }
//  941 #endif // ZCL_LIGHT_LINK_ENHANCE
//  942 #endif // ZCL_SCENES
//  943 
//  944 #ifdef ZCL_ON_OFF
//  945 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  946 /*********************************************************************
//  947  * @fn      zclGeneral_SendOnOff_CmdOffWithEffect
//  948  *
//  949  * @brief   Call to send out an Off with Effect Command.
//  950  *
//  951  * @param   srcEP - Sending application's endpoint
//  952  * @param   dstAddr - where you want the message to go
//  953  * @param   effectId - fading effect to use when switching light off
//  954  * @param   effectVariant - which variant of effect to be triggered
//  955  * @param   disableDefaultRsp - whether to disable the Default Response command
//  956  * @param   seqNum - sequence number
//  957  *
//  958  * @return  ZStatus_t
//  959  */
//  960 ZStatus_t zclGeneral_SendOnOff_CmdOffWithEffect( uint8 srcEP, afAddrType_t *dstAddr,
//  961                                                  uint8 effectId, uint8 effectVariant,
//  962                                                  uint8 disableDefaultRsp, uint8 seqNum )
//  963 {
//  964   uint8 buf[2];
//  965 
//  966   buf[0] = effectId;
//  967   buf[1] = effectVariant;
//  968 
//  969   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
//  970                           COMMAND_OFF_WITH_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  971                           disableDefaultRsp, 0, seqNum, 2, buf );
//  972 }
//  973 
//  974 /*********************************************************************
//  975  * @fn      zclGeneral_SendOnOff_CmdOnWithTimedOff
//  976  *
//  977  * @brief   Call to send out an On with Timed Off Command.
//  978  *
//  979  * @param   srcEP - Sending application's endpoint
//  980  * @param   dstAddr - where you want the message to go
//  981  * @param   onOffCtrl - how the lamp is to be operated
//  982  * @param   onTime - the length of time (in 1/10ths second) that the lamp is to remain on, before automatically turning off
//  983  * @param   offWaitTime - the length of time (in 1/10ths second) that the lamp shall remain off, and guarded to prevent an on command turning the light back on.
//  984  * @param   disableDefaultRsp - whether to disable the Default Response command
//  985  * @param   seqNum - sequence number
//  986  *
//  987  * @return  ZStatus_t
//  988  */
//  989 ZStatus_t zclGeneral_SendOnOff_CmdOnWithTimedOff ( uint8 srcEP, afAddrType_t *dstAddr,
//  990                                                    zclOnOffCtrl_t onOffCtrl, uint16 onTime, uint16 offWaitTime,
//  991                                                    uint8 disableDefaultRsp, uint8 seqNum )
//  992 {
//  993   uint8 buf[5];
//  994 
//  995   buf[0] = onOffCtrl.byte;
//  996   buf[1] = LO_UINT16( onTime );
//  997   buf[2] = HI_UINT16( onTime );
//  998   buf[3] = LO_UINT16( offWaitTime );
//  999   buf[4] = HI_UINT16( offWaitTime );
// 1000 
// 1001   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1002                           COMMAND_ON_WITH_TIMED_OFF, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1003                           disableDefaultRsp, 0, seqNum, 5, buf );
// 1004 }
// 1005 #endif // ZCL_LIGHT_LINK_ENHANCE
// 1006 #endif // ZCL_ON_OFF
// 1007 
// 1008 #ifdef ZCL_LEVEL_CTRL
// 1009 /*********************************************************************
// 1010  * @fn      zclGeneral_SendLevelControlMoveToLevelRequest
// 1011  *
// 1012  * @brief   Call to send out a Level Control Request. You can also use
// 1013  *          the appropriate macro.
// 1014  *
// 1015  * @param   srcEP - Sending application's endpoint
// 1016  * @param   dstAddr - where you want the message to go
// 1017  * @param   cmd - one of the following:
// 1018  *              COMMAND_LEVEL_MOVE_TO_LEVEL or
// 1019  *              COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF
// 1020  * @param   level - what level to move to
// 1021  * @param   transitionTime - how long to take to get to the level (in seconds)
// 1022  *
// 1023  * @return  ZStatus_t
// 1024  */
// 1025 ZStatus_t zclGeneral_SendLevelControlMoveToLevelRequest( uint8 srcEP, afAddrType_t *dstAddr,
// 1026                                                          uint8 cmd, uint8 level, uint16 transTime,
// 1027                                                          uint8 disableDefaultRsp, uint8 seqNum )
// 1028 {
// 1029   uint8 buf[3];
// 1030 
// 1031   buf[0] = level;
// 1032   buf[1] = LO_UINT16( transTime );
// 1033   buf[2] = HI_UINT16( transTime );
// 1034 
// 1035   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1036                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1037                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1038 }
// 1039 
// 1040 /*********************************************************************
// 1041  * @fn      zclGeneral_SendLevelControlMoveRequest
// 1042  *
// 1043  * @brief   Call to send out a Level Control Request. You can also use
// 1044  *          the appropriate macro.
// 1045  *
// 1046  * @param   srcEP - Sending application's endpoint
// 1047  * @param   dstAddr - where you want the message to go
// 1048  * @param   cmd - one of the following:
// 1049  *              COMMAND_LEVEL_MOVE or
// 1050  *              COMMAND_LEVEL_MOVE_WITH_ON_OFF
// 1051  * @param   moveMode - LEVEL_MOVE_UP or
// 1052  *                     LEVEL_MOVE_DOWN
// 1053  * @param   rate - number of steps to take per second
// 1054  *
// 1055  * @return  ZStatus_t
// 1056  */
// 1057 ZStatus_t zclGeneral_SendLevelControlMoveRequest( uint8 srcEP, afAddrType_t *dstAddr,
// 1058                                                   uint8 cmd, uint8 moveMode, uint8 rate,
// 1059                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1060 {
// 1061   uint8 buf[2];
// 1062 
// 1063   buf[0] = moveMode;
// 1064   buf[1] = rate;
// 1065 
// 1066   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1067                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1068                           disableDefaultRsp, 0, seqNum, 2, buf );
// 1069 }
// 1070 
// 1071 /*********************************************************************
// 1072  * @fn      zclGeneral_SendLevelControlStepRequest
// 1073  *
// 1074  * @brief   Call to send out a Level Control Request. You can also use
// 1075  *          the appropriate macro.
// 1076  *
// 1077  * @param   srcEP - Sending application's endpoint
// 1078  * @param   dstAddr - where you want the message to go
// 1079  * @param   cmd - one of the following:
// 1080  *              COMMAND_LEVEL_STEP
// 1081  *              COMMAND_LEVEL_STEP_WITH_ON_OFF
// 1082  * @param   stepMode - LEVEL_STEP_UP or
// 1083  *                     LEVEL_STEP_DOWN
// 1084  * @param   amount - number of levels to step
// 1085  * @param   transitionTime - time, in 1/10ths of a second, to take to perform the step
// 1086  *
// 1087  * @return  ZStatus_t
// 1088  */
// 1089 ZStatus_t zclGeneral_SendLevelControlStepRequest( uint8 srcEP, afAddrType_t *dstAddr,
// 1090                                                   uint8 cmd, uint8 stepMode, uint8 stepSize, uint16 transTime,
// 1091                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1092 {
// 1093   uint8 buf[4];
// 1094 
// 1095   buf[0] = stepMode;
// 1096   buf[1] = stepSize;
// 1097   buf[2] = LO_UINT16( transTime );
// 1098   buf[3] = HI_UINT16( transTime );
// 1099 
// 1100   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1101                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1102                           disableDefaultRsp, 0, seqNum, 4, buf );
// 1103 }
// 1104 
// 1105 /*********************************************************************
// 1106  * @fn      zclGeneral_SendLevelControlStepRequest
// 1107  *
// 1108  * @brief   Call to send out a Level Control Request. You can also use
// 1109  *          the appropriate macro.
// 1110  *
// 1111  * @param   srcEP - Sending application's endpoint
// 1112  * @param   dstAddr - where you want the message to go
// 1113  * @param   cmd - one of the following:
// 1114  *              COMMAND_LEVEL_STOP
// 1115  *              COMMAND_LEVEL_STOP_WITH_ON_OFF
// 1116  *
// 1117  * @return  ZStatus_t
// 1118  */
// 1119 ZStatus_t zclGeneral_SendLevelControlStopRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
// 1120                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1121 {
// 1122   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1123                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1124                           disableDefaultRsp, 0, seqNum, 0, NULL );
// 1125 }
// 1126 #endif // ZCL_LEVEL_CTRL
// 1127 
// 1128 #ifdef ZCL_ALARMS
// 1129 /*********************************************************************
// 1130  * @fn      zclGeneral_SendAlarm
// 1131  *
// 1132  * @brief   Call to send out an Alarm Request Command
// 1133  *
// 1134  * @param   srcEP - Sending application's endpoint
// 1135  * @param   dstAddr - where you want the message to go
// 1136  * @param   cmd - COMMAND_ALARMS_ALARM
// 1137  * @param   alarmCode - code for the cause of the alarm
// 1138  * @param   clusterID - cluster whose attribute generate the alarm
// 1139  *
// 1140  * @return  ZStatus_t
// 1141  */
// 1142 ZStatus_t zclGeneral_SendAlarm( uint8 srcEP, afAddrType_t *dstAddr,
// 1143                                 uint8 alarmCode, uint16 clusterID,
// 1144                                 uint8 disableDefaultRsp, uint8 seqNum )
// 1145 {
// 1146   uint8 buf[3];
// 1147 
// 1148   buf[0] = alarmCode;
// 1149   buf[1] = LO_UINT16( clusterID );
// 1150   buf[2] = HI_UINT16( clusterID );
// 1151 
// 1152   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1153                           COMMAND_ALARMS_ALARM, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1154                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1155 }
// 1156 
// 1157 /*********************************************************************
// 1158  * @fn      zclGeneral_SendAlarmReset
// 1159  *
// 1160  * @brief   Call to send out an Alarm Reset Command
// 1161  *
// 1162  * @param   srcEP - Sending application's endpoint
// 1163  * @param   dstAddr - where you want the message to go
// 1164  * @param   alarmCode - code for the cause of the alarm
// 1165  * @param   clusterID - cluster whose attribute generate the alarm
// 1166  *
// 1167  * @return  ZStatus_t
// 1168 */
// 1169 ZStatus_t zclGeneral_SendAlarmReset( uint8 srcEP, afAddrType_t *dstAddr,
// 1170                                      uint8 alarmCode, uint16 clusterID,
// 1171                                      uint8 disableDefaultRsp, uint8 seqNum )
// 1172 {
// 1173   uint8 buf[3];
// 1174 
// 1175   buf[0] = alarmCode;
// 1176   buf[1] = LO_UINT16( clusterID );
// 1177   buf[2] = HI_UINT16( clusterID );
// 1178 
// 1179   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1180                           COMMAND_ALARMS_RESET, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1181                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1182 }
// 1183 
// 1184 /*********************************************************************
// 1185  * @fn      zclGeneral_SendAlarmGetResponse
// 1186  *
// 1187  * @brief   Call to send out an Alarm Get Response Command
// 1188  *
// 1189  * @param   srcEP - Sending application's endpoint
// 1190  * @param   dstAddr - where you want the message to go
// 1191  * @param   status - SUCCESS or NOT_FOUND
// 1192  * @param   alarmCode - code for the cause of the alarm
// 1193  * @param   clusterID - cluster whose attribute generate the alarm
// 1194  * @param   timeStamp - time at which the alarm occured
// 1195  *
// 1196  * @return  ZStatus_t
// 1197  */
// 1198 ZStatus_t zclGeneral_SendAlarmGetResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1199                                            uint8 status, uint8 alarmCode, uint16 clusterID,
// 1200                                            uint32 timeStamp, uint8 disableDefaultRsp, uint8 seqNum )
// 1201 {
// 1202   uint8 buf[8];
// 1203   uint8 len = 1; // Status
// 1204 
// 1205   buf[0] = status;
// 1206   if ( status == ZCL_STATUS_SUCCESS )
// 1207   {
// 1208     len += 1 + 2 + 4; // Alarm code + Cluster ID + Time stamp
// 1209     buf[1] = alarmCode;
// 1210     buf[2] = LO_UINT16( clusterID );
// 1211     buf[3] = HI_UINT16( clusterID );
// 1212     zcl_buffer_uint32( &buf[4], timeStamp );
// 1213   }
// 1214 
// 1215   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1216                           COMMAND_ALARMS_GET_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1217                           disableDefaultRsp, 0, seqNum, len, buf );
// 1218 }
// 1219 
// 1220 #ifdef SE_UK_EXT
// 1221 /*********************************************************************
// 1222  * @fn      zclGeneral_SendAlarmGetEventLog
// 1223  *
// 1224  * @brief   Call to send out an Alarm Get Event Log Command
// 1225  *
// 1226  * @param   srcEP - Sending application's endpoint
// 1227  * @param   dstAddr - where you want the message to go
// 1228  * @param   pEventLog - pointer to Get Event Log Command
// 1229  * @param   disableDefaultRsp - disable default response
// 1230  * @param   seqNum - ZCL sequence number
// 1231  *
// 1232  * @return  ZStatus_t
// 1233  */
// 1234 ZStatus_t zclGeneral_SendAlarmGetEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1235                                            zclGetEventLog_t *pEventLog,
// 1236                                            uint8 disableDefaultRsp, uint8 seqNum )
// 1237 {
// 1238   uint8 buf[10];
// 1239 
// 1240   buf[0] = pEventLog->logID;
// 1241   zcl_buffer_uint32( &buf[1], pEventLog->startTime );
// 1242   zcl_buffer_uint32( &buf[5], pEventLog->endTime );
// 1243   buf[9] = pEventLog->numEvents;
// 1244 
// 1245   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1246                           COMMAND_ALARMS_GET_EVENT_LOG, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1247                           disableDefaultRsp, 0, seqNum, 10, buf );
// 1248 }
// 1249 
// 1250 /*********************************************************************
// 1251  * @fn      zclGeneral_SendAlarmPublishEventLog
// 1252  *
// 1253  * @brief   Call to send out an Alarm Publish Event Log Command
// 1254  *
// 1255  * @param   srcEP - Sending application's endpoint
// 1256  * @param   dstAddr - where you want the message to go
// 1257  * @param   pEventLog - pointer to Publish Event Log Command
// 1258  * @param   disableDefaultRsp - disable default response
// 1259  * @param   seqNum - ZCL sequence number
// 1260  *
// 1261  * @return  ZStatus_t
// 1262  */
// 1263 ZStatus_t zclGeneral_SendAlarmPublishEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1264                                                zclPublishEventLog_t *pEventLog,
// 1265                                                uint8 disableDefaultRsp, uint8 seqNum )
// 1266 {
// 1267   uint8 *buf;
// 1268   uint8 *pBuf;
// 1269   uint8 bufLen;
// 1270 
// 1271   // Log ID + Command Index + Total Commands + (numSubLogs * ( Event ID + Event Time))
// 1272   bufLen = 1 + 1 + 1 + (pEventLog->numSubLogs * (1 + 4));
// 1273 
// 1274   buf = zcl_mem_alloc( bufLen );
// 1275   if ( buf == NULL )
// 1276   {
// 1277     return (ZMemError);
// 1278   }
// 1279 
// 1280   pBuf = buf;
// 1281   *pBuf++ = pEventLog->logID;
// 1282   *pBuf++ = pEventLog->cmdIndex;
// 1283   *pBuf++ = pEventLog->totalCmds;
// 1284 
// 1285   for ( uint8 i = 0; i < pEventLog->numSubLogs; i++ )
// 1286   {
// 1287     zclEventLogPayload_t *pLogs = &(pEventLog->pLogs[i]);
// 1288 
// 1289     *pBuf++ = pLogs->eventId;
// 1290     pBuf = zcl_buffer_uint32( pBuf, pLogs->eventTime );
// 1291   }
// 1292 
// 1293   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1294                           COMMAND_ALARMS_PUBLISH_EVENT_LOG, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1295                           disableDefaultRsp, 0, seqNum, bufLen, buf );
// 1296 }
// 1297 #endif // SE_UK_EXT
// 1298 #endif // ZCL_ALARMS
// 1299 
// 1300 #ifdef ZCL_LOCATION
// 1301 /*********************************************************************
// 1302  * @fn      zclGeneral_SendLocationSetAbsolute
// 1303  *
// 1304  * @brief   Call to send out a Set Absolute Location Command
// 1305  *
// 1306  * @param   srcEP - Sending application's endpoint
// 1307  * @param   dstAddr - where you want the message to go
// 1308  * @param   absLoc - absolute location info
// 1309  *
// 1310  * @return  ZStatus_t
// 1311  */
// 1312 ZStatus_t zclGeneral_SendLocationSetAbsolute( uint8 srcEP, afAddrType_t *dstAddr,
// 1313                                               zclLocationAbsolute_t *absLoc,
// 1314                                               uint8 disableDefaultRsp, uint8 seqNum )
// 1315 {
// 1316    uint8 buf[10]; // 5 fields (2 octects each)
// 1317 
// 1318    buf[0] = LO_UINT16( absLoc->coordinate1 );
// 1319    buf[1] = HI_UINT16( absLoc->coordinate1 );
// 1320    buf[2] = LO_UINT16( absLoc->coordinate2 );
// 1321    buf[3] = HI_UINT16( absLoc->coordinate2 );
// 1322    buf[4] = LO_UINT16( absLoc->coordinate3 );
// 1323    buf[5] = HI_UINT16( absLoc->coordinate3 );
// 1324    buf[6] = LO_UINT16( absLoc->power );
// 1325    buf[7] = HI_UINT16( absLoc->power );
// 1326    buf[8] = LO_UINT16( absLoc->pathLossExponent );
// 1327    buf[9] = HI_UINT16( absLoc->pathLossExponent );
// 1328 
// 1329    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1330                            COMMAND_LOCATION_SET_ABSOLUTE, TRUE,
// 1331                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 10, buf );
// 1332 }
// 1333 
// 1334 /*********************************************************************
// 1335  * @fn      zclGeneral_SendLocationSetDevCfg
// 1336  *
// 1337  * @brief   Call to send out a Set Device Configuration Command
// 1338  *
// 1339  * @param   srcEP - Sending application's endpoint
// 1340  * @param   dstAddr - where you want the message to go
// 1341  * @param   devCfg - device configuration info
// 1342  *
// 1343  * @return  ZStatus_t
// 1344  */
// 1345 ZStatus_t zclGeneral_SendLocationSetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1346                                             zclLocationDevCfg_t *devCfg,
// 1347                                             uint8 disableDefaultRsp, uint8 seqNum )
// 1348 {
// 1349    uint8 buf[9];  // 4 fields (2 octects each) + 1 field with 1 octect
// 1350 
// 1351    buf[0] = LO_UINT16( devCfg->power );
// 1352    buf[1] = HI_UINT16( devCfg->power );
// 1353    buf[2] = LO_UINT16( devCfg->pathLossExponent );
// 1354    buf[3] = HI_UINT16( devCfg->pathLossExponent );
// 1355    buf[4] = LO_UINT16( devCfg->calcPeriod );
// 1356    buf[5] = HI_UINT16( devCfg->calcPeriod );
// 1357    buf[6] = devCfg->numMeasurements;
// 1358    buf[7] = LO_UINT16( devCfg->reportPeriod );
// 1359    buf[8] = HI_UINT16( devCfg->reportPeriod );
// 1360 
// 1361    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1362                            COMMAND_LOCATION_SET_DEV_CFG, TRUE,
// 1363                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 9, buf );
// 1364 }
// 1365 
// 1366 /*********************************************************************
// 1367  * @fn      zclGeneral_SendLocationGetDevCfg
// 1368  *
// 1369  * @brief   Call to send out a Get Device Configuration Command
// 1370  *
// 1371  * @param   srcEP - Sending application's endpoint
// 1372  * @param   dstAddr - where you want the message to go
// 1373  * @param   targetAddr - device for which location parameters are being requested
// 1374  *
// 1375  * @return  ZStatus_t
// 1376  */
// 1377 ZStatus_t zclGeneral_SendLocationGetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1378                                             uint8 *targetAddr, uint8 disableDefaultRsp, uint8 seqNum )
// 1379 {
// 1380   uint8 buf[8];
// 1381 
// 1382   zcl_memcpy( buf, targetAddr, 8 );
// 1383 
// 1384   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1385                           COMMAND_LOCATION_GET_DEV_CFG, TRUE,
// 1386                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 8, buf );
// 1387 }
// 1388 
// 1389 /*********************************************************************
// 1390  * @fn      zclGeneral_SendLocationGetData
// 1391  *
// 1392  * @brief   Call to send out a Get Location Data Command
// 1393  *
// 1394  * @param   srcEP - Sending application's endpoint
// 1395  * @param   dstAddr - where you want the message to go
// 1396  * @param   locaData - location information and channel parameters that are requested.
// 1397  *
// 1398  * @return  ZStatus_t
// 1399  */
// 1400 ZStatus_t zclGeneral_SendLocationGetData( uint8 srcEP, afAddrType_t *dstAddr,
// 1401                                           zclLocationGetData_t *locData,
// 1402                                           uint8 disableDefaultRsp, uint8 seqNum )
// 1403 {
// 1404   uint8 buf[10]; // bitmap (1) + number responses (1) + IEEE Address (8)
// 1405   uint8 *pBuf = buf;
// 1406   uint8 len = 2; // bitmap + number responses
// 1407 
// 1408   *pBuf  = locData->absoluteOnly;
// 1409   *pBuf |= locData->recalculate << 1;
// 1410   *pBuf |= locData->brdcastIndicator << 2;
// 1411   *pBuf |= locData->brdcastResponse << 3;
// 1412   *pBuf |= locData->compactResponse << 4;
// 1413   pBuf++;  // move past the bitmap field
// 1414 
// 1415   *pBuf++ = locData->numResponses;
// 1416 
// 1417   if ( locData->brdcastIndicator == 0 )
// 1418   {
// 1419     zcl_memcpy( pBuf, locData->targetAddr, 8 );
// 1420     len += 8; // ieee addr
// 1421   }
// 1422 
// 1423   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1424                           COMMAND_LOCATION_GET_DATA, TRUE,
// 1425                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1426 }
// 1427 
// 1428 /*********************************************************************
// 1429  * @fn      zclGeneral_SendLocationDevCfgResponse
// 1430  *
// 1431  * @brief   Call to send out a Device Configuration Response Command
// 1432  *
// 1433  * @param   srcEP - Sending application's endpoint
// 1434  * @param   dstAddr - where you want the message to go
// 1435  * @param   devCfg - device's location parameters that are requested
// 1436  *
// 1437  * @return  ZStatus_t
// 1438  */
// 1439 ZStatus_t zclGeneral_SendLocationDevCfgResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1440                                                  zclLocationDevCfgRsp_t *devCfg,
// 1441                                                  uint8 disableDefaultRsp, uint8 seqNum )
// 1442 {
// 1443   uint8 buf[10]; // 4 fields (2 octects each) + 2 fields (1 octect each)
// 1444   uint8 len = 1; // Status
// 1445 
// 1446   buf[0] = devCfg->status;
// 1447   if ( devCfg->status == ZCL_STATUS_SUCCESS )
// 1448   {
// 1449     buf[1] = LO_UINT16( devCfg->data.power );
// 1450     buf[2] = HI_UINT16( devCfg->data.power );
// 1451     buf[3] = LO_UINT16( devCfg->data.pathLossExponent );
// 1452     buf[4] = HI_UINT16( devCfg->data.pathLossExponent );
// 1453     buf[5] = LO_UINT16( devCfg->data.calcPeriod );
// 1454     buf[6] = HI_UINT16( devCfg->data.calcPeriod );
// 1455     buf[7] = devCfg->data.numMeasurements;
// 1456     buf[8] = LO_UINT16( devCfg->data.reportPeriod );
// 1457     buf[9] = HI_UINT16( devCfg->data.reportPeriod );
// 1458     len += 9;
// 1459   }
// 1460 
// 1461   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1462                           COMMAND_LOCATION_DEV_CFG_RSP, TRUE,
// 1463                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1464 }
// 1465 
// 1466 /*********************************************************************
// 1467  * @fn      zclGeneral_SendLocationData
// 1468  *
// 1469  * @brief   Call to send out location data
// 1470  *
// 1471  * @param   srcEP - Sending application's endpoint
// 1472  * @param   dstAddr - where you want the message to go
// 1473  * @param   status - indicates whether response to request was successful or not
// 1474  * @param   locData - location information and channel parameters being sent
// 1475  *
// 1476  * @return  ZStatus_t
// 1477  */
// 1478 ZStatus_t zclGeneral_SendLocationData( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
// 1479                                        uint8 status, zclLocationData_t *locData,
// 1480                                        uint8 disableDefaultRsp, uint8 seqNum )
// 1481 {
// 1482   uint8 buf[16];
// 1483   uint8 *pBuf = buf;
// 1484   uint8 len = 0;
// 1485 
// 1486   if ( cmd == COMMAND_LOCATION_DATA_RSP )
// 1487   {
// 1488     // Only response command includes a status field
// 1489     *pBuf++ = status;
// 1490     len++;
// 1491   }
// 1492 
// 1493   if ( cmd != COMMAND_LOCATION_DATA_RSP || status == ZCL_STATUS_SUCCESS )
// 1494   {
// 1495     // Notification or Response with successful status
// 1496     *pBuf++ = locData->type;
// 1497     *pBuf++ = LO_UINT16( locData->absLoc.coordinate1 );
// 1498     *pBuf++ = HI_UINT16( locData->absLoc.coordinate1 );
// 1499     *pBuf++ = LO_UINT16( locData->absLoc.coordinate2 );
// 1500     *pBuf++ = HI_UINT16( locData->absLoc.coordinate2 );
// 1501     len += 5;
// 1502 
// 1503     if ( locationType2D(locData->type) == 0 )
// 1504     {
// 1505       // 2D location doesn't have coordinate 3
// 1506       *pBuf++ = LO_UINT16( locData->absLoc.coordinate3 );
// 1507       *pBuf++ = HI_UINT16( locData->absLoc.coordinate3 );
// 1508       len += 2;
// 1509     }
// 1510 
// 1511     if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1512     {
// 1513       // Compact notification doesn't include these fields
// 1514       *pBuf++ = LO_UINT16( locData->absLoc.power );
// 1515       *pBuf++ = HI_UINT16( locData->absLoc.power );
// 1516       *pBuf++ = LO_UINT16( locData->absLoc.pathLossExponent );
// 1517       *pBuf++ = HI_UINT16( locData->absLoc.pathLossExponent );
// 1518       len += 4;
// 1519     }
// 1520 
// 1521     if ( locationTypeAbsolute(locData->type) == 0 )
// 1522     {
// 1523       // Absolute location doesn't include these fields
// 1524       if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1525       {
// 1526         // Compact notification doesn't include this field
// 1527         *pBuf++ = locData->calcLoc.locationMethod;
// 1528         len++;
// 1529       }
// 1530 
// 1531       *pBuf++ = locData->calcLoc.qualityMeasure;
// 1532       *pBuf++ = LO_UINT16( locData->calcLoc.locationAge );
// 1533       *pBuf++ = HI_UINT16( locData->calcLoc.locationAge );
// 1534       len += 3;
// 1535     }
// 1536   }
// 1537 
// 1538   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1539                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1540                           disableDefaultRsp, 0, seqNum, len, buf );
// 1541 }
// 1542 #endif // ZCL_LOCATION
// 1543 
// 1544 /*********************************************************************
// 1545  * @fn      zclGeneral_FindCallbacks
// 1546  *
// 1547  * @brief   Find the callbacks for an endpoint
// 1548  *
// 1549  * @param   endpoint - endpoint to find the application callbacks for
// 1550  *
// 1551  * @return  pointer to the callbacks
// 1552  */
// 1553 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint )
// 1554 {
// 1555   zclGenCBRec_t *pCBs;
// 1556 
// 1557   pCBs = zclGenCBs;
// 1558   while ( pCBs )
// 1559   {
// 1560     if ( pCBs->endpoint == endpoint )
// 1561       return ( pCBs->CBs );
// 1562     pCBs = pCBs->next;
// 1563   }
// 1564   return ( (zclGeneral_AppCallbacks_t *)NULL );
// 1565 }
// 1566 
// 1567 /*********************************************************************
// 1568  * @fn      zclGeneral_HdlIncoming
// 1569  *
// 1570  * @brief   Callback from ZCL to process incoming Commands specific
// 1571  *          to this cluster library or Profile commands for attributes
// 1572  *          that aren't in the attribute list
// 1573  *
// 1574  *
// 1575  * @param   pInMsg - pointer to the incoming message
// 1576  *
// 1577  * @return  ZStatus_t
// 1578  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1579 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg )
zclGeneral_HdlIncoming:
          CFI Block cfiBlock215 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
        CODE
// 1580 {
        FUNCALL zclGeneral_HdlIncoming, zclGeneral_HdlInSpecificCommands
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1581   ZStatus_t stat = ZSuccess;
// 1582 
// 1583 #if defined ( INTER_PAN )
// 1584   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
// 1585     return ( stat ); // Cluster not supported thru Inter-PAN
// 1586 #endif
// 1587   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x7
        XRL       A,#0x1
        JNZ       ??zclGeneral_HdlIncoming_0
// 1588   {
// 1589     // Is this a manufacturer specific command?
// 1590     if ( pInMsg->hdr.fc.manuSpecific == 0 )
// 1591     {
// 1592       stat = zclGeneral_HdlInSpecificCommands( pInMsg );
        ; Setup parameters for call to function zclGeneral_HdlInSpecificCommands
        LCALL     `??zclGeneral_HdlInSpecificCommands::?relay`; Banked call to: zclGeneral_HdlInSpecificCommands
        MOV       A,R1
        MOV       R1,A
        SJMP      ??zclGeneral_HdlIncoming_1
// 1593     }
// 1594     else
// 1595     {
// 1596       // We don't support any manufacturer specific command.
// 1597       stat = ZFailure;
// 1598     }
// 1599   }
// 1600   else
// 1601   {
// 1602     // Handle all the normal (Read, Write...) commands -- should never get here
// 1603     stat = ZFailure;
??zclGeneral_HdlIncoming_0:
        MOV       R1,#0x1
// 1604   }
// 1605   return ( stat );
??zclGeneral_HdlIncoming_1:
        LJMP      ?Subroutine5 & 0xFFFF
// 1606 }
          CFI EndBlock cfiBlock215
// 1607 
// 1608 /*********************************************************************
// 1609  * @fn      zclGeneral_HdlInSpecificCommands
// 1610  *
// 1611  * @brief   Callback from ZCL to process incoming Commands specific
// 1612  *          to this cluster library
// 1613 
// 1614  * @param   pInMsg - pointer to the incoming message
// 1615  *
// 1616  * @return  ZStatus_t
// 1617  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1618 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg )
zclGeneral_HdlInSpecificCommands:
          CFI Block cfiBlock216 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
        CODE
// 1619 {
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInIdentity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1620   ZStatus_t stat;
// 1621   zclGeneral_AppCallbacks_t *pCBs;
// 1622 
// 1623   // make sure endpoint exists
// 1624   pCBs = zclGeneral_FindCallbacks( pInMsg->msg->endPoint );
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_215:
        MOV       A,R0
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV       R4,A
        MOV       DPTR,#zclGenCBs
??zclGeneral_HdlInSpecificCommands_0:
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_228:
        JZ        ??zclGeneral_HdlInSpecificCommands_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        JNZ       ??zclGeneral_HdlInSpecificCommands_0
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
// 1625   if ( pCBs == NULL )
        MOV       A,R4
        ORL       A,R5
        JZ        ??zclGeneral_HdlInSpecificCommands_1
// 1626     return ( ZFailure );
// 1627 
// 1628   switch ( pInMsg->msg->clusterId )
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?US_SWITCH_DENSE
`?<Jumptable for zclGeneral_HdlInSpecificComman_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA8
        DATA
        DATA8
        DB        6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_3
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_6
        CODE
// 1629   {
// 1630 #ifdef ZCL_BASIC
// 1631     case ZCL_CLUSTER_ID_GEN_BASIC:
// 1632       stat = zclGeneral_ProcessInBasic( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_2:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_7
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        JZ        ??zclGeneral_HdlInSpecificCommands_8
??zclGeneral_HdlInSpecificCommands_1:
        MOV       R1,#0x1
        SJMP      ??zclGeneral_HdlInSpecificCommands_9
??zclGeneral_HdlInSpecificCommands_8:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_46:
        JZ        ??zclGeneral_HdlInSpecificCommands_7
        ; Setup parameters for indirect call
        LCALL     ?CALL_IND
??zclGeneral_HdlInSpecificCommands_7:
        MOV       R1,#0x0
        SJMP      ??zclGeneral_HdlInSpecificCommands_9
// 1633       break;
// 1634 #endif // ZCL_BASIC
// 1635 
// 1636 #ifdef ZCL_IDENTIFY
// 1637     case ZCL_CLUSTER_ID_GEN_IDENTIFY:
// 1638       stat = zclGeneral_ProcessInIdentity( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_3:
        ; Setup parameters for call to function zclGeneral_ProcessInIdentity
        LCALL     `??zclGeneral_ProcessInIdentity::?relay`; Banked call to: zclGeneral_ProcessInIdentity
        SJMP      ??zclGeneral_HdlInSpecificCommands_10
// 1639       break;
// 1640 #endif // ZCL_IDENTIFY
// 1641 
// 1642 #ifdef ZCL_GROUPS
// 1643     case ZCL_CLUSTER_ID_GEN_GROUPS:
// 1644       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_4:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_11
// 1645         stat = zclGeneral_ProcessInGroupsServer( pInMsg );
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsServer
        LCALL     `??zclGeneral_ProcessInGroupsServer::?relay`; Banked call to: zclGeneral_ProcessInGroupsServer
        SJMP      ??zclGeneral_HdlInSpecificCommands_10
// 1646       else
// 1647         stat = zclGeneral_ProcessInGroupsClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_11:
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsClient
        LCALL     `??zclGeneral_ProcessInGroupsClient::?relay`; Banked call to: zclGeneral_ProcessInGroupsClient
        SJMP      ??zclGeneral_HdlInSpecificCommands_10
// 1648       break;
// 1649 #endif // ZCL_GROUPS
// 1650 
// 1651 #ifdef ZCL_SCENES
// 1652     case ZCL_CLUSTER_ID_GEN_SCENES:
// 1653       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_5:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_12
// 1654         stat = zclGeneral_ProcessInScenesServer( pInMsg, pCBs );
        ; Setup parameters for call to function zclGeneral_ProcessInScenesServer
        LCALL     `??zclGeneral_ProcessInScenesServer::?relay`; Banked call to: zclGeneral_ProcessInScenesServer
        SJMP      ??zclGeneral_HdlInSpecificCommands_10
// 1655       else
// 1656         stat = zclGeneral_ProcessInScenesClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_12:
        ; Setup parameters for call to function zclGeneral_ProcessInScenesClient
        LCALL     `??zclGeneral_ProcessInScenesClient::?relay`; Banked call to: zclGeneral_ProcessInScenesClient
??zclGeneral_HdlInSpecificCommands_10:
        MOV       A,R1
        SJMP      ??zclGeneral_HdlInSpecificCommands_13
// 1657       break;
// 1658 #endif // ZCL_SCENES
// 1659 
// 1660 #ifdef ZCL_ON_OFF
// 1661     case ZCL_CLUSTER_ID_GEN_ON_OFF:
// 1662       stat = zclGeneral_ProcessInOnOff( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_6:
        MOV       R6,#0x0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_14
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        JZ        ??zclGeneral_HdlInSpecificCommands_15
        DEC       A
        JZ        ??zclGeneral_HdlInSpecificCommands_15
        DEC       A
        JNZ       ??zclGeneral_HdlInSpecificCommands_16
??zclGeneral_HdlInSpecificCommands_15:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_47:
        JZ        ??zclGeneral_HdlInSpecificCommands_14
        ; Setup parameters for indirect call
        MOV       A,R2
        MOV       R1,A
        LCALL     ?CALL_IND
        SJMP      ??zclGeneral_HdlInSpecificCommands_14
??zclGeneral_HdlInSpecificCommands_16:
        MOV       R6,#0x1
??zclGeneral_HdlInSpecificCommands_14:
        MOV       A,R6
??zclGeneral_HdlInSpecificCommands_13:
        MOV       R1,A
// 1663       break;
// 1664 #endif // ZCL_ON_OFF
// 1665 
// 1666 #ifdef ZCL_LEVEL_CTRL
// 1667     case ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL:
// 1668       stat = zclGeneral_ProcessInLevelControl( pInMsg, pCBs );
// 1669       break;
// 1670 #endif // ZCL_LEVEL_CTRL
// 1671 
// 1672 #ifdef ZCL_ALARMS
// 1673     case ZCL_CLUSTER_ID_GEN_ALARMS:
// 1674       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1675         stat = zclGeneral_ProcessInAlarmsServer( pInMsg, pCBs );
// 1676       else
// 1677         stat = zclGeneral_ProcessInAlarmsClient( pInMsg, pCBs );
// 1678       break;
// 1679 #endif // ZCL_ALARMS
// 1680 
// 1681 #ifdef ZCL_LOCATION
// 1682     case ZCL_CLUSTER_ID_GEN_LOCATION:
// 1683       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1684         stat = zclGeneral_ProcessInLocationServer( pInMsg, pCBs );
// 1685       else
// 1686         stat = zclGeneral_ProcessInLocationClient( pInMsg, pCBs );
// 1687       break;
// 1688 #endif // ZCL_LOCATION
// 1689 
// 1690     case ZCL_CLUSTER_ID_GEN_POWER_CFG:
// 1691     case ZCL_CLUSTER_ID_GEN_DEVICE_TEMP_CONFIG:
// 1692     case ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG:
// 1693     case ZCL_CLUSTER_ID_GEN_TIME:
// 1694     default:
// 1695       stat = ZFailure;
// 1696       break;
// 1697   }
// 1698 
// 1699   return ( stat );
??zclGeneral_HdlInSpecificCommands_9:
        SJMP      ??Subroutine98_0
// 1700 }
          CFI EndBlock cfiBlock216

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond217 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker219 Using cfiCommon1
          CFI (cfiPicker219) NoFunction
          CFI (cfiPicker219) Picker
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_134:
        MOV       A,DPL
        ORL       A,DPH
        RET
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiPicker219

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond220 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-2
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker222 Using cfiCommon1
          CFI (cfiPicker222) NoFunction
          CFI (cfiPicker222) Picker
        MOV       DPL,R2
        MOV       DPH,R3
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiPicker222
        REQUIRE ??Subroutine96_0
        ; // Fall through to label ??Subroutine96_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine96_0:
          CFI Block cfiCond223 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-2
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        RET
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock227 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x2
          CFI EndBlock cfiBlock227
        REQUIRE ??Subroutine97_0
        ; // Fall through to label ??Subroutine97_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine97_0:
          CFI Block cfiBlock228 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 68)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock228
        REQUIRE ??Subroutine98_0
        ; // Fall through to label ??Subroutine98_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine98_0:
          CFI Block cfiBlock229 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock229
// 1701 
// 1702 #ifdef ZCL_BASIC
// 1703 /*********************************************************************
// 1704  * @fn      zclGeneral_ProcessInBasic
// 1705  *
// 1706  * @brief   Process in the received Basic Command.
// 1707  *
// 1708  * @param   pInMsg - pointer to the incoming message
// 1709  *
// 1710  * @return  ZStatus_t
// 1711  */
// 1712 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg,
// 1713                                             zclGeneral_AppCallbacks_t *pCBs )
// 1714 {
// 1715   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1716   {
// 1717     if ( pInMsg->hdr.commandID > COMMAND_BASIC_RESET_FACT_DEFAULT )
// 1718       return ( ZFailure );   // Error ignore the command
// 1719 
// 1720     if ( pCBs->pfnBasicReset )
// 1721       pCBs->pfnBasicReset();
// 1722   }
// 1723   // no Client command
// 1724 
// 1725   return ( ZSuccess );
// 1726 }
// 1727 #endif // ZCL_BASIC
// 1728 
// 1729 #ifdef ZCL_IDENTIFY
// 1730 /*********************************************************************
// 1731  * @fn      zclGeneral_ProcessInIdentity
// 1732  *
// 1733  * @brief   Process in the received Identity Command.
// 1734  *
// 1735  * @param   pInMsg - pointer to the incoming message
// 1736  *
// 1737  * @return  ZStatus_t
// 1738  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1739 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg,
zclGeneral_ProcessInIdentity:
          CFI Block cfiBlock230 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
        CODE
// 1740                                                zclGeneral_AppCallbacks_t *pCBs )
// 1741 {
        FUNCALL zclGeneral_ProcessInIdentity, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInIdentity, zclGeneral_SendIdentifyQueryResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1742   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInIdentity_0 & 0xFFFF
// 1743   {
// 1744     if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY )
        MOVX      A,@DPTR
        MOV       R0,A
        JNZ       ??zclGeneral_ProcessInIdentity_1
// 1745     {
// 1746       if ( pCBs->pfnIdentify )
        MOV       DPL,R4
        MOV       DPH,R5
        LJMP      ??zclGeneral_ProcessInIdentity_2 & 0xFFFF
// 1747       {
// 1748         zclIdentify_t cmd;
// 1749 
// 1750         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 1751         cmd.identifyTime = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1752 
// 1753         pCBs->pfnIdentify( &cmd );
// 1754       }
// 1755     }
// 1756     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_QUERY )
??zclGeneral_ProcessInIdentity_1:
        MOV       A,#0x1
        XRL       A,R0
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInIdentity_3 & 0xFFFF
// 1757     {
// 1758       uint16 identifyTime = 0;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1759 
// 1760       // Retrieve Identify Time
// 1761       zcl_ReadAttrData( pInMsg->msg->endPoint, pInMsg->msg->clusterId,
// 1762                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
        LCALL     ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_216:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_55:
        MOV       A,R6
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_126:
        MOV       R1,A
        LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1763 
// 1764       // Is device identifying itself?
// 1765       if ( identifyTime > 0 )
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_230:
        JZ        ??zclGeneral_ProcessInIdentity_4
// 1766       {
// 1767         zclGeneral_SendIdentifyQueryResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1768                                               identifyTime, true, pInMsg->hdr.transSeqNum );
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_269:
        ; Setup parameters for call to function zclGeneral_SendIdentifyQueryResponse
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_64:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL     `??zclGeneral_SendIdentifyQueryResponse::?relay`; Banked call to: zclGeneral_SendIdentifyQueryResponse
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1769 #ifdef ZCL_EZMODE
// 1770         zcl_EZModeAction( EZMODE_ACTION_IDENTIFY_QUERY, NULL );
// 1771 #endif
// 1772         return ( ZCL_STATUS_CMD_HAS_RSP );
        MOV       R1,#-0x1
        SJMP      ??zclGeneral_ProcessInIdentity_5
// 1773       }
// 1774     }
// 1775 #ifdef ZCL_EZMODE
// 1776     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_EZMODE_INVOKE )
// 1777     {
// 1778       if ( pCBs->pfnIdentifyEZModeInvoke )
// 1779       {
// 1780         pCBs->pfnIdentifyEZModeInvoke( pInMsg->pData[0] );
// 1781       }
// 1782     }
// 1783     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE )
// 1784     {
// 1785       if ( pCBs->pfnIdentifyUpdateCommState )
// 1786       {
// 1787         zclIdentifyUpdateCommState_t cmd;
// 1788 
// 1789         cmd.action = pInMsg->pData[0];
// 1790         cmd.commissionStateMask = pInMsg->pData[1];
// 1791 
// 1792         pCBs->pfnIdentifyUpdateCommState( &cmd );
// 1793       }
// 1794     }
// 1795 #endif
// 1796 
// 1797 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 1798     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_TRIGGER_EFFECT )
// 1799     {
// 1800       if ( pCBs->pfnIdentifyTriggerEffect )
// 1801       {
// 1802         zclIdentifyTriggerEffect_t cmd;
// 1803 
// 1804         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 1805         cmd.effectId = pInMsg->pData[0];
// 1806         cmd.effectVariant = pInMsg->pData[1];
// 1807 
// 1808         pCBs->pfnIdentifyTriggerEffect( &cmd );
// 1809       }
// 1810     }
// 1811 #endif //ZCL_LIGHT_LINK_ENHANCE
// 1812     else
// 1813     {
// 1814       return ( ZFailure );   // Error ignore the command
// 1815     }
// 1816   }
// 1817   else // Client Command
// 1818   {
// 1819     if ( pInMsg->hdr.commandID > COMMAND_IDENTIFY_QUERY_RSP )
??zclGeneral_ProcessInIdentity_0:
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInIdentity_6
// 1820       return ( ZFailure );   // Error ignore the command
??zclGeneral_ProcessInIdentity_3:
        MOV       R1,#0x1
        SJMP      ??zclGeneral_ProcessInIdentity_5
// 1821 
// 1822     if ( pCBs->pfnIdentifyQueryRsp )
??zclGeneral_ProcessInIdentity_6:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
??zclGeneral_ProcessInIdentity_2:
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_302:
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
        MOV       A,R0
        ORL       A,R5
        JZ        ??zclGeneral_ProcessInIdentity_4
// 1823     {
// 1824       zclIdentifyQueryRsp_t rsp;
// 1825 
// 1826       rsp.srcAddr = &(pInMsg->msg->srcAddr);
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL     ?Subroutine56 & 0xFFFF
// 1827       rsp.timeout = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??CrossCallReturnLabel_106:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_133:
        LCALL     ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_290:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine105_0 & 0xFFFF
// 1828 
// 1829       pCBs->pfnIdentifyQueryRsp( &rsp );
??CrossCallReturnLabel_256:
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?CALL_IND
// 1830     }
// 1831   }
// 1832 
// 1833   return ( ZSuccess );
??zclGeneral_ProcessInIdentity_4:
        MOV       R1,#0x0
??zclGeneral_ProcessInIdentity_5:
        MOV       A,#0x6
        LJMP      ??Subroutine86_0 & 0xFFFF
// 1834 }
          CFI EndBlock cfiBlock230

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond231 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_47
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-4
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker234 Using cfiCommon1
          CFI (cfiPicker234) NoFunction
          CFI (cfiPicker234) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiPicker234

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond235 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker237 Using cfiCommon1
          CFI (cfiPicker237) NoFunction
          CFI (cfiPicker237) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_143:
        RET
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiPicker237

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond238 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_126
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-4
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_26
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-6
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_27
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-6
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_117
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-6
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_118
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-6
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_119
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-6
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_120
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-6
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_121
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-6
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_122
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-6
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker248 Using cfiCommon1
          CFI (cfiPicker248) NoFunction
          CFI (cfiPicker248) Picker
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiPicker248

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond249 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-2
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker251 Using cfiCommon1
          CFI (cfiPicker251) NoFunction
          CFI (cfiPicker251) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiPicker251

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond252 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-2
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function zclGeneral_RemoveScene
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-2
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-2
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-2
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker261 Using cfiCommon1
          CFI (cfiPicker261) NoFunction
          CFI (cfiPicker261) Picker
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_300:
        MOV       R3,A
        RET
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiPicker261
// 1835 #endif // ZCL_IDENTIFY
// 1836 
// 1837 #ifdef ZCL_GROUPS
// 1838 
// 1839 /*********************************************************************
// 1840  * @fn      zclGeneral_AddGroup
// 1841  *
// 1842  * @brief   Add a Group.
// 1843  *
// 1844  * @param   endPoint - application endpoint
// 1845  * @param   group - group to be added
// 1846  * @param   pData - pointer to the group info
// 1847  *
// 1848  * @return  ZStatus_t
// 1849  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1850 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData )
zclGeneral_AddGroup:
          CFI Block cfiBlock262 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
        CODE
// 1851 {
        FUNCALL zclGeneral_AddGroup, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddGroup, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddGroup, aps_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V1,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V2,R4
        MOV       ?V3,R5
// 1852   uint8 nameLen;
// 1853   uint8 nameSupport = FALSE;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1854 
// 1855   pData += 2;   // Move past group ID
// 1856   nameLen = *pData++;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
// 1857 
// 1858   // Retrieve Name Support attribute
// 1859   zcl_ReadAttrData( endPoint, ZCL_CLUSTER_ID_GEN_GROUPS,
// 1860                     ATTRID_GROUP_NAME_SUPPORT, &nameSupport, NULL );
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR       A
        MOV       ?V4,A
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#0x4
        MOV       R3,#0x0
        MOV       R1,?V1
        LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1861 
// 1862   if ( nameSupport )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JZ        ??zclGeneral_AddGroup_0
// 1863   {
// 1864     if ( nameLen > (APS_GROUP_NAME_LEN-1) )
        MOV       A,?V0
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_AddGroup_1
// 1865        nameLen = (APS_GROUP_NAME_LEN-1);
        MOV       ?V0,#0xf
// 1866     group->name[0] = nameLen;
??zclGeneral_AddGroup_1:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 1867     zcl_memcpy( &(group->name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,R6
        LCALL     ?Subroutine60 & 0xFFFF
// 1868   }
??CrossCallReturnLabel_107:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1869 
// 1870   return ( aps_AddGroup( endPoint, group ) );
??zclGeneral_AddGroup_0:
        ; Setup parameters for call to function aps_AddGroup
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V1
        LCALL     `??aps_AddGroup::?relay`; Banked call to: aps_AddGroup
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock262
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1871 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock263 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock263
// 1872 
// 1873 /*********************************************************************
// 1874  * @fn      zclGeneral_ProcessInGroupsServer
// 1875  *
// 1876  * @brief   Process in the received Groups Command.
// 1877  *
// 1878  * @param   pInMsg - pointer to the incoming message
// 1879  *
// 1880  * @return  ZStatus_t
// 1881  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1882 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg )
zclGeneral_ProcessInGroupsServer:
          CFI Block cfiBlock264 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
        CODE
// 1883 {
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupViewResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 79, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 79, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_CountAllGroups
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupGetMembershipRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 83, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_SendDefaultRspCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 83, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveAllGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 54
        MOV       A,#-0x36
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1884   aps_Group_t group;
// 1885   aps_Group_t *pGroup;
// 1886   uint8 *pData;
// 1887   uint8 status;
// 1888   uint8 grpCnt;
// 1889   uint8 grpRspCnt = 0;
        MOV       ?V4,#0x0
// 1890   uint16 *grpList;
// 1891   uint16 identifyTime = 0;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1892   uint8 i;
// 1893   ZStatus_t stat = ZSuccess;
        MOV       ?V0,#0x0
// 1894 
// 1895   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x12
        MOV       R5,A
        MOV       R1,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 1896 
// 1897   pData = pInMsg->pData;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine32 & 0xFFFF
// 1898   group.ID = BUILD_UINT16( pData[0], pData[1] );
??CrossCallReturnLabel_45:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        LCALL     ??Subroutine95_0 & 0xFFFF
// 1899   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_206:
        MOV       A,R6
        ADD       A,#0x6
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       A,R6
        ADD       A,#0x7
        MOV       ?V6,A
        CLR       A
        ADDC      A,R7
        MOV       ?V7,A
        MOV       DPL,?V6
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInGroupsServer_0
        DEC       A
        JZ        ??zclGeneral_ProcessInGroupsServer_1
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_2 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_3 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_4 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_5 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInGroupsServer_6 & 0xFFFF
// 1900   {
// 1901     case COMMAND_GROUP_ADD:
// 1902       status = zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
??zclGeneral_ProcessInGroupsServer_0:
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_30:
        MOV       A,R1
        MOV       R4,A
// 1903       if ( status != ZSuccess )
        JZ        ??zclGeneral_ProcessInGroupsServer_7
// 1904       {
// 1905         if ( status == ZApsDuplicateEntry )
        MOV       A,#-0x48
        XRL       A,R4
        JNZ       ??zclGeneral_ProcessInGroupsServer_8
// 1906         {
// 1907           status = ZCL_STATUS_DUPLICATE_EXISTS;
        MOV       R4,#-0x76
        SJMP      ??zclGeneral_ProcessInGroupsServer_7
// 1908         }
// 1909         else
// 1910         {
// 1911           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInGroupsServer_8:
        MOV       R4,#-0x77
// 1912         }
// 1913       }
// 1914 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1915       if ( UNICAST_MSG( pInMsg->msg ) )
// 1916 #endif
// 1917       {
// 1918         zclGeneral_SendGroupAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1919                                          status, group.ID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_7:
        LCALL     ?Subroutine16 & 0xFFFF
// 1920         stat = ZCL_STATUS_CMD_HAS_RSP;
// 1921       }
??CrossCallReturnLabel_19:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       A,R4
        MOV       R5,A
        MOV       R4,#0x0
        LJMP      ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 76)
// 1922       break;
// 1923 
// 1924     case COMMAND_GROUP_VIEW:
// 1925 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1926       if ( UNICAST_MSG( pInMsg->msg ) )
// 1927 #endif
// 1928       {
// 1929         pGroup = aps_FindGroup( pInMsg->msg->endPoint, group.ID );
??zclGeneral_ProcessInGroupsServer_1:
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R2,A
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_42:
        LCALL     `??aps_FindGroup::?relay`; Banked call to: aps_FindGroup
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1930         if ( pGroup )
        MOV       A,R2
        ORL       A,R3
        JZ        ??zclGeneral_ProcessInGroupsServer_10
// 1931         {
// 1932           status = ZCL_STATUS_SUCCESS;
        MOV       R4,#0x0
        SJMP      ??zclGeneral_ProcessInGroupsServer_11
// 1933         }
// 1934         else
// 1935         {
// 1936           // Group not found
// 1937           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_10:
        MOV       R4,#-0x75
// 1938           pGroup = &group;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
// 1939         }
// 1940         zclGeneral_SendGroupViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1941                                           status, pGroup, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_11:
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 79)
        MOV       R5,#0x1
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL     `??zclGeneral_SendGroupViewResponse::?relay`; Banked call to: zclGeneral_SendGroupViewResponse
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1942         stat = ZCL_STATUS_CMD_HAS_RSP;
        LJMP      ??zclGeneral_ProcessInGroupsServer_12 & 0xFFFF
// 1943       }
// 1944       break;
// 1945 
// 1946     case COMMAND_GROUP_GET_MEMBERSHIP:
// 1947 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1948       if ( UNICAST_MSG( pInMsg->msg ) )
// 1949 #endif
// 1950       {
// 1951         grpCnt = *pData++;
??zclGeneral_ProcessInGroupsServer_2:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       ?V10,A
        MOV       ?V2,R0
        MOV       ?V3,R1
// 1952 
// 1953         // Allocate space for the group list
// 1954         grpList = zcl_mem_alloc( sizeof( uint16 ) * APS_MAX_GROUPS );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x20
        MOV       R3,#0x0
        LCALL     ??Subroutine94_0 & 0xFFFF
// 1955         if ( grpList != NULL )
??CrossCallReturnLabel_205:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_13 & 0xFFFF
// 1956         {
// 1957           if ( grpCnt == 0 )
        MOV       A,?V10
        JNZ       ??zclGeneral_ProcessInGroupsServer_14
// 1958           {
// 1959             // Find out all the groups of which the endpoint is a member.
// 1960             grpRspCnt = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, grpList );
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        LCALL     ?Subroutine23 & 0xFFFF
// 1961           }
??CrossCallReturnLabel_32:
        MOV       ?V4,A
        SJMP      ??zclGeneral_ProcessInGroupsServer_15
// 1962           else
// 1963           {
// 1964             // Find out the groups (in the list) of which the endpoint is a member.
// 1965             for ( i = 0; i < grpCnt; i++ )
??zclGeneral_ProcessInGroupsServer_14:
        MOV       ?V5,A
// 1966             {
// 1967               group.ID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsServer_16:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_291:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine105_0 & 0xFFFF
// 1968               pData += 2;
??CrossCallReturnLabel_257:
        MOV       A,?V2
        ADD       A,#0x2
        MOV       ?V2,A
        JNC       ??zclGeneral_ProcessInGroupsServer_17
        INC       ?V3
// 1969 
// 1970               if ( aps_FindGroup( pInMsg->msg->endPoint, group.ID ) )
??zclGeneral_ProcessInGroupsServer_17:
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_0:
        JZ        ??zclGeneral_ProcessInGroupsServer_18
// 1971                 grpList[grpRspCnt++] = group.ID;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
// 1972             }
??CrossCallReturnLabel_56:
        MOV       R0,?V4
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,?V0
        ADD       A,R0
        MOV       DPL,A
        MOV       A,?V1
        ADDC      A,R1
        MOV       DPH,A
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_209:
        INC       ?V4
??zclGeneral_ProcessInGroupsServer_18:
        DEC       ?V5
        MOV       A,?V5
        JNZ       ??zclGeneral_ProcessInGroupsServer_16
        MOV       A,?V4
        JZ        ??zclGeneral_ProcessInGroupsServer_19
// 1973           }
// 1974 
// 1975           if ( grpCnt == 0 ||  grpRspCnt != 0 )
// 1976           {
// 1977             zclGeneral_SendGroupGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1978                                                        aps_GroupsRemaingCapacity(), grpRspCnt,
// 1979                                                        grpList, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_15:
        ; Setup parameters for call to function aps_CountAllGroups
        LCALL     `??aps_CountAllGroups::?relay`; Banked call to: aps_CountAllGroups
        MOV       A,R1
        MOV       R1,A
        LCALL     ?Subroutine27 & 0xFFFF
// 1980           }
??CrossCallReturnLabel_39:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       A,?V4
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 81)
        MOV       A,#0x10
        CLR       C
        SUBB      A,R1
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 82)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       R5,#0x1
        MOV       R4,#0x2
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL     `??zclGeneral_SendGroupGetMembershipRequest::?re`; Banked call to: zclGeneral_SendGroupGetMembershipRequest
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1981 
// 1982           zcl_mem_free( grpList );
??zclGeneral_ProcessInGroupsServer_19:
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_ProcessInGroupsServer_20
// 1983         }
// 1984         else
// 1985         {
// 1986           // Couldn't allocate space for the group list -- send a Default Response command back.
// 1987           zclDefaultRspCmd_t defaultRspCmd;
// 1988 
// 1989           defaultRspCmd.commandID = pInMsg->hdr.commandID;
??zclGeneral_ProcessInGroupsServer_13:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1990           defaultRspCmd.statusCode = ZCL_STATUS_INSUFFICIENT_SPACE;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#-0x77
        MOVX      @DPTR,A
// 1991           zcl_SendDefaultRspCmd( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 1992                                  pInMsg->msg->clusterId, &defaultRspCmd,
// 1993                                  ZCL_FRAME_SERVER_CLIENT_DIR, true, 0, pInMsg->hdr.transSeqNum );
        LCALL     ?Subroutine16 & 0xFFFF
// 1994         }
??CrossCallReturnLabel_20:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 79)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 81)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL     `??zcl_SendDefaultRspCmd::?relay`; Banked call to: zcl_SendDefaultRspCmd
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1995 
// 1996         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_20:
        SJMP      ??zclGeneral_ProcessInGroupsServer_12
// 1997       }
// 1998       break;
// 1999 
// 2000     case COMMAND_GROUP_REMOVE:
// 2001 #if defined ( ZCL_SCENES )
// 2002       zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, group.ID );
??zclGeneral_ProcessInGroupsServer_3:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R2,A
        LCALL     ??Subroutine108_0 & 0xFFFF
// 2003 #endif
// 2004       if ( aps_RemoveGroup( pInMsg->msg->endPoint, group.ID ) )
??CrossCallReturnLabel_280:
        ; Setup parameters for call to function aps_RemoveGroup
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_16:
        LCALL     `??aps_RemoveGroup::?relay`; Banked call to: aps_RemoveGroup
        MOV       A,R1
        JZ        ??zclGeneral_ProcessInGroupsServer_21
// 2005       {
// 2006         status = ZCL_STATUS_SUCCESS;
        MOV       R4,#0x0
        SJMP      ??zclGeneral_ProcessInGroupsServer_22
// 2007       }
// 2008       else
// 2009       {
// 2010         status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_21:
        MOV       R4,#-0x75
// 2011       }
// 2012 
// 2013 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 2014       if ( UNICAST_MSG( pInMsg->msg ) )
// 2015 #endif
// 2016       {
// 2017         zclGeneral_SendGroupRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2018                                             status, group.ID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_22:
        LCALL     ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       A,R4
        MOV       R5,A
        MOV       R4,#0x3
??zclGeneral_ProcessInGroupsServer_9:
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL     `??zclGeneral_SendGroupResponse::?relay`; Banked call to: zclGeneral_SendGroupResponse
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2019         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_12:
        MOV       ?V0,#-0x1
// 2020       }
// 2021       break;
        SJMP      ??zclGeneral_ProcessInGroupsServer_23
// 2022 
// 2023     case COMMAND_GROUP_REMOVE_ALL:
// 2024       {
// 2025         uint8 numGroups;
// 2026         uint16 groupList[APS_MAX_GROUPS];
// 2027 
// 2028         if ( numGroups = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, groupList ) )
??zclGeneral_ProcessInGroupsServer_4:
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_33:
        MOV       ?V2,A
        JZ        ??zclGeneral_ProcessInGroupsServer_23
// 2029         {
// 2030           for ( i = 0; i < numGroups; i++ )
        MOV       ?V1,#0x0
// 2031           {
// 2032 #if defined ( ZCL_SCENES )
// 2033             zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, groupList[i] );
??zclGeneral_ProcessInGroupsServer_24:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV       R0,?V1
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOV       A,DPL
        ADD       A,R0
        MOV       DPL,A
        MOV       A,DPH
        ADDC      A,R1
        MOV       DPH,A
        LCALL     ?Subroutine14 & 0xFFFF
// 2034 #endif
// 2035           }
??CrossCallReturnLabel_278:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,?V2
        JC        ??zclGeneral_ProcessInGroupsServer_24
// 2036 
// 2037           aps_RemoveAllGroup( pInMsg->msg->endPoint );
        ; Setup parameters for call to function aps_RemoveAllGroup
        LCALL     ?Subroutine30 & 0xFFFF
// 2038         }
// 2039       }
??CrossCallReturnLabel_43:
        LCALL     `??aps_RemoveAllGroup::?relay`; Banked call to: aps_RemoveAllGroup
        SJMP      ??zclGeneral_ProcessInGroupsServer_23
// 2040       break;
// 2041 
// 2042     case COMMAND_GROUP_ADD_IF_IDENTIFYING:
// 2043       // Retrieve Identify Time
// 2044       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 2045                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
??zclGeneral_ProcessInGroupsServer_5:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR       A
        MOV       ?V6,A
        MOV       ?V7,A
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V6,R0
        MOV       ?V7,R1
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#0x3
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2046 
// 2047       // Is device identifying itself?
// 2048       if ( identifyTime > 0 )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_231:
        JZ        ??zclGeneral_ProcessInGroupsServer_23
// 2049       {
// 2050         zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine22 & 0xFFFF
// 2051       }
??CrossCallReturnLabel_31:
        SJMP      ??zclGeneral_ProcessInGroupsServer_23
// 2052       break;
// 2053 
// 2054     default:
// 2055       stat = ZFailure;
??zclGeneral_ProcessInGroupsServer_6:
        MOV       ?V0,#0x1
// 2056       break;
// 2057   }
// 2058 
// 2059   return ( stat );
??zclGeneral_ProcessInGroupsServer_23:
        MOV       R1,?V0
        MOV       A,#0x36
        LJMP      ?Subroutine3 & 0xFFFF
// 2060 }
          CFI EndBlock cfiBlock264

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond265 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker267 Using cfiCommon1
          CFI (cfiPicker267) NoFunction
          CFI (cfiPicker267) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiPicker267

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond268 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker270 Using cfiCommon1
          CFI (cfiPicker270) NoFunction
          CFI (cfiPicker270) Picker
        LCALL     ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_285:
        RET
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiPicker270

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond271 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker273 Using cfiCommon1
          CFI (cfiPicker273) NoFunction
          CFI (cfiPicker273) Picker
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiPicker273

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond274 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_32
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-2
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        LCALL     ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_283:
        LCALL     `??aps_FindAllGroupsForEndpoint::?relay`; Banked call to: aps_FindAllGroupsForEndpoint
        MOV       A,R1
        RET
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-2
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker279 Using cfiCommon1
          CFI (cfiPicker279) NoFunction
          CFI (cfiPicker279) Picker
        LCALL     ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_282:
        LCALL     `??zclGeneral_AddGroup::?relay`; Banked call to: zclGeneral_AddGroup
        RET
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiPicker279

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond280 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-2
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiPicker282 Using cfiCommon1
          CFI (cfiPicker282) NoFunction
          CFI (cfiPicker282) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_139:
        RET
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiPicker282

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond283 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond284) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-2
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker286 Using cfiCommon1
          CFI (cfiPicker286) NoFunction
          CFI (cfiPicker286) Picker
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiPicker286

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond287 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_39
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-4
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_19
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-4
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_20
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-4
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_21
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker292 Using cfiCommon1
          CFI (cfiPicker292) NoFunction
          CFI (cfiPicker292) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_276:
        ; Setup parameters for call to function zclGeneral_SendGroupViewResponse
        ; Setup parameters for call to function zclGeneral_SendGroupGetMembershipRequest
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        ; Setup parameters for call to function zcl_SendDefaultRspCmd
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiPicker292

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond293 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_39
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-6
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_19
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-6
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_20
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-6
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_21
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-6
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_11
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_12
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-4
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_13
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-4
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_14
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_15
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker303 Using cfiCommon1
          CFI (cfiPicker303) NoFunction
          CFI (cfiPicker303) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiPicker303
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine99_0:
          CFI Block cfiCond304 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_37
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond305) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-4
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_272
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-4
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_273
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-4
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_269
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-4
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function zclGeneral_FindScene
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_270
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-4
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_271
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-4
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_38
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-6
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_39
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-6
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_19
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-6
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_20
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-6
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_21
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-6
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_11
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-4
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_12
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-4
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_13
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-4
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_14
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond319) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-4
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_15
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond320) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond320) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond320) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond320) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond320) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond320) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond320) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond320) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond320) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-4
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker321 Using cfiCommon1
          CFI (cfiPicker321) NoFunction
          CFI (cfiPicker321) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiPicker321
// 2061 
// 2062 /*********************************************************************
// 2063  * @fn      zclGeneral_ProcessInGroupsClient
// 2064  *
// 2065  * @brief   Process in the received Groups Command.
// 2066  *
// 2067  * @param   pInMsg - pointer to the incoming message
// 2068  *
// 2069  * @return  ZStatus_t
// 2070  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2071 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInGroupsClient:
          CFI Block cfiBlock322 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
        CODE
// 2072                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2073 {
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 53, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 53, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 28
        MOV       A,#-0x1c
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2074   aps_Group_t group;
// 2075   uint8 *pData = pInMsg->pData;
        LCALL     ?Subroutine40 & 0xFFFF
// 2076   uint8 grpCnt;
// 2077   uint8 nameLen;
// 2078   zclGroupRsp_t rsp;
// 2079   uint8 i;
// 2080   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_272:
        MOV       ?V11,#0x0
// 2081 
// 2082   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x12
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine68 & 0xFFFF
// 2083   zcl_memset( (uint8*)&rsp, 0, sizeof( zclGroupRsp_t ) );
// 2084 
// 2085   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_123:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,?V0
        ADD       A,#0x10
        MOV       ?V0,A
        JNC       ??zclGeneral_ProcessInGroupsClient_0
        INC       ?V1
??zclGeneral_ProcessInGroupsClient_0:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,?V6
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V7
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInGroupsClient_1
        DEC       A
        JZ        ??zclGeneral_ProcessInGroupsClient_1
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsClient_2 & 0xFFFF
        DEC       A
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInGroupsClient_3 & 0xFFFF
// 2086   {
// 2087     case COMMAND_GROUP_ADD_RSP:
// 2088     case COMMAND_GROUP_VIEW_RSP:
// 2089     case COMMAND_GROUP_REMOVE_RSP:
// 2090       rsp.status = *pData++;
??zclGeneral_ProcessInGroupsClient_1:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       R7,A
// 2091       group.ID = BUILD_UINT16( pData[0], pData[1] );
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V4
        LCALL     ??Subroutine105_0 & 0xFFFF
// 2092 
// 2093       if ( rsp.status == ZCL_STATUS_SUCCESS && pInMsg->hdr.commandID == COMMAND_GROUP_VIEW_RSP )
??CrossCallReturnLabel_258:
        MOV       A,R4
        JNZ       ??CrossCallReturnLabel_264
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??CrossCallReturnLabel_264
// 2094       {
// 2095         pData += 2;   // Move past ID
// 2096         nameLen = *pData++;
        MOV       DPL,R0
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInGroupsClient_4
        INC       R7
// 2097         if ( nameLen > (APS_GROUP_NAME_LEN-1) )
??zclGeneral_ProcessInGroupsClient_4:
        MOV       A,R1
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_ProcessInGroupsClient_5
// 2098           nameLen = (APS_GROUP_NAME_LEN-1);
        MOV       R1,#0xf
// 2099         group.name[0] = nameLen;
??zclGeneral_ProcessInGroupsClient_5:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
// 2100         zcl_memcpy( &(group.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V8,R6
        MOV       ?V9,R7
        MOV       ?V10,#0x0
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 53)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_217:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
// 2101         rsp.grpName = group.name;
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 2102       }
// 2103 
// 2104       if ( pCBs->pfnGroupRsp )
??CrossCallReturnLabel_264:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_232:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsClient_6 & 0xFFFF
// 2105       {
// 2106         rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine17 & 0xFFFF
// 2107         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_22:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2108         rsp.grpCnt = 1;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 2109         rsp.grpList = &group.ID;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP100_8
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 2110         rsp.capacity = 0;
??CrossCallReturnLabel_265:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine51 & 0xFFFF
// 2111 
// 2112         pCBs->pfnGroupRsp( &rsp );
// 2113       }
??CrossCallReturnLabel_96:
        LCALL     ??Subroutine103_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL     ?CALL_IND
        LJMP      ??zclGeneral_ProcessInGroupsClient_6 & 0xFFFF
// 2114       break;
// 2115 
// 2116     case COMMAND_GROUP_GET_MEMBERSHIP_RSP:
// 2117       {
// 2118         uint16 *grpList = NULL;
??zclGeneral_ProcessInGroupsClient_2:
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 2119         rsp.capacity = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2120         grpCnt = *pData++;
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       ?V8,A
        INC       R6
        INC       R6
        MOV       A,R3
        MOV       R7,A
// 2121 
// 2122         if ( grpCnt > 0 )
        MOV       A,?V8
        JZ        ??zclGeneral_ProcessInGroupsClient_7
// 2123         {
// 2124           // Allocate space for the group list
// 2125           grpList = zcl_mem_alloc( sizeof( uint16 ) * grpCnt );
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        LCALL     ?Subroutine62 & 0xFFFF
// 2126           if ( grpList != NULL )
??CrossCallReturnLabel_111:
        JZ        ??zclGeneral_ProcessInGroupsClient_7
// 2127           {
// 2128             rsp.grpCnt = grpCnt;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V8
        MOVX      @DPTR,A
// 2129             for ( i = 0; i < grpCnt; i++ )
        MOV       R2,#0x0
        SJMP      ??zclGeneral_ProcessInGroupsClient_8
// 2130             {
// 2131               grpList[i] = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsClient_9:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R4
        ADD       A,R0
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       A,R2
        ADD       A,0xE0 /* A   */
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,?V4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
// 2132               pData += 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInGroupsClient_10
        INC       R7
// 2133             }
??zclGeneral_ProcessInGroupsClient_10:
        INC       R2
??zclGeneral_ProcessInGroupsClient_8:
        MOV       A,R2
        CLR       C
        SUBB      A,?V8
        JC        ??zclGeneral_ProcessInGroupsClient_9
// 2134           }
// 2135         }
// 2136 
// 2137         if ( pCBs->pfnGroupRsp )
??zclGeneral_ProcessInGroupsClient_7:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_233:
        JZ        ??zclGeneral_ProcessInGroupsClient_11
// 2138         {
// 2139           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine17 & 0xFFFF
// 2140           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_23:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2141           rsp.grpList = grpList;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        LCALL     ?Subroutine51 & 0xFFFF
// 2142 
// 2143           pCBs->pfnGroupRsp( &rsp );
// 2144         }
??CrossCallReturnLabel_97:
        LCALL     ??Subroutine103_0 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     ?CALL_IND
// 2145 
// 2146         if ( grpList != NULL )
??zclGeneral_ProcessInGroupsClient_11:
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??zclGeneral_ProcessInGroupsClient_6
// 2147         {
// 2148           zcl_mem_free( grpList );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_ProcessInGroupsClient_6
// 2149         }
// 2150       }
// 2151       break;
// 2152 
// 2153     default:
// 2154       stat = ZFailure;
??zclGeneral_ProcessInGroupsClient_3:
        MOV       ?V11,#0x1
// 2155       break;
// 2156   }
// 2157 
// 2158   return ( stat );
??zclGeneral_ProcessInGroupsClient_6:
        MOV       R1,?V11
        MOV       A,#0x1c
        LJMP      ?Subroutine3 & 0xFFFF
// 2159 }
          CFI EndBlock cfiBlock322

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond323 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 53)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond324) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond324) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond324) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond324) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond324) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond324) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond324) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond324) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-2
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 90)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-2
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker328 Using cfiCommon1
          CFI (cfiPicker328) NoFunction
          CFI (cfiPicker328) Picker
        MOV       R2,DPL
        MOV       R3,DPH
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiPicker328
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine100_0:
          CFI Block cfiCond329 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_222
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond330) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 53)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 90)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker340 Using cfiCommon1
          CFI (cfiPicker340) NoFunction
          CFI (cfiPicker340) Picker
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiPicker340

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond341 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker343 Using cfiCommon1
          CFI (cfiPicker343) NoFunction
          CFI (cfiPicker343) Picker
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiPicker343

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond344 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker346 Using cfiCommon1
          CFI (cfiPicker346) NoFunction
          CFI (cfiPicker346) Picker
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiPicker346
// 2160 #endif // ZCL_GROUPS
// 2161 
// 2162 #if defined( ZCL_SCENES )
// 2163 #if !defined ( ZCL_STANDALONE )
// 2164 /*********************************************************************
// 2165  * @fn      zclGeneral_AddScene
// 2166  *
// 2167  * @brief   Add a scene for an endpoint
// 2168  *
// 2169  * @param   endpoint -
// 2170  * @param   scene - new scene item
// 2171  *
// 2172  * @return  ZStatus_t
// 2173  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2174 ZStatus_t zclGeneral_AddScene( uint8 endpoint, zclGeneral_Scene_t *scene )
zclGeneral_AddScene:
          CFI Block cfiBlock347 Using cfiCommon0
          CFI Function zclGeneral_AddScene
        CODE
// 2175 {
        FUNCALL zclGeneral_AddScene, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddScene, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2176   zclGenSceneItem_t *pNewItem;
// 2177   zclGenSceneItem_t *pLoop;
// 2178 
// 2179   // Fill in the new profile list
// 2180   pNewItem = zcl_mem_alloc( sizeof( zclGenSceneItem_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x3a
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R6,?V4
        MOV       R7,?V5
// 2181   if ( pNewItem == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??zclGeneral_AddScene_0
// 2182     return ( ZMemError );
        MOV       R1,#0x10
        SJMP      ??zclGeneral_AddScene_1
// 2183 
// 2184   // Fill in the plugin record.
// 2185   pNewItem->next = (zclGenSceneItem_t *)NULL;
??zclGeneral_AddScene_0:
        LCALL     ?Subroutine54 & 0xFFFF
// 2186   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_101:
        LCALL     ?Subroutine50 & 0xFFFF
// 2187   zcl_memcpy( (uint8*)&(pNewItem->scene), (uint8*)scene, sizeof ( zclGeneral_Scene_t ));
??CrossCallReturnLabel_94:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       A,R2
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2188 
// 2189   // Find spot in list
// 2190   if (  zclGenSceneTable == NULL )
        MOV       DPTR,#zclGenSceneTable
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_234:
        MOV       DPTR,#zclGenSceneTable
        JZ        ??zclGeneral_AddScene_2
// 2191   {
// 2192     zclGenSceneTable = pNewItem;
// 2193   }
// 2194   else
// 2195   {
// 2196     // Look for end of list
// 2197     pLoop = zclGenSceneTable;
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_296:
        SJMP      ??zclGeneral_AddScene_3
// 2198     while ( pLoop->next != NULL )
// 2199       pLoop = pLoop->next;
??zclGeneral_AddScene_4:
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
??zclGeneral_AddScene_3:
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_235:
        JNZ       ??zclGeneral_AddScene_4
// 2200 
// 2201     // Put new item at end of list
// 2202     pLoop->next = pNewItem;
        MOV       DPL,R2
        MOV       DPH,R3
??zclGeneral_AddScene_2:
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
// 2203   }
// 2204 
// 2205   // Update NV
// 2206   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2207 
// 2208   return ( ZSuccess );
        MOV       R1,#0x0
??zclGeneral_AddScene_1:
        LJMP      ?Subroutine6 & 0xFFFF
// 2209 }
          CFI EndBlock cfiBlock347

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function zclGeneral_AddScene
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker350 Using cfiCommon1
          CFI (cfiPicker350) NoFunction
          CFI (cfiPicker350) Picker
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiPicker350

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond351 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function zclGeneral_AddScene
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-2
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker353 Using cfiCommon1
          CFI (cfiPicker353) NoFunction
          CFI (cfiPicker353) Picker
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiPicker353

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond354 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_246
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-2
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-2
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker359 Using cfiCommon1
          CFI (cfiPicker359) NoFunction
          CFI (cfiPicker359) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiPicker359
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine101_0:
          CFI Block cfiCond360 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_245
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-2
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-2
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-2
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker366 Using cfiCommon1
          CFI (cfiPicker366) NoFunction
          CFI (cfiPicker366) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiPicker366
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiCond367 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_228
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-2
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-2
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function zclGeneral_AddScene
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function zclGeneral_AddScene
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-2
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-2
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-2
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-2
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-2
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-2
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-2
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-2
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-2
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker390 Using cfiCommon1
          CFI (cfiPicker390) NoFunction
          CFI (cfiPicker390) Picker
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_308:
        ORL       A,R1
        RET
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiPicker390
// 2210 #endif // ZCL_STANDALONE
// 2211 
// 2212 #if !defined ( ZCL_STANDALONE )
// 2213 /*********************************************************************
// 2214  * @fn      zclGeneral_FindScene
// 2215  *
// 2216  * @brief   Find a scene with endpoint and sceneID
// 2217  *
// 2218  * @param   endpoint -
// 2219  * @param   groupID - what group the scene belongs to
// 2220  * @param   sceneID - ID to look for scene
// 2221  *
// 2222  * @return  a pointer to the scene information, NULL if not found
// 2223  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2224 zclGeneral_Scene_t *zclGeneral_FindScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_FindScene:
          CFI Block cfiBlock391 Using cfiCommon0
          CFI Function zclGeneral_FindScene
        CODE
// 2225 {
        REQUIRE ?V0
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R5,A
// 2226   zclGenSceneItem_t *pLoop;
// 2227 
// 2228   // Look for end of list
// 2229   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_FindScene_0
// 2230   while ( pLoop )
// 2231   {
// 2232     if ( (pLoop->endpoint == endpoint || endpoint == 0xFF)
// 2233         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2234     {
// 2235       return ( &(pLoop->scene) );
// 2236     }
// 2237     pLoop = pLoop->next;
??zclGeneral_FindScene_1:
        MOV       DPL,R6
        MOV       DPH,R7
??zclGeneral_FindScene_0:
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_270:
        MOV       A,R6
        ORL       A,R7
        JZ        ??zclGeneral_FindScene_2
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
        JZ        ??zclGeneral_FindScene_3
        MOV       A,#-0x1
        XRL       A,R5
        JNZ       ??zclGeneral_FindScene_1
??zclGeneral_FindScene_3:
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_110:
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zclGeneral_FindScene_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??zclGeneral_FindScene_4:
        JNZ       ??zclGeneral_FindScene_1
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        JNZ       ??zclGeneral_FindScene_1
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        SJMP      ??zclGeneral_FindScene_5
// 2238   }
// 2239 
// 2240   return ( (zclGeneral_Scene_t *)NULL );
??zclGeneral_FindScene_2:
        MOV       R2,#0x0
        MOV       R3,#0x0
??zclGeneral_FindScene_5:
          CFI EndBlock cfiBlock391
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2241 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock392 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock392

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond393 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function zclGeneral_FindScene
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-2
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker395 Using cfiCommon1
          CFI (cfiPicker395) NoFunction
          CFI (cfiPicker395) Picker
        MOV       A,R6
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiPicker395
// 2242 #endif // ZCL_STANDALONE
// 2243 
// 2244 #if !defined ( ZCL_STANDALONE )
// 2245 /*********************************************************************
// 2246  * @fn      zclGeneral_FindAllScenesForGroup
// 2247  *
// 2248  * @brief   Find all the scenes with groupID
// 2249  *
// 2250  * @param   endpoint - endpoint to look for
// 2251  * @param   sceneList - List to hold scene IDs (should hold APS_MAX_SCENES entries)
// 2252  *
// 2253  * @return  number of scenes copied to sceneList
// 2254  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2255 uint8 zclGeneral_FindAllScenesForGroup( uint8 endpoint, uint16 groupID, uint8 *sceneList )
zclGeneral_FindAllScenesForGroup:
          CFI Block cfiBlock396 Using cfiCommon0
          CFI Function zclGeneral_FindAllScenesForGroup
        CODE
// 2256 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
// 2257   zclGenSceneItem_t *pLoop;
// 2258   uint8 cnt = 0;
        MOV       R6,#0x0
// 2259 
// 2260   // Look for end of list
// 2261   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_FindAllScenesForGroup_0
// 2262   while ( pLoop )
// 2263   {
// 2264     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
??zclGeneral_FindAllScenesForGroup_1:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
        JNZ       ??zclGeneral_FindAllScenesForGroup_2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zclGeneral_FindAllScenesForGroup_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??zclGeneral_FindAllScenesForGroup_3:
        JNZ       ??zclGeneral_FindAllScenesForGroup_2
// 2265       sceneList[cnt++] = pLoop->scene.ID;
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        ADD       A,R6
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R6
// 2266     pLoop = pLoop->next;
??zclGeneral_FindAllScenesForGroup_2:
        MOV       DPL,R0
        MOV       DPH,R1
// 2267   }
??zclGeneral_FindAllScenesForGroup_0:
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_229:
        JNZ       ??zclGeneral_FindAllScenesForGroup_1
// 2268   return ( cnt );
        MOV       A,R6
        MOV       R1,A
        LJMP      ??Subroutine98_0 & 0xFFFF
// 2269 }
          CFI EndBlock cfiBlock396
// 2270 #endif // ZCL_STANDALONE
// 2271 
// 2272 #if !defined ( ZCL_STANDALONE )
// 2273 /*********************************************************************
// 2274  * @fn      zclGeneral_RemoveScene
// 2275  *
// 2276  * @brief   Remove a scene with endpoint and sceneID
// 2277  *
// 2278  * @param   endpoint -
// 2279  * @param   groupID - what group the scene belongs to
// 2280  * @param   sceneID - ID to look for scene
// 2281  *
// 2282  * @return  TRUE if removed, FALSE if not found
// 2283  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2284 uint8 zclGeneral_RemoveScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_RemoveScene:
          CFI Block cfiBlock397 Using cfiCommon0
          CFI Function zclGeneral_RemoveScene
        CODE
// 2285 {
        FUNCALL zclGeneral_RemoveScene, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
// 2286   zclGenSceneItem_t *pLoop;
// 2287   zclGenSceneItem_t *pPrev;
// 2288 
// 2289   // Look for end of list
// 2290   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        LCALL     ?Subroutine44 & 0xFFFF
// 2291   pPrev = NULL;
??CrossCallReturnLabel_84:
        MOV       R4,#0x0
        MOV       R5,#0x0
        SJMP      ??CrossCallReturnLabel_85
// 2292   while ( pLoop )
// 2293   {
// 2294     if ( pLoop->endpoint == endpoint
// 2295         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2296     {
// 2297       if ( pPrev == NULL )
// 2298         zclGenSceneTable = pLoop->next;
// 2299       else
// 2300         pPrev->next = pLoop->next;
// 2301 
// 2302       // Free the memory
// 2303       zcl_mem_free( pLoop );
// 2304 
// 2305       // Update NV
// 2306       zclGeneral_ScenesWriteNV();
// 2307 
// 2308       return ( TRUE );
// 2309     }
// 2310     pPrev = pLoop;
??zclGeneral_RemoveScene_0:
        MOV       A,R0
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
// 2311     pLoop = pLoop->next;
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV       A,R0
        ORL       A,R1
        JZ        ??zclGeneral_RemoveScene_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??zclGeneral_RemoveScene_0
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zclGeneral_RemoveScene_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??zclGeneral_RemoveScene_2:
        JNZ       ??zclGeneral_RemoveScene_0
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
        JNZ       ??zclGeneral_RemoveScene_0
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_57:
        MOV       A,R4
        ORL       A,R5
        JNZ       ??zclGeneral_RemoveScene_3
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_RemoveScene_4
??zclGeneral_RemoveScene_3:
        MOV       DPL,R4
        MOV       DPH,R5
??zclGeneral_RemoveScene_4:
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_210:
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
        MOV       R1,#0x1
        SJMP      ??zclGeneral_RemoveScene_5
// 2312   }
// 2313 
// 2314   return ( FALSE );
??zclGeneral_RemoveScene_1:
        MOV       R1,#0x0
??zclGeneral_RemoveScene_5:
        LJMP      ?Subroutine7 & 0xFFFF
// 2315 }
          CFI EndBlock cfiBlock397

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond398 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function zclGeneral_SendSceneResponse
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-2
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond400) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-2
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function zclGeneral_RemoveScene
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function zclGeneral_RemoveScene
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-2
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-2
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function zclGeneral_ScenesInit
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-2
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 68)
          CFI Block cfiPicker407 Using cfiCommon1
          CFI (cfiPicker407) NoFunction
          CFI (cfiPicker407) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiPicker407
// 2316 #endif // ZCL_STANDALONE
// 2317 
// 2318 #if !defined ( ZCL_STANDALONE )
// 2319 /*********************************************************************
// 2320  * @fn      zclGeneral_RemoveAllScenes
// 2321  *
// 2322  * @brief   Remove all scenes with endpoint and group Id
// 2323  *
// 2324  * @param   endpoint -
// 2325  * @param   groupID - ID to look for group
// 2326  *
// 2327  * @return  none
// 2328  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2329 void zclGeneral_RemoveAllScenes( uint8 endpoint, uint16 groupID )
zclGeneral_RemoveAllScenes:
          CFI Block cfiBlock408 Using cfiCommon0
          CFI Function zclGeneral_RemoveAllScenes
        CODE
// 2330 {
        FUNCALL zclGeneral_RemoveAllScenes, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveAllScenes, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV       A,#-0xd
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV       ?V4,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2331   zclGenSceneItem_t *pLoop;
// 2332   zclGenSceneItem_t *pPrev;
// 2333   zclGenSceneItem_t *pNext;
// 2334 
// 2335   // Look for end of list
// 2336   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        LCALL     ?Subroutine35 & 0xFFFF
// 2337   pPrev = NULL;
??CrossCallReturnLabel_58:
        MOV       R6,#0x0
        MOV       R7,#0x0
        SJMP      ??zclGeneral_RemoveAllScenes_0
// 2338   while ( pLoop )
// 2339   {
// 2340     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
// 2341     {
// 2342       if ( pPrev == NULL )
// 2343         zclGenSceneTable = pLoop->next;
// 2344       else
// 2345         pPrev->next = pLoop->next;
??zclGeneral_RemoveAllScenes_1:
        MOV       DPL,R6
        MOV       DPH,R7
??zclGeneral_RemoveAllScenes_2:
        LCALL     ?Subroutine57 & 0xFFFF
// 2346       pNext = pLoop->next;
??CrossCallReturnLabel_266:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
// 2347 
// 2348       // Free the memory
// 2349       zcl_mem_free( pLoop );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2350       pLoop = pNext;
        MOV       R2,?V2
        MOV       R3,?V3
??zclGeneral_RemoveAllScenes_0:
        MOV       A,R2
        ORL       A,R3
        JZ        ??zclGeneral_RemoveAllScenes_3
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V4
        JNZ       ??zclGeneral_RemoveAllScenes_4
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??zclGeneral_RemoveAllScenes_5
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??zclGeneral_RemoveAllScenes_5:
        JNZ       ??zclGeneral_RemoveAllScenes_4
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_86:
        MOV       A,R6
        ORL       A,R7
        JNZ       ??zclGeneral_RemoveAllScenes_1
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_RemoveAllScenes_2
// 2351     }
// 2352     else
// 2353     {
// 2354       pPrev = pLoop;
??zclGeneral_RemoveAllScenes_4:
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2355       pLoop = pLoop->next;
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine35 & 0xFFFF
// 2356     }
// 2357   }
??CrossCallReturnLabel_59:
        SJMP      ??zclGeneral_RemoveAllScenes_0
// 2358 
// 2359   // Update NV
// 2360   zclGeneral_ScenesWriteNV();
??zclGeneral_RemoveAllScenes_3:
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2361 }
        MOV       R7,#0x5
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock408
// 2362 #endif // ZCL_STANDALONE
// 2363 
// 2364 #if !defined ( ZCL_STANDALONE )
// 2365 /*********************************************************************
// 2366  * @fn      zclGeneral_CountScenes
// 2367  *
// 2368  * @brief   Count the number of scenes for an endpoint
// 2369  *
// 2370  * @param   endpoint -
// 2371  *
// 2372  * @return  number of scenes assigned to an endpoint
// 2373  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2374 uint8 zclGeneral_CountScenes( uint8 endpoint )
zclGeneral_CountScenes:
          CFI Block cfiBlock409 Using cfiCommon0
          CFI Function zclGeneral_CountScenes
        CODE
// 2375 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        MOV       A,R1
        MOV       R0,A
// 2376   zclGenSceneItem_t *pLoop;
// 2377   uint8 cnt = 0;
        MOV       R1,#0x0
// 2378 
// 2379   // Look for end of list
// 2380   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_CountScenes_0
// 2381   while ( pLoop )
// 2382   {
// 2383     if ( pLoop->endpoint == endpoint  )
??zclGeneral_CountScenes_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??zclGeneral_CountScenes_2
// 2384       cnt++;
        INC       R1
// 2385     pLoop = pLoop->next;
??zclGeneral_CountScenes_2:
        MOV       DPL,R2
        MOV       DPH,R3
// 2386   }
??zclGeneral_CountScenes_0:
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_48:
        JNZ       ??zclGeneral_CountScenes_1
// 2387   return ( cnt );
        SJMP      ?Subroutine5
// 2388 }
          CFI EndBlock cfiBlock409

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond410 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-2
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function zclGeneral_CountScenes
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond412) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond412) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond412) CFA_SP SP+-7
          CFI Block cfiPicker413 Using cfiCommon1
          CFI (cfiPicker413) NoFunction
          CFI (cfiPicker413) Picker
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_299:
        MOV       R3,A
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiPicker413
// 2389 #endif
// 2390 
// 2391 #if !defined ( ZCL_STANDALONE )
// 2392 /*********************************************************************
// 2393  * @fn      zclGeneral_CountAllScenes
// 2394  *
// 2395  * @brief   Count the total number of scenes
// 2396  *
// 2397  * @param   none
// 2398  *
// 2399  * @return  number of scenes
// 2400  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2401 uint8 zclGeneral_CountAllScenes( void )
zclGeneral_CountAllScenes:
          CFI Block cfiBlock414 Using cfiCommon0
          CFI Function zclGeneral_CountAllScenes
        CODE
// 2402 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2403   zclGenSceneItem_t *pLoop;
// 2404   uint8 cnt = 0;
        MOV       R1,#0x0
// 2405 
// 2406   // Look for end of list
// 2407   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_CountAllScenes_0
// 2408   while ( pLoop )
// 2409   {
// 2410     cnt++;
??zclGeneral_CountAllScenes_1:
        INC       R1
// 2411     pLoop = pLoop->next;
// 2412   }
??zclGeneral_CountAllScenes_0:
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_297:
        MOV       DPL,R2
        MOV       DPH,A
        MOV       A,DPL
        ORL       A,DPH
        JNZ       ??zclGeneral_CountAllScenes_1
// 2413   return ( cnt );
          CFI EndBlock cfiBlock414
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2414 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock415 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP       DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP       DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock415

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond416 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_52
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-4
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_53
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-4
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_54
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-4
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_55
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-4
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_56
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-4
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function zclGeneral_RemoveScene
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_57
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-4
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_58
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_59
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function zclGeneral_AddScene
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-2
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_49
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-4
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_50
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclGeneral_CountScenes
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_48
          CFI (cfiCond428) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond428) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond428) CFA_SP SP+-9
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function zclGeneral_CountAllScenes
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond429) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond429) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond429) CFA_SP SP+-7
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_278
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-4
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_279
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-4
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_294
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-4
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_295
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-4
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_290
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-4
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_291
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-4
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_292
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-4
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_293
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond437) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-4
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker438 Using cfiCommon1
          CFI (cfiPicker438) NoFunction
          CFI (cfiPicker438) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiPicker438
// 2415 #endif // ZCL_STANDALONE
// 2416 
// 2417 /*********************************************************************
// 2418  * @fn      zclGeneral_ReadSceneCountCB
// 2419  *
// 2420  * @brief   Read the number of scenes currently in the device's
// 2421  *          scene table (i.e., the Scene Count attribute).
// 2422  *
// 2423  *          Note: This function gets called only when the pointer
// 2424  *                'dataPtr' to the Scene Count attribute value is
// 2425  *                NULL in the attribute database registered with
// 2426  *                the ZCL.
// 2427  *
// 2428  * @param   clusterId - cluster that attribute belongs to
// 2429  * @param   attrId - attribute to be read or written
// 2430  * @param   oper - ZCL_OPER_LEN, ZCL_OPER_READ, or ZCL_OPER_WRITE
// 2431  * @param   pValue - pointer to attribute value
// 2432  * @param   pLen - pointer to length of attribute value read
// 2433  *
// 2434  * @return  status
// 2435  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2436 ZStatus_t zclGeneral_ReadSceneCountCB( uint16 clusterId, uint16 attrId,
zclGeneral_ReadSceneCountCB:
          CFI Block cfiBlock439 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
        CODE
// 2437                                        uint8 oper, uint8 *pValue, uint16 *pLen )
// 2438 {
        FUNCALL zclGeneral_ReadSceneCountCB, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       ?V1,R1
// 2439   ZStatus_t status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine96_0 & 0xFFFF
// 2440 
// 2441   // This callback function should only be called for the Scene Count attribute
// 2442   switch ( oper )
??CrossCallReturnLabel_214:
        MOV       A,?V1
        JZ        ??zclGeneral_ReadSceneCountCB_0
        DEC       A
        JNZ       ??zclGeneral_ReadSceneCountCB_1
// 2443   {
// 2444     case ZCL_OPER_LEN:
// 2445       *pLen = 1; // uint8
// 2446       break;
// 2447 
// 2448     case ZCL_OPER_READ:
// 2449       *pValue = zclGeneral_CountAllScenes();
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine103_0 & 0xFFFF
??CrossCallReturnLabel_255:
        MOV       A,R1
        MOVX      @DPTR,A
// 2450 
// 2451       if ( pLen != NULL )
        MOV       A,R6
        ORL       A,R7
        JZ        ??zclGeneral_ReadSceneCountCB_2
// 2452       {
// 2453         *pLen = 1;
??zclGeneral_ReadSceneCountCB_0:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,#0x1
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
        SJMP      ??zclGeneral_ReadSceneCountCB_2
// 2454       }
// 2455       break;
// 2456 
// 2457     case ZCL_OPER_WRITE:
// 2458       // Fall through
// 2459 
// 2460     default:
// 2461       status = ZCL_STATUS_SOFTWARE_FAILURE; // should never get here!
??zclGeneral_ReadSceneCountCB_1:
        MOV       ?V0,#-0x3f
// 2462       break;
// 2463   }
// 2464 
// 2465   return ( status );
??zclGeneral_ReadSceneCountCB_2:
        MOV       R1,?V0
        LJMP      ??Subroutine98_0 & 0xFFFF
// 2466 }
          CFI EndBlock cfiBlock439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,?V2
        MOV       DPH,?V3
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine103_0:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-2
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-2
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker448 Using cfiCommon1
          CFI (cfiPicker448) NoFunction
          CFI (cfiPicker448) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiPicker448
// 2467 
// 2468 /*********************************************************************
// 2469  * @fn      zclGeneral_ProcessInScenesServer
// 2470  *
// 2471  * @brief   Process in the received Scenes Command.
// 2472  *
// 2473  * @param   pInMsg - pointer to the incoming message
// 2474  *
// 2475  * @return  ZStatus_t
// 2476  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2477 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesServer:
          CFI Block cfiBlock449 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
        CODE
// 2478                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2479 {
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneViewRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindAllScenesForGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneGetMembershipResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 89, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 60
        MOV       A,#-0x3c
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V6,R4
        MOV       ?V7,R5
// 2480   zclGeneral_Scene_t scene;
// 2481   zclGeneral_Scene_t *pScene;
// 2482   uint8 *pData = pInMsg->pData;
        MOV       A,R2
        ADD       A,#0x8
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V8
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
// 2483   uint8 nameLen;
// 2484   uint8 status;
// 2485   uint8 sceneCnt = 0;
        MOV       ?V5,#0x0
// 2486   uint8 *sceneList = NULL;
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
// 2487   uint8 sendRsp = TRUE;
// 2488   uint8 nameSupport = FALSE;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 2489   ZStatus_t stat = ZSuccess;
        MOV       ?V4,#0x0
// 2490 
// 2491   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,A
        MOV       R1,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2492 
// 2493   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_294:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine105_0 & 0xFFFF
// 2494   pData += 2;   // Move past group ID
// 2495   scene.ID = *pData++;
??CrossCallReturnLabel_259:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x3
        MOV       ?V0,A
        JNC       ??zclGeneral_ProcessInScenesServer_0
        INC       ?V1
// 2496 
// 2497   switch ( pInMsg->hdr.commandID )
??zclGeneral_ProcessInScenesServer_0:
        MOV       A,R6
        ADD       A,#0x6
        MOV       ?V12,A
        CLR       A
        ADDC      A,R7
        MOV       ?V13,A
        MOV       A,R6
        ADD       A,#0x7
        MOV       ?V10,A
        CLR       A
        ADDC      A,R7
        MOV       ?V11,A
        MOV       DPL,?V10
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInScenesServer_1
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_2 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_3 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_4 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_5 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_6 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_7 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInScenesServer_8 & 0xFFFF
// 2498   {
// 2499     case COMMAND_SCENE_ADD:
// 2500 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2501     case COMMAND_SCENE_ENHANCED_ADD:
// 2502 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2503       // Parse the rest of the incoming message
// 2504       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesServer_1:
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_295:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine105_0 & 0xFFFF
// 2505       pData += 2;
// 2506 
// 2507       if ( pInMsg->hdr.commandID == COMMAND_SCENE_ENHANCED_ADD )
??CrossCallReturnLabel_260:
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        XRL       A,#0x40
        JNZ       ??CrossCallReturnLabel_267
// 2508       {
// 2509         // Received transition time is in 1/10 second
// 2510         scene.transTime100ms = scene.transTime % 10;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       R2,#0xa
        MOV       R3,#0x0
        LCALL     ?US_DIV_MOD
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
// 2511         scene.transTime /= 10;
??CrossCallReturnLabel_211:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
// 2512       }
??CrossCallReturnLabel_87:
        MOV       R2,#0xa
        MOV       R3,#0x0
        LCALL     ?US_DIV_MOD
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 2513 
// 2514       nameLen= *pData++; // Name length
??CrossCallReturnLabel_267:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       A,?V0
        ADD       A,#0x3
        MOV       ?V0,A
        JNC       ??zclGeneral_ProcessInScenesServer_9
        INC       ?V1
// 2515 
// 2516       // Retrieve Name Support attribute
// 2517       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_SCENES,
// 2518                         ATTRID_SCENES_NAME_SUPPORT, &nameSupport, NULL );
??zclGeneral_ProcessInScenesServer_9:
        ; Setup parameters for call to function zcl_ReadAttrData
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,#0x5
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_29:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2519 
// 2520       if ( nameSupport )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInScenesServer_10
// 2521       {
// 2522         if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
        MOV       A,?V2
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_ProcessInScenesServer_11
// 2523           nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV       ?V2,#0xf
// 2524         scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesServer_11:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine50 & 0xFFFF
// 2525         zcl_memcpy( &(scene.name[1]), pData, nameLen );
// 2526       }
??CrossCallReturnLabel_95:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       R4,?V2
        MOV       R5,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_218:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2527 
// 2528       pData += nameLen; // move past name, use original length
??zclGeneral_ProcessInScenesServer_10:
        MOV       R0,?V2
        MOV       A,?V0
        ADD       A,R0
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V1,A
// 2529 
// 2530       scene.extLen = pInMsg->pDataLen - ( (uint16)( pData - pInMsg->pData ) );
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       R1,?V0
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R1
        ADD       A,R0
        MOV       R0,A
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2531       if ( scene.extLen > 0 )
        JZ        ??zclGeneral_ProcessInScenesServer_12
// 2532       {
// 2533         // Copy the extention field(s)
// 2534         if ( scene.extLen > ZCL_GEN_SCENE_EXT_LEN )
        CLR       C
        SUBB      A,#0x20
        JC        ??zclGeneral_ProcessInScenesServer_13
// 2535         {
// 2536           scene.extLen = ZCL_GEN_SCENE_EXT_LEN;
        MOV       A,#0x1f
        MOVX      @DPTR,A
// 2537         }
// 2538         zcl_memcpy( scene.extField, pData, scene.extLen );
??zclGeneral_ProcessInScenesServer_13:
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
// 2539       }
??CrossCallReturnLabel_219:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2540 
// 2541       if ( scene.groupID == 0x0000 ||
// 2542            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_12:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_236:
        JZ        ??zclGeneral_ProcessInScenesServer_14
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_1:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_15 & 0xFFFF
// 2543       {
// 2544         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2545         // does and the corresponding Group exits
// 2546         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_14:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
// 2547         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
??CrossCallReturnLabel_7:
        JNZ       ??zclGeneral_ProcessInScenesServer_16
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,R1
        CLR       C
        SUBB      A,#0x10
        JC        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_17 & 0xFFFF
// 2548         {
// 2549           status = ZCL_STATUS_SUCCESS;
??zclGeneral_ProcessInScenesServer_16:
        MOV       ?V0,#0x0
// 2550           if ( pScene != NULL )
        MOV       A,?V2
        ORL       A,?V3
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_18 & 0xFFFF
// 2551           {
// 2552             // The Scene already exists so update it
// 2553             pScene->transTime = scene.transTime;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_88:
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine57 & 0xFFFF
// 2554             zcl_memcpy( pScene->name, scene.name, ZCL_GEN_SCENE_NAME_LEN );
??CrossCallReturnLabel_268:
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       R4,#0x10
        MOV       R5,#0x0
        MOV       A,?V2
        ADD       A,#0x7
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2555 
// 2556             // Use the new extention field(s)
// 2557             zcl_memcpy( pScene->extField, scene.extField, scene.extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V2
        ADD       A,#0x18
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_227:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2558             pScene->extLen = scene.extLen;
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V2
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2559 
// 2560             // Save Scenes
// 2561             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2562           }
        SJMP      ??zclGeneral_ProcessInScenesServer_19
// 2563           else
// 2564           {
// 2565             // The Scene doesn't exist so add it
// 2566             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
??zclGeneral_ProcessInScenesServer_18:
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine24 & 0xFFFF
// 2567           }
// 2568         }
??CrossCallReturnLabel_34:
        SJMP      ??zclGeneral_ProcessInScenesServer_19
// 2569         else
// 2570         {
// 2571           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_17:
        MOV       ?V0,#-0x77
        SJMP      ??zclGeneral_ProcessInScenesServer_19
// 2572         }
// 2573       }
// 2574       else
// 2575       {
// 2576         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_15:
        MOV       ?V0,#-0x7b
// 2577       }
// 2578 
// 2579       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_19:
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_11:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_246:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2580       {
// 2581         if ( pInMsg->hdr.commandID == COMMAND_SCENE_ADD )
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2582         {
// 2583           zclGeneral_SendSceneAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2584                                           status, scene.groupID, scene.ID,
// 2585                                           true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2586         }
// 2587 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2588         else // COMMAND_SCENE_ENHANCED_ADD
// 2589         {
// 2590           zclGeneral_SendSceneEnhancedAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2591                                                   status, scene.groupID, scene.ID,
// 2592                                                   true, pInMsg->hdr.transSeqNum );
// 2593         }
// 2594 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2595       }
??CrossCallReturnLabel_168:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_165:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x0
        LJMP      ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2596       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2597 
// 2598       break;
// 2599 
// 2600     case COMMAND_SCENE_VIEW:
// 2601 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2602     case COMMAND_SCENE_ENHANCED_VIEW:
// 2603 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2604       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_2:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
// 2605       if ( pScene != NULL )
??CrossCallReturnLabel_8:
        JZ        ??zclGeneral_ProcessInScenesServer_22
// 2606       {
// 2607         status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesServer_23
// 2608       }
// 2609       else
// 2610       {
// 2611         // Scene not found
// 2612         if ( scene.groupID != 0x0000 &&
// 2613              aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_22:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_237:
        JZ        ??zclGeneral_ProcessInScenesServer_24
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_2:
        JNZ       ??zclGeneral_ProcessInScenesServer_24
// 2614         {
// 2615           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
        MOV       ?V0,#-0x7b
        SJMP      ??zclGeneral_ProcessInScenesServer_25
// 2616         }
// 2617         else
// 2618         {
// 2619           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_24:
        MOV       ?V0,#-0x75
// 2620         }
// 2621         pScene = &scene;
??zclGeneral_ProcessInScenesServer_25:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
// 2622       }
// 2623 
// 2624       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_23:
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_12:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_247:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2625       {
// 2626         if ( pInMsg->hdr.commandID == COMMAND_SCENE_VIEW )
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2627         {
// 2628           zclGeneral_SendSceneViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2629                                            status, pScene, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneViewRsp
        LCALL     ?Subroutine13 & 0xFFFF
// 2630         }
// 2631 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2632         else
// 2633         {
// 2634           zclGeneral_SendSceneEnhancedViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2635                                                    status, pScene, true, pInMsg->hdr.transSeqNum );
// 2636         }
// 2637 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2638       }
??CrossCallReturnLabel_169:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV       R5,?V0
        MOV       R4,#0x1
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_120:
        LCALL     `??zclGeneral_SendSceneViewRsp::?relay`; Banked call to: zclGeneral_SendSceneViewRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2639       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2640       break;
// 2641 
// 2642     case COMMAND_SCENE_REMOVE:
// 2643       if ( zclGeneral_RemoveScene( pInMsg->msg->endPoint, scene.groupID, scene.ID ) )
??zclGeneral_ProcessInScenesServer_3:
        ; Setup parameters for call to function zclGeneral_RemoveScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_17:
        LCALL     `??zclGeneral_RemoveScene::?relay`; Banked call to: zclGeneral_RemoveScene
        MOV       A,R1
        JZ        ??zclGeneral_ProcessInScenesServer_26
// 2644       {
// 2645         status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesServer_27
// 2646       }
// 2647       else
// 2648       {
// 2649         // Scene not found
// 2650         if ( aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_26:
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_3:
        JNZ       ??zclGeneral_ProcessInScenesServer_28
// 2651         {
// 2652           // The Group is not in the Group Table
// 2653           status = ZCL_STATUS_INVALID_FIELD;
        MOV       ?V0,#-0x7b
        SJMP      ??zclGeneral_ProcessInScenesServer_27
// 2654         }
// 2655         else
// 2656         {
// 2657           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_28:
        MOV       ?V0,#-0x75
// 2658         }
// 2659       }
// 2660 
// 2661       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_27:
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_13:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_248:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2662       {
// 2663         // Addressed to this device (not to a group) - send a response back
// 2664         zclGeneral_SendSceneRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2665                                             status, scene.groupID,
// 2666                                             scene.ID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2667       }
??CrossCallReturnLabel_170:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_166:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x2
        LJMP      ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2668       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2669       break;
// 2670 
// 2671     case COMMAND_SCENE_REMOVE_ALL:
// 2672       if ( scene.groupID == 0x0000 ||
// 2673            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_4:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_238:
        JZ        ??zclGeneral_ProcessInScenesServer_29
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_4:
        JZ        ??zclGeneral_ProcessInScenesServer_30
// 2674       {
// 2675         zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, scene.groupID );
??zclGeneral_ProcessInScenesServer_29:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 2676         status = ZCL_STATUS_SUCCESS;
??CrossCallReturnLabel_279:
        MOV       ?V0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesServer_31
// 2677       }
// 2678       else
// 2679       {
// 2680         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_30:
        MOV       ?V0,#-0x7b
// 2681       }
// 2682 
// 2683       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_31:
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_14:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_249:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2684       {
// 2685         // Addressed to this device (not to a group) - send a response back
// 2686         zclGeneral_SendSceneRemoveAllResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2687                                                status, scene.groupID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2688       }
??CrossCallReturnLabel_171:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x3
        LJMP      ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2689       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2690       break;
// 2691 
// 2692     case COMMAND_SCENE_STORE:
// 2693       if ( scene.groupID == 0x0000 ||
// 2694            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_5:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_239:
        JZ        ??zclGeneral_ProcessInScenesServer_32
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_5:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_33 & 0xFFFF
// 2695       {
// 2696         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2697         // does and the corresponding Group exits
// 2698         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_32:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
// 2699         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
??CrossCallReturnLabel_9:
        JNZ       ??zclGeneral_ProcessInScenesServer_34
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,R1
        CLR       C
        SUBB      A,#0x10
        JNC       ??zclGeneral_ProcessInScenesServer_35
// 2700         {
// 2701           uint8 sceneChanged = FALSE;
??zclGeneral_ProcessInScenesServer_34:
        CLR       ?VB.0
// 2702 
// 2703           status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
// 2704           if ( pScene == NULL )
        MOV       A,?V2
        ORL       A,?V3
        JNZ       ??zclGeneral_ProcessInScenesServer_36
// 2705           {
// 2706             // Haven't been added yet
// 2707             pScene = &scene;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
// 2708           }
// 2709 
// 2710           if ( pCBs->pfnSceneStoreReq )
??zclGeneral_ProcessInScenesServer_36:
        MOV       A,?V6
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        MOV       DPH,A
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_240:
        JZ        ??zclGeneral_ProcessInScenesServer_37
// 2711           {
// 2712             zclSceneReq_t req;
// 2713 
// 2714             req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_77:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
// 2715             req.scene = pScene;
??CrossCallReturnLabel_212:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 2716 
// 2717             // Get the latest Scene info
// 2718             if ( pCBs->pfnSceneStoreReq( &req ) )
        ; Setup parameters for indirect call
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?CALL_IND
        MOV       A,R1
        JZ        ??zclGeneral_ProcessInScenesServer_37
// 2719             {
// 2720               sceneChanged = TRUE;
        SETB      ?VB.0
// 2721             }
// 2722           }
// 2723 
// 2724           if ( pScene == &scene )
??zclGeneral_ProcessInScenesServer_37:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       A,?V2
        XRL       A,R0
        JNZ       ??zclGeneral_ProcessInScenesServer_38
        MOV       A,?V3
        XRL       A,R1
??zclGeneral_ProcessInScenesServer_38:
        JNZ       ??zclGeneral_ProcessInScenesServer_39
// 2725           {
// 2726             // The Scene doesn't exist so add it
// 2727             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine24 & 0xFFFF
// 2728           }
??CrossCallReturnLabel_35:
        SJMP      ??zclGeneral_ProcessInScenesServer_40
// 2729           else if ( sceneChanged )
??zclGeneral_ProcessInScenesServer_39:
        MOV       C,?VB.0
        JNC       ??zclGeneral_ProcessInScenesServer_40
// 2730           {
// 2731             // The Scene already exists so update only NV
// 2732             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2733           }
// 2734         }
        SJMP      ??zclGeneral_ProcessInScenesServer_40
// 2735         else
// 2736         {
// 2737           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_35:
        MOV       ?V0,#-0x77
        SJMP      ??zclGeneral_ProcessInScenesServer_40
// 2738         }
// 2739       }
// 2740       else
// 2741       {
// 2742         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_33:
        MOV       ?V0,#-0x7b
// 2743       }
// 2744 
// 2745       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_40:
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_15:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_250:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2746       {
// 2747         // Addressed to this device (not to a group) - send a response back
// 2748         zclGeneral_SendSceneStoreResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2749                                            status, scene.groupID, scene.ID,
// 2750                                            true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2751       }
??CrossCallReturnLabel_172:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine89_0 & 0xFFFF
??CrossCallReturnLabel_167:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x4
??zclGeneral_ProcessInScenesServer_21:
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL     `??zclGeneral_SendSceneResponse::?relay`; Banked call to: zclGeneral_SendSceneResponse
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2752       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2753       break;
// 2754 
// 2755     case COMMAND_SCENE_RECALL:
// 2756       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_6:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
// 2757       if ( pScene && pCBs->pfnSceneRecallReq )
??CrossCallReturnLabel_10:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
        MOV       A,?V6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        MOV       DPH,A
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_241:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
// 2758       {
// 2759         zclSceneReq_t req;
// 2760 
// 2761         req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_78:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
// 2762         req.scene = pScene;
??CrossCallReturnLabel_213:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 2763 
// 2764         pCBs->pfnSceneRecallReq( &req );
        ; Setup parameters for indirect call
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?CALL_IND
        LJMP      ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
// 2765       }
// 2766       // No response
// 2767       break;
// 2768 
// 2769     case COMMAND_SCENE_GET_MEMBERSHIP:
// 2770       // Find all the Scenes corresponding to the Group ID
// 2771       if ( scene.groupID == 0x0000 ||
// 2772            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_7:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_242:
        JZ        ??zclGeneral_ProcessInScenesServer_42
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_6:
        JZ        ??zclGeneral_ProcessInScenesServer_43
// 2773       {
// 2774         // Allocate space for the scene list
// 2775         sceneList = zcl_mem_alloc( ZCL_GEN_MAX_SCENES );
??zclGeneral_ProcessInScenesServer_42:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x10
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2776         if ( sceneList != NULL )
        MOV       A,R2
        ORL       A,R3
        JZ        ??zclGeneral_ProcessInScenesServer_44
// 2777         {
// 2778           sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2779                                                        scene.groupID, sceneList );
        ; Setup parameters for call to function zclGeneral_FindAllScenesForGroup
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_18:
        LCALL     `??zclGeneral_FindAllScenesForGroup::?relay`; Banked call to: zclGeneral_FindAllScenesForGroup
        MOV       A,R1
        MOV       ?V5,A
// 2780           status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
// 2781           if ( ! UNICAST_MSG( pInMsg->msg ) )
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_304:
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        JNZ       ??zclGeneral_ProcessInScenesServer_45
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine101_0 & 0xFFFF
??CrossCallReturnLabel_245:
        JZ        ??zclGeneral_ProcessInScenesServer_46
// 2782           {
// 2783             // Addressed to the Group - ONLY send a response if an entry within the
// 2784             // Scene Table corresponds to the Group ID
// 2785             if ( sceneCnt == 0 )
??zclGeneral_ProcessInScenesServer_45:
        MOV       A,?V5
        JNZ       ??zclGeneral_ProcessInScenesServer_46
        SJMP      ??zclGeneral_ProcessInScenesServer_47
// 2786             {
// 2787               sendRsp = FALSE;
// 2788             }
// 2789           }
// 2790         }
// 2791         else
// 2792         {
// 2793           // Couldn't allocate space for the scene list!
// 2794           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInScenesServer_44:
        MOV       ?V0,#-0x77
        SJMP      ??zclGeneral_ProcessInScenesServer_46
// 2795         }
// 2796       }
// 2797       else
// 2798       {
// 2799         // The Group is not in the Group Table - send a response back
// 2800         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_43:
        MOV       ?V0,#-0x7b
// 2801       }
// 2802 
// 2803 #ifdef ZCL_LIGHT_LINK_ENHANCE //ZLL allows response to unicast only
// 2804       if ( sendRsp && UNICAST_MSG( pInMsg->msg ) )
// 2805 #else
// 2806       if ( sendRsp )
// 2807 #endif //ZCL_LIGHT_LINK_ENHANCE
// 2808       {
// 2809         zclGeneral_SendSceneGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2810                                     status, zclGeneral_ScenesRemaingCapacity(), sceneCnt, sceneList,
// 2811                                     scene.groupID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInScenesServer_46:
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,R1
        MOV       R1,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine106_0 & 0xFFFF
// 2812       }
??CrossCallReturnLabel_271:
        ; Setup parameters for call to function zclGeneral_SendSceneGetMembershipResponse
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 88)
        MOV       A,?V5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV       A,#0x10
        CLR       C
        SUBB      A,R1
        MOV       R5,A
        MOV       R4,?V0
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL     `??zclGeneral_SendSceneGetMembershipResponse::?r`; Banked call to: zclGeneral_SendSceneGetMembershipResponse
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2813 
// 2814       if ( sceneList != NULL )
        MOV       A,?V2
        ORL       A,?V3
        JZ        ??zclGeneral_ProcessInScenesServer_20
// 2815         zcl_mem_free( sceneList );
??zclGeneral_ProcessInScenesServer_47:
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2816 
// 2817       stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInScenesServer_20:
        MOV       ?V4,#-0x1
// 2818       break;
        SJMP      ??zclGeneral_ProcessInScenesServer_41
// 2819 
// 2820 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2821     case COMMAND_SCENE_COPY:
// 2822       {
// 2823         uint8 mode;
// 2824         uint16 groupIDFrom, groupIDTo;
// 2825         uint8 sceneIDFrom, sceneIDTo;
// 2826 
// 2827         pData = pInMsg->pData; // different payload format
// 2828 
// 2829         mode = *pData++;
// 2830         groupIDFrom = BUILD_UINT16( pData[0], pData[1] ); // from group ID
// 2831         pData += 2;
// 2832         sceneIDFrom = *pData++; // from scene ID
// 2833         groupIDTo = BUILD_UINT16( pData[0], pData[1] ); // to group ID
// 2834         pData += 2;
// 2835         if ( (mode & SCENE_COPY_MODE_ALL_BIT) == 0 )
// 2836         {
// 2837           sceneIDTo = *pData++; // to scene ID
// 2838         }
// 2839 
// 2840         // Make sure the groups exist
// 2841         if ( ( aps_FindGroup( pInMsg->msg->endPoint, groupIDFrom ) != NULL ) &&
// 2842              ( aps_FindGroup( pInMsg->msg->endPoint, groupIDTo ) != NULL ) )
// 2843         {
// 2844           // Allocate space for the scene list
// 2845           sceneList = zcl_mem_alloc( (mode & SCENE_COPY_MODE_ALL_BIT) ? ZCL_GEN_MAX_SCENES : 1 );
// 2846           if ( sceneList == NULL )
// 2847           {
// 2848             status = ZCL_STATUS_INSUFFICIENT_SPACE; // Couldn't allocate space for the scene list!
// 2849           }
// 2850           else
// 2851           {
// 2852             status = ZCL_STATUS_SUCCESS;
// 2853             if ( mode & SCENE_COPY_MODE_ALL_BIT ) // Copy all scenes
// 2854             {
// 2855               sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2856                                                            groupIDFrom, sceneList );
// 2857             }
// 2858             else // Copy single scene
// 2859             {
// 2860               // Make sure the scene exists
// 2861               pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneIDFrom );
// 2862               if ( pScene != NULL )
// 2863               {
// 2864                 sceneList[0] = sceneIDFrom;
// 2865                 sceneCnt = 1;
// 2866               }
// 2867               else
// 2868               {
// 2869                 status = ZCL_STATUS_INVALID_FIELD; // Scene not found
// 2870               }
// 2871             }
// 2872           }
// 2873 
// 2874           if ( status == ZCL_STATUS_SUCCESS )
// 2875           {
// 2876             uint8 numScenesToAdd = 0;
// 2877             uint8 i;
// 2878             for ( i = 0; i < sceneCnt; i++ )
// 2879             {
// 2880               if ( zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, sceneList[i] ) == NULL )
// 2881               {
// 2882                 numScenesToAdd++;
// 2883               }
// 2884             }
// 2885             if ( zclGeneral_ScenesRemaingCapacity() >= numScenesToAdd )
// 2886             {
// 2887               // Copy the scenes
// 2888               for ( i = 0; i < sceneCnt; i++ )
// 2889               {
// 2890                 // Ignore scene ID from and scene ID to fields
// 2891                 pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneList[i] );
// 2892                 if ( pScene != NULL )
// 2893                 {
// 2894                   zclGeneral_Scene_t *pToScene;
// 2895                   scene = *pScene;
// 2896                   scene.groupID = groupIDTo;
// 2897                   scene.ID = ( (mode & SCENE_COPY_MODE_ALL_BIT) ? sceneList[i] : sceneIDTo );
// 2898 
// 2899                   pToScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2900                   if( pToScene != NULL )
// 2901                   {
// 2902                     zclGeneral_RemoveScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2903                   }
// 2904                   // Add the scene
// 2905                   zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
// 2906                 }
// 2907               }
// 2908             }
// 2909             else
// 2910             {
// 2911               status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
// 2912             }
// 2913           }
// 2914         }
// 2915         else
// 2916         {
// 2917           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
// 2918         }
// 2919 
// 2920         if ( UNICAST_MSG( pInMsg->msg ) )
// 2921         {
// 2922           if ( pScene == NULL )
// 2923           {
// 2924             pScene = &scene;
// 2925           }
// 2926           // Addressed to this device (not to a group) - send a response back
// 2927           zclGeneral_SendSceneCopyResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2928                                             status, pScene->groupID, pScene->ID,
// 2929                                             true, pInMsg->hdr.transSeqNum );
// 2930         }
// 2931 
// 2932         if ( sceneList != NULL )
// 2933         {
// 2934           zcl_mem_free( sceneList );
// 2935         }
// 2936       }
// 2937 
// 2938       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2939       break;
// 2940 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2941 
// 2942     default:
// 2943       stat = ZFailure;
??zclGeneral_ProcessInScenesServer_8:
        MOV       ?V4,#0x1
// 2944     break;
// 2945   }
// 2946 
// 2947   return ( stat );
??zclGeneral_ProcessInScenesServer_41:
        MOV       R1,?V4
        MOV       A,#0x3c
          CFI EndBlock cfiBlock449
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 2948 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock450 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 76)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock450
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine104_0:
          CFI Block cfiBlock451 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock451

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond452 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond455) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker458 Using cfiCommon1
          CFI (cfiPicker458) NoFunction
          CFI (cfiPicker458) Picker
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_140:
        RET
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiPicker458

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond459 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_27
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-4
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_117
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-4
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_118
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-4
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_119
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_120
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond464) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond464) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond464) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-4
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_121
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond465) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_122
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker467 Using cfiCommon1
          CFI (cfiPicker467) NoFunction
          CFI (cfiPicker467) Picker
        MOV       A,R6
        ADD       A,#0x6
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_144:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiPicker467

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond468 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_263
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-2
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-2
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-2
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-2
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-2
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker474 Using cfiCommon1
          CFI (cfiPicker474) NoFunction
          CFI (cfiPicker474) Picker
        MOV       A,R0
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiPicker474
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiCond475 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-2
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond478) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond483) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-2
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-2
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-2
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-2
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker488 Using cfiCommon1
          CFI (cfiPicker488) NoFunction
          CFI (cfiPicker488) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiPicker488

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond489 Using cfiCommon0
          CFI Function zclGeneral_AddScene
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker491 Using cfiCommon1
          CFI (cfiPicker491) NoFunction
          CFI (cfiPicker491) Picker
        MOV       A,?V2
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V0
        MOV       ?V5,?V1
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiPicker491

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond492 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-2
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker494 Using cfiCommon1
          CFI (cfiPicker494) NoFunction
          CFI (cfiPicker494) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ADD       A,#0x6
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiPicker494

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond495 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_272
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker497 Using cfiCommon1
          CFI (cfiPicker497) NoFunction
          CFI (cfiPicker497) Picker
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiPicker497
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiCond498 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_269
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function zclGeneral_FindScene
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-2
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-2
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-2
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker503 Using cfiCommon1
          CFI (cfiPicker503) NoFunction
          CFI (cfiPicker503) Picker
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_277:
        RET
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiPicker503

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond504 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker506 Using cfiCommon1
          CFI (cfiPicker506) NoFunction
          CFI (cfiPicker506) Picker
        LCALL     ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_284:
        LCALL     `??zclGeneral_AddScene::?relay`; Banked call to: zclGeneral_AddScene
        RET
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiPicker506

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond507 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-2
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker509 Using cfiCommon1
          CFI (cfiPicker509) NoFunction
          CFI (cfiPicker509) Picker
        MOV       R3,#0x0
        LCALL     ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_281:
        LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiPicker509

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond510 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-2
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker513 Using cfiCommon1
          CFI (cfiPicker513) NoFunction
          CFI (cfiPicker513) Picker
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_288:
        RET
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiPicker513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_17
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-4
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_18
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-4
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_7
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-4
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_8
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-4
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_9
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-4
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_10
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-4
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_0
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-4
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_1
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-4
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_2
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-4
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_3
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-4
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_4
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-4
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_5
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-4
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_6
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-4
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker528 Using cfiCommon1
          CFI (cfiPicker528) NoFunction
          CFI (cfiPicker528) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiPicker528
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiCond529 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_43
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-4
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_32
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-4
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_33
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-4
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_30
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-4
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_31
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_34
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-4
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_35
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-4
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_28
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-4
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_29
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-4
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_278
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-4
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_279
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-4
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_280
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-4
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_16
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-4
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_17
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-4
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_18
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-4
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_7
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-4
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_8
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_9
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-4
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_10
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_0
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_1
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-4
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_2
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-4
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_3
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_4
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_5
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_6
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker556 Using cfiCommon1
          CFI (cfiPicker556) NoFunction
          CFI (cfiPicker556) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiPicker556

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond557 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_278
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-2
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker559 Using cfiCommon1
          CFI (cfiPicker559) NoFunction
          CFI (cfiPicker559) Picker
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV       R3,A
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiPicker559
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiCond560 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_280
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-2
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker563 Using cfiCommon1
          CFI (cfiPicker563) NoFunction
          CFI (cfiPicker563) Picker
        LCALL     ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_289:
        LCALL     `??zclGeneral_RemoveAllScenes::?relay`; Banked call to: zclGeneral_RemoveAllScenes
        RET
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiPicker563

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond564 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-2
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-2
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker569 Using cfiCommon1
          CFI (cfiPicker569) NoFunction
          CFI (cfiPicker569) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_275:
        MOV       A,R6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiPicker569

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond570 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_7
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-2
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-2
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_287:
        LCALL     `??zclGeneral_FindScene::?relay`; Banked call to: zclGeneral_FindScene
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-2
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-2
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_4
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-2
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker582 Using cfiCommon1
          CFI (cfiPicker582) NoFunction
          CFI (cfiPicker582) Picker
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_286:
        LCALL     `??aps_FindGroup::?relay`; Banked call to: aps_FindGroup
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiPicker582
// 2949 
// 2950 /*********************************************************************
// 2951  * @fn      zclGeneral_ProcessInScenesClient
// 2952  *
// 2953  * @brief   Process in the received Scenes Command.
// 2954  *
// 2955  * @param   pInMsg - pointer to the incoming message
// 2956  *
// 2957  * @return  ZStatus_t
// 2958  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2959 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesClient:
          CFI Block cfiBlock583 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
        CODE
// 2960                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2961 {
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 65
        MOV       A,#-0x41
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V2,R4
        MOV       ?V3,R5
// 2962   zclGeneral_Scene_t scene;
// 2963   uint8 *pData = pInMsg->pData;
        LCALL     ?Subroutine40 & 0xFFFF
// 2964   uint8 nameLen;
// 2965   zclSceneRsp_t rsp;
// 2966   uint8 i;
// 2967   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_273:
        MOV       ?V10,#0x0
// 2968 
// 2969   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine68 & 0xFFFF
// 2970   zcl_memset( (uint8*)&rsp, 0, sizeof( zclSceneRsp_t ) );
// 2971 
// 2972   // Get the status field first
// 2973   rsp.status = *pData++;
??CrossCallReturnLabel_124:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine53 & 0xFFFF
// 2974 
// 2975   if ( pInMsg->hdr.commandID == COMMAND_SCENE_GET_MEMBERSHIP_RSP )
??CrossCallReturnLabel_98:
        MOV       A,?V8
        ADD       A,#0x7
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V1,A
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,#0x6
        JNZ       ??zclGeneral_ProcessInScenesClient_0
// 2976   {
// 2977     rsp.capacity = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine55 & 0xFFFF
// 2978   }
??CrossCallReturnLabel_104:
        INC       R6
        MOV       R7,DPH
// 2979 
// 2980   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesClient_0:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_292:
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine105_0 & 0xFFFF
// 2981   pData += 2;   // Move past group ID
??CrossCallReturnLabel_261:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInScenesClient_1
        INC       R7
// 2982 
// 2983   switch ( pInMsg->hdr.commandID )
??zclGeneral_ProcessInScenesClient_1:
        MOV       DPL,A
        MOV       DPH,R7
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,?V2
        ADD       A,#0x16
        MOV       ?V2,A
        JNC       ??zclGeneral_ProcessInScenesClient_2
        INC       ?V3
??zclGeneral_ProcessInScenesClient_2:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInScenesClient_3
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_4
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_3
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_3
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_3
        ADD       A,#-0x2
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesClient_5 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInScenesClient_6 & 0xFFFF
// 2984   {
// 2985     case COMMAND_SCENE_VIEW_RSP:
// 2986       // Parse the rest of the incoming message
// 2987       scene.ID = *pData++; // Not applicable to Remove All Response command
??zclGeneral_ProcessInScenesClient_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       R7,A
// 2988       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_293:
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine105_0 & 0xFFFF
// 2989       pData += 2;
// 2990       nameLen = *pData++; // Name length
??CrossCallReturnLabel_262:
        MOV       DPL,R0
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V7,A
        MOV       A,R0
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInScenesClient_7
        INC       R7
// 2991       if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
??zclGeneral_ProcessInScenesClient_7:
        MOV       A,?V7
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_ProcessInScenesClient_8
// 2992         nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV       ?V7,#0xf
// 2993 
// 2994       scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesClient_8:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V7
        MOVX      @DPTR,A
// 2995       zcl_memcpy( &(scene.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,R6
        MOV       ?V5,R7
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV       R4,?V7
        MOV       R5,#0x0
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_220:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2996 
// 2997       pData += nameLen; // move past name, use original length
        MOV       R0,?V7
        MOV       A,R6
        ADD       A,R0
        MOV       R6,A
        CLR       A
        ADDC      A,R7
        MOV       R7,A
// 2998 
// 2999       //*** Do something with the extension field(s)
// 3000 
// 3001       // Fall through to callback - break is left off intentionally
// 3002 
// 3003     case COMMAND_SCENE_ADD_RSP:
// 3004     case COMMAND_SCENE_REMOVE_RSP:
// 3005     case COMMAND_SCENE_REMOVE_ALL_RSP:
// 3006     case COMMAND_SCENE_STORE_RSP:
// 3007       if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_3:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_243:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesClient_9 & 0xFFFF
// 3008       {
// 3009         if ( pInMsg->hdr.commandID != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        XRL       A,#0x3
        JZ        ??zclGeneral_ProcessInScenesClient_10
// 3010         {
// 3011           scene.ID = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3012         }
// 3013         rsp.srcAddr = &(pInMsg->msg->srcAddr);
??zclGeneral_ProcessInScenesClient_10:
        LCALL     ?Subroutine18 & 0xFFFF
// 3014         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_24:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3015         rsp.scene = &scene;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP100_8
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
// 3016 
// 3017         pCBs->pfnSceneRsp( &rsp );
// 3018       }
??CrossCallReturnLabel_251:
        LCALL     ?CALL_IND
        LJMP      ??zclGeneral_ProcessInScenesClient_9 & 0xFFFF
// 3019       break;
// 3020 
// 3021     case COMMAND_SCENE_GET_MEMBERSHIP_RSP:
// 3022       {
// 3023         uint8 *sceneList = NULL;
??zclGeneral_ProcessInScenesClient_5:
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 3024 
// 3025         if ( rsp.status == ZCL_STATUS_SUCCESS )
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JNZ       ??zclGeneral_ProcessInScenesClient_11
// 3026         {
// 3027           uint8 sceneCnt = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V6,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 3028 
// 3029           if ( sceneCnt > 0 )
        MOV       A,?V6
        JZ        ??zclGeneral_ProcessInScenesClient_11
// 3030           {
// 3031             // Allocate space for the scene list
// 3032             sceneList = zcl_mem_alloc( sceneCnt );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ?Subroutine62 & 0xFFFF
// 3033             if ( sceneList != NULL )
??CrossCallReturnLabel_112:
        JZ        ??zclGeneral_ProcessInScenesClient_11
// 3034             {
// 3035               rsp.sceneCnt = sceneCnt;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V6
        MOVX      @DPTR,A
// 3036               for ( i = 0; i < sceneCnt; i++ )
        MOV       R0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesClient_12
// 3037                 sceneList[i] = *pData++;
??zclGeneral_ProcessInScenesClient_13:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,?V4
        ADD       A,R2
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_99:
        INC       R0
??zclGeneral_ProcessInScenesClient_12:
        MOV       A,R0
        CLR       C
        SUBB      A,?V6
        JC        ??zclGeneral_ProcessInScenesClient_13
// 3038             }
// 3039           }
// 3040         }
// 3041 
// 3042         if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_11:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_244:
        JZ        ??zclGeneral_ProcessInScenesClient_14
// 3043         {
// 3044           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine18 & 0xFFFF
// 3045           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_25:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3046           rsp.sceneList = sceneList;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 3047           rsp.scene = &scene;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP100_8
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine20 & 0xFFFF
// 3048 
// 3049           pCBs->pfnSceneRsp( &rsp);
// 3050         }
??CrossCallReturnLabel_252:
        LCALL     ?CALL_IND
// 3051 
// 3052         if ( sceneList != NULL )
??zclGeneral_ProcessInScenesClient_14:
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??zclGeneral_ProcessInScenesClient_9
// 3053         {
// 3054           zcl_mem_free( sceneList );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_ProcessInScenesClient_9
// 3055         }
// 3056       }
// 3057       break;
// 3058 
// 3059     default:
// 3060       stat = ZFailure;
??zclGeneral_ProcessInScenesClient_6:
        MOV       ?V10,#0x1
// 3061       break;
// 3062   }
// 3063 
// 3064   return ( stat );
??zclGeneral_ProcessInScenesClient_9:
        MOV       R1,?V10
        MOV       A,#0x41
        LJMP      ?Subroutine3 & 0xFFFF
// 3065 }
          CFI EndBlock cfiBlock583

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond584 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0xa
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
        RET
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond587 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_111
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker589 Using cfiCommon1
          CFI (cfiPicker589) NoFunction
          CFI (cfiPicker589) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiPicker589

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond590 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-2
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker593 Using cfiCommon1
          CFI (cfiPicker593) NoFunction
          CFI (cfiPicker593) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_137:
        INC       DPTR
        RET
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiPicker593

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond594 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker596 Using cfiCommon1
          CFI (cfiPicker596) NoFunction
          CFI (cfiPicker596) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_138:
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        RET
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiPicker596

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond597 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_294
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiCond600 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_290
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-2
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-2
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-2
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-2
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker606 Using cfiCommon1
          CFI (cfiPicker606) NoFunction
          CFI (cfiPicker606) Picker
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiPicker606

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond607 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker609 Using cfiCommon1
          CFI (cfiPicker609) NoFunction
          CFI (cfiPicker609) Picker
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiPicker609

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond610 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_23
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-4
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_24
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-4
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_25
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-4
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker614 Using cfiCommon1
          CFI (cfiPicker614) NoFunction
          CFI (cfiPicker614) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_142:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiPicker614

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond615 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_22
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-6
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_23
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-6
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_24
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-6
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_25
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-6
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker620 Using cfiCommon1
          CFI (cfiPicker620) NoFunction
          CFI (cfiPicker620) Picker
        MOVX      A,@DPTR
        ADD       A,#0x6
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        RET
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiPicker620
// 3066 #endif // ZCL_SCENES
// 3067 
// 3068 #ifdef ZCL_ON_OFF
// 3069 /*********************************************************************
// 3070  * @fn      zclGeneral_ProcessInCmdOnOff
// 3071  *
// 3072  * @brief   Process in the received On/Off Command.
// 3073  *
// 3074  * @param   pInMsg - pointer to the incoming message
// 3075  *
// 3076  * @return  ZStatus_t
// 3077  */
// 3078 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg,
// 3079                                             zclGeneral_AppCallbacks_t *pCBs )
// 3080 {
// 3081   ZStatus_t stat = ZSuccess;
// 3082 
// 3083   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3084   {
// 3085     switch ( pInMsg->hdr.commandID )
// 3086     {
// 3087       case COMMAND_OFF:
// 3088       case COMMAND_ON:
// 3089       case COMMAND_TOGGLE:
// 3090         if ( pCBs->pfnOnOff )
// 3091         {
// 3092           pCBs->pfnOnOff( pInMsg->hdr.commandID );
// 3093         }
// 3094         break;
// 3095 
// 3096 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 3097       case COMMAND_OFF_WITH_EFFECT:
// 3098         if ( pCBs->pfnOnOff_OffWithEffect )
// 3099         {
// 3100           zclOffWithEffect_t cmd;
// 3101 
// 3102           cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3103           cmd.effectId = pInMsg->pData[0];
// 3104           cmd.effectVariant = pInMsg->pData[1];
// 3105 
// 3106           pCBs->pfnOnOff_OffWithEffect( &cmd );
// 3107         }
// 3108         break;
// 3109 
// 3110       case COMMAND_ON_WITH_RECALL_GLOBAL_SCENE:
// 3111         if ( pCBs->pfnOnOff_OnWithRecallGlobalScene )
// 3112         {
// 3113           pCBs->pfnOnOff_OnWithRecallGlobalScene();
// 3114         }
// 3115         break;
// 3116 
// 3117       case COMMAND_ON_WITH_TIMED_OFF:
// 3118         if ( pCBs->pfnOnOff_OnWithTimedOff )
// 3119         {
// 3120           zclOnWithTimedOff_t cmd;
// 3121 
// 3122           cmd.onOffCtrl.byte = pInMsg->pData[0];
// 3123           cmd.onTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 3124           cmd.offWaitTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
// 3125           pCBs->pfnOnOff_OnWithTimedOff( &cmd );
// 3126         }
// 3127         break;
// 3128 #endif // ZCL_LIGHT_LINK_ENHANCE
// 3129 
// 3130       default:
// 3131         stat = ZFailure;
// 3132         break;
// 3133     }
// 3134   }
// 3135   // no Client command
// 3136 
// 3137   return ( stat );
// 3138 }
// 3139 #endif // ZCL_ON_OFF
// 3140 
// 3141 #ifdef ZCL_LEVEL_CTRL
// 3142 /*********************************************************************
// 3143  * @fn      zclGeneral_ProcessInLevelControl
// 3144  *
// 3145  * @brief   Process in the received Level Control Command.
// 3146  *
// 3147  * @param   pInMsg - pointer to the incoming message
// 3148  *
// 3149  * @return  ZStatus_t
// 3150  */
// 3151 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg,
// 3152                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3153 {
// 3154   uint8 withOnOff = FALSE;
// 3155   ZStatus_t stat = ZSuccess;
// 3156 
// 3157   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3158   {
// 3159     switch ( pInMsg->hdr.commandID )
// 3160     {
// 3161       case COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF:
// 3162         withOnOff = TRUE;
// 3163         // fall through
// 3164       case COMMAND_LEVEL_MOVE_TO_LEVEL:
// 3165         if ( pCBs->pfnLevelControlMoveToLevel )
// 3166         {
// 3167           zclLCMoveToLevel_t cmd;
// 3168 
// 3169           cmd.level = pInMsg->pData[0];
// 3170 
// 3171           if ( ( cmd.level >= ATTR_LEVEL_MIN_LEVEL ) &&
// 3172                ( cmd.level <= ATTR_LEVEL_MAX_LEVEL ) )
// 3173           {
// 3174             cmd.transitionTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 3175             cmd.withOnOff = withOnOff;
// 3176 
// 3177             pCBs->pfnLevelControlMoveToLevel( &cmd );
// 3178           }
// 3179           else
// 3180           {
// 3181             // level range requested is invalid
// 3182             stat = ZCL_STATUS_INVALID_VALUE;
// 3183           }
// 3184         }
// 3185         break;
// 3186 
// 3187       case COMMAND_LEVEL_MOVE_WITH_ON_OFF:
// 3188         withOnOff = TRUE;
// 3189         // fall through
// 3190       case COMMAND_LEVEL_MOVE:
// 3191         if ( pCBs->pfnLevelControlMove )
// 3192         {
// 3193           zclLCMove_t cmd;
// 3194 
// 3195           cmd.moveMode = pInMsg->pData[0];
// 3196           cmd.rate = pInMsg->pData[1];
// 3197           cmd.withOnOff = withOnOff;
// 3198 
// 3199           pCBs->pfnLevelControlMove( &cmd );
// 3200         }
// 3201         break;
// 3202 
// 3203       case COMMAND_LEVEL_STEP_WITH_ON_OFF:
// 3204         withOnOff = TRUE;
// 3205         // fall through
// 3206       case COMMAND_LEVEL_STEP:
// 3207         if ( pCBs->pfnLevelControlStep )
// 3208         {
// 3209           zclLCStep_t cmd;
// 3210 
// 3211           cmd.stepMode = pInMsg->pData[0];
// 3212           cmd.amount =  pInMsg->pData[1];
// 3213           cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
// 3214           cmd.withOnOff = withOnOff;
// 3215 
// 3216           pCBs->pfnLevelControlStep( &cmd );
// 3217         }
// 3218         break;
// 3219 
// 3220       case COMMAND_LEVEL_STOP:
// 3221       case COMMAND_LEVEL_STOP_WITH_ON_OFF:
// 3222         // Both Stop commands are identical
// 3223         if ( pCBs->pfnLevelControlStop )
// 3224         {
// 3225           pCBs->pfnLevelControlStop();
// 3226         }
// 3227         break;
// 3228 
// 3229       default:
// 3230         stat = ZFailure;
// 3231         break;
// 3232     }
// 3233   }
// 3234   // no Client command
// 3235 
// 3236   return ( stat );
// 3237 }
// 3238 #endif // ZCL_LEVEL_CTRL
// 3239 
// 3240 #ifdef ZCL_ALARMS
// 3241 /*********************************************************************
// 3242  * @fn      zclGeneral_AddAlarm
// 3243  *
// 3244  * @brief   Add an alarm for a cluster
// 3245  *
// 3246  * @param   endpoint -
// 3247  * @param   alarm - new alarm item
// 3248  *
// 3249  * @return  ZStatus_t
// 3250  */
// 3251 ZStatus_t zclGeneral_AddAlarm( uint8 endpoint, zclGeneral_Alarm_t *alarm )
// 3252 {
// 3253   zclGenAlarmItem_t *pNewItem;
// 3254   zclGenAlarmItem_t *pLoop;
// 3255 
// 3256   // Fill in the new profile list
// 3257   pNewItem = zcl_mem_alloc( sizeof( zclGenAlarmItem_t ) );
// 3258   if ( pNewItem == NULL )
// 3259     return ( ZMemError );
// 3260 
// 3261   // Fill in the plugin record.
// 3262   pNewItem->next = (zclGenAlarmItem_t *)NULL;
// 3263   pNewItem->endpoint =  endpoint;
// 3264   zcl_memcpy( (uint8*)(&pNewItem->alarm), (uint8*)alarm, sizeof ( zclGeneral_Alarm_t ) );
// 3265 
// 3266   // Find spot in list
// 3267   if (  zclGenAlarmTable == NULL )
// 3268   {
// 3269     zclGenAlarmTable = pNewItem;
// 3270   }
// 3271   else
// 3272   {
// 3273     // Look for end of list
// 3274     pLoop = zclGenAlarmTable;
// 3275     while ( pLoop->next != NULL )
// 3276       pLoop = pLoop->next;
// 3277 
// 3278     // Put new item at end of list
// 3279     pLoop->next = pNewItem;
// 3280   }
// 3281 
// 3282   return ( ZSuccess );
// 3283 }
// 3284 
// 3285 /*********************************************************************
// 3286  * @fn      zclGeneral_FindAlarm
// 3287  *
// 3288  * @brief   Find an alarm with alarmCode and clusterID
// 3289  *
// 3290  * @param   endpoint -
// 3291  * @param   groupID - what group the scene belongs to
// 3292  * @param   sceneID - ID to look for scene
// 3293  *
// 3294  * @return  a pointer to the alarm information, NULL if not found
// 3295  */
// 3296 zclGeneral_Alarm_t *zclGeneral_FindAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3297 {
// 3298   zclGenAlarmItem_t *pLoop;
// 3299 
// 3300   // Look for the alarm
// 3301   pLoop = zclGenAlarmTable;
// 3302   while ( pLoop )
// 3303   {
// 3304     if ( pLoop->endpoint == endpoint &&
// 3305          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3306     {
// 3307       return ( &(pLoop->alarm) );
// 3308     }
// 3309     pLoop = pLoop->next;
// 3310   }
// 3311 
// 3312   return ( (zclGeneral_Alarm_t *)NULL );
// 3313 }
// 3314 
// 3315 /*********************************************************************
// 3316  * @fn      zclGeneral_FindEarliestAlarm
// 3317  *
// 3318  * @brief   Find an alarm with the earliest timestamp
// 3319  *
// 3320  * @param   endpoint -
// 3321  *
// 3322  * @return  a pointer to the alarm information, NULL if not found
// 3323  */
// 3324 zclGeneral_Alarm_t *zclGeneral_FindEarliestAlarm( uint8 endpoint )
// 3325 {
// 3326   zclGenAlarmItem_t *pLoop;
// 3327   zclGenAlarmItem_t earliestAlarm;
// 3328   zclGenAlarmItem_t *pEarliestAlarm = &earliestAlarm;
// 3329 
// 3330   pEarliestAlarm->alarm.timeStamp = 0xFFFFFFFF;
// 3331 
// 3332   // Look for alarm with earliest time
// 3333   pLoop = zclGenAlarmTable;
// 3334   while ( pLoop )
// 3335   {
// 3336     if ( pLoop->endpoint == endpoint &&
// 3337          pLoop->alarm.timeStamp < pEarliestAlarm->alarm.timeStamp )
// 3338     {
// 3339       pEarliestAlarm = pLoop;
// 3340     }
// 3341     pLoop = pLoop->next;
// 3342   }
// 3343 
// 3344   if ( pEarliestAlarm->alarm.timeStamp != 0xFFFFFFFF )
// 3345     return ( &(pEarliestAlarm->alarm) );
// 3346 
// 3347   // No alarm
// 3348   return ( (zclGeneral_Alarm_t *)NULL );
// 3349 }
// 3350 
// 3351 /*********************************************************************
// 3352  * @fn      zclGeneral_ResetAlarm
// 3353  *
// 3354  * @brief   Remove an alarm with alarmCode and clusterID
// 3355  *
// 3356  * @param   endpoint -
// 3357  * @param   alarmCode -
// 3358  * @param   clusterID -
// 3359  *
// 3360  * @return  TRUE if removed, FALSE if not found
// 3361  */
// 3362 void zclGeneral_ResetAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3363 {
// 3364   zclGenAlarmItem_t *pLoop;
// 3365   zclGenAlarmItem_t *pPrev;
// 3366 
// 3367   // Look for end of list
// 3368   pLoop = zclGenAlarmTable;
// 3369   pPrev = NULL;
// 3370   while ( pLoop )
// 3371   {
// 3372     if ( pLoop->endpoint == endpoint &&
// 3373          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3374     {
// 3375       if ( pPrev == NULL )
// 3376         zclGenAlarmTable = pLoop->next;
// 3377       else
// 3378         pPrev->next = pLoop->next;
// 3379 
// 3380       // Free the memory
// 3381       zcl_mem_free( pLoop );
// 3382 
// 3383       // Notify the Application so that if the alarm condition still active then
// 3384       // a new notification will be generated, and a new alarm record will be
// 3385       // added to the alarm log
// 3386       // zclGeneral_NotifyReset( alarmCode, clusterID ); // callback function?
// 3387       return;
// 3388     }
// 3389     pPrev = pLoop;
// 3390     pLoop = pLoop->next;
// 3391   }
// 3392 }
// 3393 
// 3394 /*********************************************************************
// 3395  * @fn      zclGeneral_ResetAllAlarms
// 3396  *
// 3397  * @brief   Remove all alarms with endpoint
// 3398  *
// 3399  * @param   endpoint -
// 3400  * @param   notifyApp -
// 3401  *
// 3402  * @return  none
// 3403  */
// 3404 void zclGeneral_ResetAllAlarms( uint8 endpoint, uint8 notifyApp )
// 3405 {
// 3406   zclGenAlarmItem_t *pLoop;
// 3407   zclGenAlarmItem_t *pPrev;
// 3408   zclGenAlarmItem_t *pNext;
// 3409 
// 3410   // Look for end of list
// 3411   pLoop = zclGenAlarmTable;
// 3412   pPrev = NULL;
// 3413   while ( pLoop )
// 3414   {
// 3415     if (  pLoop->endpoint == endpoint )
// 3416     {
// 3417       if ( pPrev == NULL )
// 3418         zclGenAlarmTable = pLoop->next;
// 3419       else
// 3420         pPrev->next = pLoop->next;
// 3421 
// 3422       pNext = pLoop->next;
// 3423 
// 3424       // Free the memory
// 3425       zcl_mem_free( pLoop );
// 3426 
// 3427       pLoop = pNext;
// 3428     }
// 3429     else
// 3430     {
// 3431       pPrev = pLoop;
// 3432       pLoop = pLoop->next;
// 3433     }
// 3434   }
// 3435 
// 3436   if ( notifyApp )
// 3437   {
// 3438     // Notify the Application so that if any alarm conditions still active then
// 3439     // a new notification will be generated, and a new alarm record will be
// 3440     // added to the alarm log
// 3441     // zclGeneral_NotifyResetAll(); // callback function?
// 3442   }
// 3443 }
// 3444 
// 3445 /*********************************************************************
// 3446  * @fn      zclGeneral_ProcessInAlarmsServer
// 3447  *
// 3448  * @brief   Process in the received Alarms Command.
// 3449  *
// 3450  * @param   pInMsg - pointer to the incoming message
// 3451  *
// 3452  * @return  ZStatus_t
// 3453  */
// 3454 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg,
// 3455                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3456 {
// 3457   zclAlarm_t alarm;
// 3458   zclGeneral_Alarm_t *pAlarm;
// 3459   uint8 *pData = pInMsg->pData;
// 3460   ZStatus_t stat = ZSuccess;
// 3461 
// 3462   switch ( pInMsg->hdr.commandID )
// 3463   {
// 3464     case COMMAND_ALARMS_RESET:
// 3465       if ( pCBs->pfnAlarm )
// 3466       {
// 3467         alarm.cmdID = pInMsg->hdr.commandID;
// 3468         alarm.alarmCode = pData[0];
// 3469         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3470 
// 3471         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3472       }
// 3473       else
// 3474       {
// 3475         stat = ZCL_STATUS_FAILURE;
// 3476       }
// 3477       break;
// 3478 
// 3479     case COMMAND_ALARMS_RESET_ALL:
// 3480       if ( pCBs->pfnAlarm )
// 3481       {
// 3482         alarm.cmdID = pInMsg->hdr.commandID;
// 3483 
// 3484         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3485       }
// 3486       else
// 3487       {
// 3488         stat = ZCL_STATUS_FAILURE;
// 3489       }
// 3490       break;
// 3491 
// 3492     case COMMAND_ALARMS_GET:
// 3493       if ( pCBs->pfnAlarm )
// 3494       {
// 3495         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3496         alarm.cmdID = pInMsg->hdr.commandID;
// 3497 
// 3498         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3499 
// 3500         pAlarm = zclGeneral_FindEarliestAlarm( pInMsg->msg->endPoint );
// 3501         if ( pAlarm )
// 3502         {
// 3503           // Send a response back
// 3504           zclGeneral_SendAlarmGetResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3505                                            ZCL_STATUS_SUCCESS, pAlarm->code,
// 3506                                            pAlarm->clusterID, pAlarm->timeStamp,
// 3507                                            true, pInMsg->hdr.transSeqNum );
// 3508           // Remove the entry from the Alarm table
// 3509           zclGeneral_ResetAlarm( pInMsg->msg->endPoint, pAlarm->code, pAlarm->clusterID );
// 3510         }
// 3511         else
// 3512         {
// 3513           // Send a response back
// 3514           zclGeneral_SendAlarmGetResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3515                                            ZCL_STATUS_NOT_FOUND, 0, 0, 0,
// 3516                                            true, pInMsg->hdr.transSeqNum );
// 3517         }
// 3518         stat = ZCL_STATUS_CMD_HAS_RSP;
// 3519       }
// 3520       else
// 3521       {
// 3522         stat = ZCL_STATUS_FAILURE;
// 3523       }
// 3524       break;
// 3525 
// 3526     case COMMAND_ALARMS_RESET_LOG:
// 3527       if ( pCBs->pfnAlarm )
// 3528       {
// 3529         alarm.cmdID = pInMsg->hdr.commandID;
// 3530 
// 3531         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3532 
// 3533         zclGeneral_ResetAllAlarms( pInMsg->msg->endPoint, FALSE );
// 3534       }
// 3535       else
// 3536       {
// 3537         stat = ZCL_STATUS_FAILURE;
// 3538       }
// 3539       break;
// 3540 
// 3541 #ifdef SE_UK_EXT
// 3542     case COMMAND_ALARMS_PUBLISH_EVENT_LOG:
// 3543       if ( pCBs->pfnPublishEventLog )
// 3544       {
// 3545         zclPublishEventLog_t eventLog;
// 3546 
// 3547         eventLog.logID = *pData++;
// 3548         eventLog.cmdIndex = *pData++;
// 3549         eventLog.totalCmds = *pData++;
// 3550 
// 3551         // First try to find out number of Sub Log Payloads
// 3552         eventLog.numSubLogs = (pInMsg->pDataLen-3)/(1+4); // event ID + event time
// 3553         if ( eventLog.numSubLogs > 0 )
// 3554         {
// 3555           // Try to alloc space for Log Payload
// 3556           eventLog.pLogs = (zclEventLogPayload_t *)zcl_mem_alloc( sizeof( zclEventLogPayload_t ) *
// 3557                                                                    eventLog.numSubLogs );
// 3558           if ( eventLog.pLogs != NULL )
// 3559           {
// 3560             // Copy Log Payload
// 3561             for ( uint8 i = 0; i < eventLog.numSubLogs; i++ )
// 3562             {
// 3563               eventLog.pLogs[i].eventId = *pData++;
// 3564               eventLog.pLogs[i].eventTime = zcl_build_uint32( pData, 4 );
// 3565               pData += 4;
// 3566             }
// 3567           }
// 3568           else
// 3569           {
// 3570             stat = ZCL_STATUS_SOFTWARE_FAILURE;
// 3571           }
// 3572         }
// 3573         else
// 3574         {
// 3575           eventLog.pLogs = NULL;
// 3576         }
// 3577 
// 3578         if ( stat == ZSuccess )
// 3579         {
// 3580           pCBs->pfnPublishEventLog( &(pInMsg->msg->srcAddr), &eventLog );
// 3581         }
// 3582 
// 3583         if ( eventLog.pLogs != NULL )
// 3584         {
// 3585           zcl_mem_free( eventLog.pLogs );
// 3586         }
// 3587       }
// 3588       break;
// 3589 #endif // SE_UK_EXT
// 3590 
// 3591     default:
// 3592       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3593       break;
// 3594   }
// 3595 
// 3596   return ( stat );
// 3597 }
// 3598 
// 3599 /*********************************************************************
// 3600  * @fn      zclGeneral_ProcessInAlarmsClient
// 3601  *
// 3602  * @brief   Process in the received Alarms Command.
// 3603  *
// 3604  * @param   pInMsg - pointer to the incoming message
// 3605  *
// 3606  * @return  ZStatus_t
// 3607  */
// 3608 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg,
// 3609                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3610 {
// 3611   uint8 *pData = pInMsg->pData;
// 3612   zclAlarm_t alarm;
// 3613   ZStatus_t stat = ZSuccess;
// 3614 
// 3615   zcl_memset( (uint8*)&alarm, 0, sizeof( zclAlarm_t ) );
// 3616 
// 3617   switch ( pInMsg->hdr.commandID )
// 3618   {
// 3619     case COMMAND_ALARMS_ALARM:
// 3620       if ( pCBs->pfnAlarm )
// 3621       {
// 3622         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3623         alarm.cmdID = pInMsg->hdr.commandID;
// 3624         alarm.alarmCode = pData[0];
// 3625         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3626 
// 3627         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3628       }
// 3629       else
// 3630       {
// 3631         stat = ZCL_STATUS_FAILURE;
// 3632       }
// 3633       break;
// 3634 
// 3635     case COMMAND_ALARMS_GET_RSP:
// 3636       if ( pCBs->pfnAlarm )
// 3637       {
// 3638         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3639         alarm.cmdID = pInMsg->hdr.commandID;
// 3640         alarm.alarmCode = *pData++;
// 3641         alarm.clusterID = BUILD_UINT16( pData[0], pData[1] );
// 3642 
// 3643         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3644       }
// 3645       else
// 3646       {
// 3647         stat = ZCL_STATUS_FAILURE;
// 3648       }
// 3649       break;
// 3650 
// 3651 #ifdef SE_UK_EXT
// 3652     case COMMAND_ALARMS_GET_EVENT_LOG:
// 3653       if ( pCBs->pfnGetEventLog )
// 3654       {
// 3655         zclGetEventLog_t eventLog;
// 3656 
// 3657         eventLog.logID = *pData++;
// 3658         eventLog.startTime = zcl_build_uint32( pData, 4 );
// 3659         pData += 4;
// 3660         eventLog.endTime = zcl_build_uint32( pData, 4 );
// 3661         pData += 4;
// 3662         eventLog.numEvents = *pData;
// 3663 
// 3664         pCBs->pfnGetEventLog( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 3665                               &eventLog, pInMsg->hdr.transSeqNum );
// 3666       }
// 3667       break;
// 3668 #endif // SE_UK_EXT
// 3669 
// 3670     default:
// 3671       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3672       break;
// 3673   }
// 3674 
// 3675   return ( stat );
// 3676 }
// 3677 #endif // ZCL_ALARMS
// 3678 
// 3679 #ifdef ZCL_LOCATION
// 3680 /*********************************************************************
// 3681  * @fn      zclGeneral_ProcessInLocationServer
// 3682  *
// 3683  * @brief   Process in the received Location Command.
// 3684  *
// 3685  * @param   pInMsg - pointer to the incoming message
// 3686  *
// 3687  * @return  ZStatus_t
// 3688  */
// 3689 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg,
// 3690                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3691 {
// 3692   uint8 *pData = pInMsg->pData;
// 3693   zclLocation_t cmd;
// 3694   ZStatus_t stat = ZSuccess;
// 3695 
// 3696   zcl_memset( (uint8*)&cmd, 0, sizeof( zclLocation_t ) );
// 3697 
// 3698   switch ( pInMsg->hdr.commandID )
// 3699   {
// 3700     case COMMAND_LOCATION_SET_ABSOLUTE:
// 3701       cmd.un.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3702       pData += 2;
// 3703       cmd.un.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3704       pData += 2;
// 3705       cmd.un.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3706       pData += 2;
// 3707       cmd.un.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3708       pData += 2;
// 3709       cmd.un.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3710 
// 3711       if ( pCBs->pfnLocation )
// 3712       {
// 3713         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3714         cmd.cmdID = pInMsg->hdr.commandID;
// 3715 
// 3716         // Update the absolute location info
// 3717         pCBs->pfnLocation( &cmd );
// 3718       }
// 3719       break;
// 3720 
// 3721     case COMMAND_LOCATION_SET_DEV_CFG:
// 3722       cmd.un.devCfg.power = BUILD_UINT16( pData[0], pData[1] );
// 3723       pData += 2;
// 3724       cmd.un.devCfg.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3725       pData += 2;
// 3726       cmd.un.devCfg.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3727       pData += 2;
// 3728       cmd.un.devCfg.numMeasurements = *pData++;
// 3729       cmd.un.devCfg.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3730 
// 3731       if ( pCBs->pfnLocation )
// 3732       {
// 3733         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3734         cmd.cmdID = pInMsg->hdr.commandID;
// 3735 
// 3736         // Update the device configuration info
// 3737         pCBs->pfnLocation( &cmd );
// 3738       }
// 3739       break;
// 3740 
// 3741     case COMMAND_LOCATION_GET_DEV_CFG:
// 3742       cmd.un.ieeeAddr = pData;
// 3743 
// 3744       if ( pCBs->pfnLocation )
// 3745       {
// 3746         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3747         cmd.cmdID = pInMsg->hdr.commandID;
// 3748         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3749 
// 3750         // Retreive the Device Configuration
// 3751         pCBs->pfnLocation( &cmd );
// 3752       }
// 3753       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3754       break;
// 3755 
// 3756     case COMMAND_LOCATION_GET_DATA:
// 3757       cmd.un.loc.bitmap.locByte = *pData++;
// 3758       cmd.un.loc.numResponses = *pData++;
// 3759 
// 3760       if ( cmd.un.loc.brdcastResponse == 0 ) // command is sent as a unicast
// 3761         zcl_memcpy( cmd.un.loc.targetAddr, pData, 8 );
// 3762 
// 3763       if ( pCBs->pfnLocation )
// 3764       {
// 3765         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3766         cmd.cmdID = pInMsg->hdr.commandID;
// 3767         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3768 
// 3769         // Retreive the Location Data
// 3770         pCBs->pfnLocation( &cmd );
// 3771       }
// 3772       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3773       break;
// 3774 
// 3775     default:
// 3776       stat = ZFailure;
// 3777       break;
// 3778   }
// 3779 
// 3780   return ( stat );
// 3781 }
// 3782 
// 3783 /*********************************************************************
// 3784  * @fn      zclGeneral_ProcessInLocationDataRsp
// 3785  *
// 3786  * @brief   Process in the received Location Command.
// 3787  *
// 3788  * @param   pInMsg - pointer to the incoming message
// 3789  *
// 3790  * @return  ZStatus_t
// 3791  */
// 3792 static void zclGeneral_ProcessInLocationDataRsp( zclIncoming_t *pInMsg,
// 3793                                                  zclGeneral_AppCallbacks_t *pCBs )
// 3794 {
// 3795   uint8 *pData = pInMsg->pData;
// 3796   zclLocationRsp_t rsp;
// 3797 
// 3798   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3799 
// 3800   if ( pCBs->pfnLocationRsp )
// 3801   {
// 3802     if ( pInMsg->hdr.commandID == COMMAND_LOCATION_DATA_RSP )
// 3803       rsp.un.loc.status = *pData++;
// 3804 
// 3805     if ( pInMsg->hdr.commandID != COMMAND_LOCATION_DATA_RSP ||
// 3806          rsp.un.loc.status == ZCL_STATUS_SUCCESS )
// 3807     {
// 3808       rsp.un.loc.data.type = *pData++;
// 3809       rsp.un.loc.data.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3810       pData += 2;
// 3811       rsp.un.loc.data.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3812       pData += 2;
// 3813 
// 3814       if ( locationType2D( rsp.un.loc.data.type ) == 0 )
// 3815       {
// 3816         rsp.un.loc.data.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3817         pData += 2;
// 3818       }
// 3819 
// 3820       if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3821       {
// 3822         rsp.un.loc.data.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3823         pData += 2;
// 3824         rsp.un.loc.data.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3825         pData += 2;
// 3826       }
// 3827 
// 3828       if ( locationTypeAbsolute( rsp.un.loc.data.type ) == 0 )
// 3829       {
// 3830         if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3831           rsp.un.loc.data.calcLoc.locationMethod = *pData++;
// 3832 
// 3833         rsp.un.loc.data.calcLoc.qualityMeasure = *pData++;
// 3834         rsp.un.loc.data.calcLoc.locationAge = BUILD_UINT16( pData[0], pData[1] );
// 3835       }
// 3836     }
// 3837 
// 3838     rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3839     rsp.cmdID = pInMsg->hdr.commandID;
// 3840 
// 3841     // Notify the Application
// 3842     pCBs->pfnLocationRsp( &rsp );
// 3843   }
// 3844 }
// 3845 
// 3846 /*********************************************************************
// 3847  * @fn      zclGeneral_ProcessInLocationClient
// 3848  *
// 3849  * @brief   Process in the received Location Command.
// 3850  *
// 3851  * @param   pInMsg - pointer to the incoming message
// 3852  *
// 3853  * @return  ZStatus_t
// 3854  */
// 3855 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg,
// 3856                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3857 {
// 3858   uint8 *pData = pInMsg->pData;
// 3859   zclLocationRsp_t rsp;
// 3860   ZStatus_t stat = ZSuccess;
// 3861 
// 3862   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3863 
// 3864   switch ( pInMsg->hdr.commandID )
// 3865   {
// 3866     case COMMAND_LOCATION_DEV_CFG_RSP:
// 3867       if ( pCBs->pfnLocationRsp )
// 3868       {
// 3869         rsp.un.devCfg.status = *pData++;
// 3870         if ( rsp.un.devCfg.status == ZCL_STATUS_SUCCESS )
// 3871         {
// 3872           rsp.un.devCfg.data.power = BUILD_UINT16( pData[0], pData[1] );
// 3873           pData += 2;
// 3874           rsp.un.devCfg.data.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3875           pData += 2;
// 3876           rsp.un.devCfg.data.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3877           pData += 2;
// 3878           rsp.un.devCfg.data.numMeasurements = *pData++;
// 3879           rsp.un.devCfg.data.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3880 
// 3881           rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3882           rsp.cmdID = pInMsg->hdr.commandID;
// 3883 
// 3884           // Notify the Application
// 3885           pCBs->pfnLocationRsp( &rsp );
// 3886         }
// 3887       }
// 3888       break;
// 3889 
// 3890     case COMMAND_LOCATION_DATA_RSP:
// 3891     case COMMAND_LOCATION_DATA_NOTIF:
// 3892     case COMMAND_LOCATION_COMPACT_DATA_NOTIF:
// 3893       zclGeneral_ProcessInLocationDataRsp( pInMsg, pCBs );
// 3894       break;
// 3895 
// 3896     case COMMAND_LOCATION_RSSI_PING:
// 3897       if ( pCBs->pfnLocationRsp )
// 3898       {
// 3899         rsp.un.locationType = *pData;
// 3900 
// 3901         rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3902         rsp.cmdID = pInMsg->hdr.commandID;
// 3903 
// 3904         // Notify the Application
// 3905         pCBs->pfnLocationRsp( &rsp );
// 3906       }
// 3907       break;
// 3908 
// 3909     default:
// 3910       stat = ZFailure;
// 3911       break;
// 3912   }
// 3913 
// 3914   return ( stat );
// 3915 }
// 3916 #endif // ZCL_LOCATION
// 3917 
// 3918 #ifdef ZCL_SCENES
// 3919 #if !defined ( ZCL_STANDALONE )
// 3920 /*********************************************************************
// 3921  * @fn      zclGeneral_ScenesInitNV
// 3922  *
// 3923  * @brief   Initialize the NV Scene Table Items
// 3924  *
// 3925  * @param   none
// 3926  *
// 3927  * @return  number of scenes
// 3928  */
// 3929 static uint8 zclGeneral_ScenesInitNV( void )
// 3930 {
// 3931   uint8  status;
// 3932   uint16 size;
// 3933 
// 3934   size = (uint16)((sizeof ( nvGenScenesHdr_t ))
// 3935                   + ( sizeof( zclGenSceneNVItem_t ) * ZCL_GEN_MAX_SCENES ));
// 3936 
// 3937   status = zcl_nv_item_init( ZCD_NV_SCENE_TABLE, size, NULL );
// 3938 
// 3939   if ( status != ZSUCCESS )
// 3940   {
// 3941     zclGeneral_ScenesSetDefaultNV();
// 3942   }
// 3943 
// 3944   return status;
// 3945 }
// 3946 #endif // ZCL_STANDALONE
// 3947 
// 3948 #if !defined ( ZCL_STANDALONE )
// 3949 /*********************************************************************
// 3950  * @fn          zclGeneral_ScenesSetDefaultNV
// 3951  *
// 3952  * @brief       Write the defaults to NV
// 3953  *
// 3954  * @param       none
// 3955  *
// 3956  * @return      none
// 3957  */
// 3958 static void zclGeneral_ScenesSetDefaultNV( void )
// 3959 {
// 3960   nvGenScenesHdr_t hdr;
// 3961 
// 3962   // Initialize the header
// 3963   hdr.numRecs = 0;
// 3964 
// 3965   // Save off the header
// 3966   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
// 3967 }
// 3968 #endif // ZCL_STANDALONE
// 3969 
// 3970 #if !defined ( ZCL_STANDALONE )
// 3971 /*********************************************************************
// 3972  * @fn          zclGeneral_ScenesWriteNV
// 3973  *
// 3974  * @brief       Save the Scene Table in NV
// 3975  *
// 3976  * @param       none
// 3977  *
// 3978  * @return      none
// 3979  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3980 static void zclGeneral_ScenesWriteNV( void )
zclGeneral_ScenesWriteNV:
          CFI Block cfiBlock621 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
        CODE
// 3981 {
        FUNCALL zclGeneral_ScenesWriteNV, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV       A,#-0xb
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 58
        MOV       A,#-0x3a
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 3982   nvGenScenesHdr_t hdr;
// 3983   zclGenSceneItem_t *pLoop;
// 3984   zclGenSceneNVItem_t item;
// 3985 
// 3986   hdr.numRecs = 0;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3987 
// 3988   // Look for end of list
// 3989   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        SJMP      ??zclGeneral_ScenesWriteNV_0
// 3990   while ( pLoop )
// 3991   {
// 3992     // Build the record
// 3993     item.endpoint = pLoop->endpoint;
??zclGeneral_ScenesWriteNV_1:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine55 & 0xFFFF
// 3994     zcl_memcpy( &(item.scene), &(pLoop->scene), sizeof ( zclGeneral_Scene_t ) );
??CrossCallReturnLabel_103:
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V0,R1
        MOV       ?V1,R2
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 3995 
// 3996     // Save the record to NV
// 3997     zcl_nv_write( ZCD_NV_SCENE_TABLE,
// 3998             (uint16)((sizeof( nvGenScenesHdr_t )) + (hdr.numRecs * sizeof ( zclGenSceneNVItem_t ))),
// 3999                     sizeof ( zclGenSceneNVItem_t ), &item );
        ; Setup parameters for call to function osal_nv_write
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV       ?V0,#0x38
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4000 
// 4001     hdr.numRecs++;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOVX      @DPTR,A
// 4002 
// 4003     pLoop = pLoop->next;
        LCALL     ?Subroutine43 & 0xFFFF
// 4004   }
??CrossCallReturnLabel_305:
        MOV       R6,A
        MOV       A,R1
??zclGeneral_ScenesWriteNV_0:
        MOV       R7,A
        MOV       A,R6
        ORL       A,R7
        JNZ       ??zclGeneral_ScenesWriteNV_1
// 4005 
// 4006   // Save off the header
// 4007   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
        ; Setup parameters for call to function osal_nv_write
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 4008 }
        MOV       A,#0x3a
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       R7,#0x3
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock621

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond622 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-2
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker624 Using cfiCommon1
          CFI (cfiPicker624) NoFunction
          CFI (cfiPicker624) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiPicker624
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiCond625 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_302
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-2
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-2
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-2
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker629 Using cfiCommon1
          CFI (cfiPicker629) NoFunction
          CFI (cfiPicker629) Picker
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_310:
        RET
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiPicker629

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond630 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function zclGeneral_SendSceneRequest
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_41
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-4
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_79
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-4
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_80
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-4
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_215
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-4
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_216
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-4
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_214
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-4
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_246
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-4
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_247
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-4
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_248
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-4
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_249
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-4
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_250
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond641) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-4
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_245
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond642) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond642) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond642) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond642) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond642) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+-4
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_228
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-4
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_230
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_231
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-4
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_232
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-4
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_233
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function zclGeneral_AddScene
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_234
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-4
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function zclGeneral_AddScene
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_235
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-4
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_229
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-4
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_236
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-4
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_237
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-4
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_238
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-4
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_239
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-4
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_240
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-4
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_241
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-4
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_242
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-4
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_243
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-4
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_244
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-4
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_304
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-4
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_305
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-4
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_302
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-4
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_303
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-4
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiPicker664 Using cfiCommon1
          CFI (cfiPicker664) NoFunction
          CFI (cfiPicker664) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        RET
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiPicker664
// 4009 #endif // ZCL_STANDALONE
// 4010 
// 4011 #if !defined ( ZCL_STANDALONE )
// 4012 /*********************************************************************
// 4013  * @fn          zclGeneral_ScenesRestoreFromNV
// 4014  *
// 4015  * @brief       Restore the Scene table from NV
// 4016  *
// 4017  * @param       none
// 4018  *
// 4019  * @return      Number of entries restored
// 4020  */
// 4021 static uint16 zclGeneral_ScenesRestoreFromNV( void )
// 4022 {
// 4023   uint16 x;
// 4024   nvGenScenesHdr_t hdr;
// 4025 
// 4026   zclGenSceneNVItem_t item;
// 4027   uint16 numAdded = 0;
// 4028 
// 4029   if ( zcl_nv_read( ZCD_NV_SCENE_TABLE, 0, sizeof(nvGenScenesHdr_t), &hdr ) == ZSuccess )
// 4030   {
// 4031     // Read in the device list
// 4032     for ( x = 0; x < hdr.numRecs; x++ )
// 4033     {
// 4034       if ( zcl_nv_read( ZCD_NV_SCENE_TABLE,
// 4035                 (uint16)(sizeof(nvGenScenesHdr_t) + (x * sizeof ( zclGenSceneNVItem_t ))),
// 4036                                   sizeof ( zclGenSceneNVItem_t ), &item ) == ZSUCCESS )
// 4037       {
// 4038         // Add the scene
// 4039         if ( zclGeneral_AddScene( item.endpoint, &(item.scene) ) == ZSuccess )
// 4040         {
// 4041           numAdded++;
// 4042         }
// 4043       }
// 4044     }
// 4045   }
// 4046 
// 4047   return ( numAdded );
// 4048 }
// 4049 #endif // ZCL_STANDALONE
// 4050 
// 4051 #if !defined ( ZCL_STANDALONE )
// 4052 /*********************************************************************
// 4053  * @fn          zclGeneral_ScenesInit
// 4054  *
// 4055  * @brief       Initialize the scenes table
// 4056  *
// 4057  * @param       none
// 4058  *
// 4059  * @return      none
// 4060  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 4061 void zclGeneral_ScenesInit( void )
zclGeneral_ScenesInit:
          CFI Block cfiBlock665 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
        CODE
// 4062 {
        FUNCALL zclGeneral_ScenesInit, osal_nv_item_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 70, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 58
        MOV       A,#-0x3a
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
// 4063   // Initialize NV items
// 4064   zclGeneral_ScenesInitNV();
        ; Setup parameters for call to function osal_nv_item_init
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       R4,#-0x7e
        MOV       R5,#0x3
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_item_init::?relay`; Banked call to: osal_nv_item_init
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV       A,R1
        JZ        ??zclGeneral_ScenesInit_0
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ??Subroutine84_0 & 0xFFFF
??CrossCallReturnLabel_147:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
// 4065 
// 4066   // Restore the Scene table
// 4067   zclGeneral_ScenesRestoreFromNV();
??zclGeneral_ScenesInit_0:
        ; Setup parameters for call to function osal_nv_read
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV       A,R1
        JNZ       ??zclGeneral_ScenesInit_1
        MOV       R6,#0x0
        MOV       R7,#0x0
        SJMP      ??zclGeneral_ScenesInit_2
??zclGeneral_ScenesInit_3:
        ; Setup parameters for call to function osal_nv_read
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       ?V0,#0x38
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       A,R6
        MOV       R0,A
        MOV       A,R7
        MOV       R1,A
        MOV       A,R0
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV       A,R1
        JNZ       ??zclGeneral_ScenesInit_4
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??zclGeneral_AddScene::?relay`; Banked call to: zclGeneral_AddScene
??zclGeneral_ScenesInit_4:
        INC       R6
        MOV       A,R6
        JNZ       ??zclGeneral_ScenesInit_2
        INC       R7
??zclGeneral_ScenesInit_2:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_89:
        CLR       C
        MOV       A,R6
        SUBB      A,R0
        MOV       A,R7
        SUBB      A,R1
        JC        ??zclGeneral_ScenesInit_3
// 4068 }
??zclGeneral_ScenesInit_1:
        MOV       A,#0x3a
        LJMP      ??Subroutine97_0 & 0xFFFF
          CFI EndBlock cfiBlock665

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond666 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function zclGeneral_ScenesInit
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker668 Using cfiCommon1
          CFI (cfiPicker668) NoFunction
          CFI (cfiPicker668) Picker
        MOV       B,#0x38
        MUL       AB
        MOV       R0,A
        MOV       R2,B
        MOV       B,#0x38
        MOV       A,R1
        MUL       AB
        ADD       A,R2
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        RET
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiPicker668
// 4069 #endif // ZCL_STANDALONE
// 4070 
// 4071 #if !defined ( ZCL_STANDALONE )
// 4072 /*********************************************************************
// 4073  * @fn          zclGeneral_ScenesSave
// 4074  *
// 4075  * @brief       Save the scenes table
// 4076  *
// 4077  * @param       none
// 4078  *
// 4079  * @return      none
// 4080  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 4081 void zclGeneral_ScenesSave( void )
zclGeneral_ScenesSave:
          CFI Block cfiBlock669 Using cfiCommon0
          CFI Function zclGeneral_ScenesSave
        CODE
// 4082 {
        FUNCALL zclGeneral_ScenesSave, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 4083   // Update NV
// 4084   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 4085 }
        LJMP      ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock669

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_RegisterCmdCallbacks::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RegisterCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentifyEZModeInvoke::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyEZModeInvoke

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentifyUpdateCommState::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyUpdateCommState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentifyQueryResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyQueryResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendAddGroupRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupGetMembershipRequest::?re`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupGetMembershipRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupViewResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupViewResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendAddSceneRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneViewRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneViewRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneGetMembershipResponse::?r`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneGetMembershipResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_HdlIncoming::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_HdlInSpecificCommands::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlInSpecificCommands

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInIdentity::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInIdentity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_AddGroup::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInGroupsServer::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInGroupsClient::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_AddScene::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_FindScene::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_FindAllScenesForGroup::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindAllScenesForGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_RemoveScene::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_RemoveAllScenes::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_CountScenes::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_CountAllScenes::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ReadSceneCountCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ReadSceneCountCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInScenesServer::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInScenesClient::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ScenesWriteNV::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesWriteNV

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ScenesInit::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ScenesSave::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesSave

        END
// 4086 #endif // ZCL_STANDALONE
// 4087 
// 4088 #endif // ZCL_SCENES
// 4089 
// 4090 /***************************************************************************
// 4091 ****************************************************************************/
// 
// 8 440 bytes in segment BANKED_CODE
//   204 bytes in segment BANK_RELAYS
//     5 bytes in segment XDATA_Z
// 
//   204 bytes of CODE     memory
// 8 440 bytes of HUGECODE memory
//     5 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
